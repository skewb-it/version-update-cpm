{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let InvalidControlScrollDirective = /*#__PURE__*/(() => {\n  class InvalidControlScrollDirective {\n    constructor(el, formGroupDir) {\n      this.el = el;\n      this.formGroupDir = formGroupDir;\n    }\n\n    onSubmit() {\n      if (this.formGroupDir.control.invalid) {\n        this.scrollToFirstInvalidControl();\n      }\n    }\n\n    scrollToFirstInvalidControl() {\n      const firstInvalidControl = this.el.nativeElement.querySelector(\".ng-invalid\");\n      this.scrollTo(firstInvalidControl);\n    }\n\n    scrollTo(el) {\n      if (el) {\n        el.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n\n  }\n\n  InvalidControlScrollDirective.ɵfac = function InvalidControlScrollDirective_Factory(t) {\n    return new (t || InvalidControlScrollDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FormGroupDirective));\n  };\n\n  InvalidControlScrollDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: InvalidControlScrollDirective,\n    selectors: [[\"\", \"appInvalidControlScroll\", \"\"]],\n    hostBindings: function InvalidControlScrollDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"ngSubmit\", function InvalidControlScrollDirective_ngSubmit_HostBindingHandler() {\n          return ctx.onSubmit();\n        });\n      }\n    }\n  });\n  return InvalidControlScrollDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}
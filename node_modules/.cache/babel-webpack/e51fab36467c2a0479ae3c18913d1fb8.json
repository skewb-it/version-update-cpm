{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/server-api-interface-service.service\";\nimport * as i3 from \"src/app/services/validation.service\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nexport let PcpAcceptChargeComponent = /*#__PURE__*/(() => {\n  class PcpAcceptChargeComponent extends WidgetComponentBase {\n    constructor(fb, _serverApi, _validationService) {\n      super(_serverApi, _validationService);\n      this.fb = fb;\n      this._serverApi = _serverApi;\n      this._validationService = _validationService;\n    }\n\n    ngOnInit() {\n      this.createFormGroup();\n    }\n\n    createFormGroup() {\n      this.wgFormGroup = this.fb.group({\n        'notesaccompnyingacceptance': ['', [Validators.required]]\n      });\n      this.wgOnInit();\n    }\n\n    setFieldData() {}\n\n    getControlData() {}\n\n    convertData(response) {}\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n  }\n\n  PcpAcceptChargeComponent.ɵfac = function PcpAcceptChargeComponent_Factory(t) {\n    return new (t || PcpAcceptChargeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i3.ValidationService));\n  };\n\n  PcpAcceptChargeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcpAcceptChargeComponent,\n    selectors: [[\"app-pcp-accept-charge\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 29,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"info-element\", \"col-12\", \"col-md-4\"], [1, \"info-element\"], [1, \"form-container\", 3, \"formGroup\"], [\"fxLayout\", \"row\"], [\"appearance\", \"outline\", \"fxFlex\", \"100\"], [\"matInput\", \"\", \"required\", \"\", \"formControlName\", \"notesaccompnyingacceptance\", \"rows\", \"4\"]],\n    template: function PcpAcceptChargeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵtext(4, \"Charge Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"INSP-123456\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1);\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"Charge Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \"\\u00A3 123456\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 1);\n        i0.ɵɵelementStart(13, \"label\");\n        i0.ɵɵtext(14, \"Accepted By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16, \"Admin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 2);\n        i0.ɵɵelementStart(18, \"label\");\n        i0.ɵɵtext(19, \"Charge Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\");\n        i0.ɵɵtext(21, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"hr\");\n        i0.ɵɵelementStart(23, \"form\", 3);\n        i0.ɵɵelementStart(24, \"div\", 4);\n        i0.ɵɵelementStart(25, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Notes accompanying acceptance\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"textarea\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"formGroup\", ctx.wgFormGroup);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.DefaultLayoutDirective, i5.MatFormField, i4.DefaultFlexDirective, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".form-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{padding:15px 15px 0}hr[_ngcontent-%COMP%]{margin-top:0}\"]\n  });\n  return PcpAcceptChargeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
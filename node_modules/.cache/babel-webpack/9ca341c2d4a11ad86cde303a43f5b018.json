{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MASTER_DATA_DOMAIN, REINSTATEMENT_TYPE } from 'src/app/constants/db.constants';\nimport { FormModeConstant } from 'src/app/constants/widget-constants';\nimport { GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/services/validation.service\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/core\";\n\nfunction CreateReinstatementFormComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reinstatementType_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", reinstatementType_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(reinstatementType_r5.displayText);\n  }\n}\n\nfunction CreateReinstatementFormComponent_mat_form_field_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 30);\n    i0.ɵɵelementStart(1, \"mat-label\");\n    i0.ɵɵtext(2, \"No of Holes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 31);\n    i0.ɵɵelementStart(4, \"mat-error\");\n    i0.ɵɵtext(5, \"Field must be valid\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateReinstatementFormComponent_mat_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const LocationType_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", LocationType_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", LocationType_r6.displayText, \"\");\n  }\n}\n\nfunction CreateReinstatementFormComponent_mat_option_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reinstatementStatus_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", reinstatementStatus_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(reinstatementStatus_r7.displayText);\n  }\n}\n\nexport let CreateReinstatementFormComponent = /*#__PURE__*/(() => {\n  class CreateReinstatementFormComponent extends WidgetComponentBase {\n    constructor(_serverApiBase, _appRepoHelperService, fb, _validationService) {\n      super(_serverApiBase, _validationService);\n      this._serverApiBase = _serverApiBase;\n      this._appRepoHelperService = _appRepoHelperService;\n      this.fb = fb;\n      this._validationService = _validationService;\n      this.arrLocationType = [];\n      this.arrReinstatementType = [];\n      this.arrReinstatementStatus = [];\n      this.showField = false;\n    }\n\n    ngOnInit() {\n      this.createFormGroup();\n      this.wgOnInit();\n    }\n\n    createFormGroup() {\n      this.wgFormGroup = this.fb.group({\n        'reinstatementType': ['', [Validators.required]],\n        'workLocationDescription': ['', [Validators.required]],\n        'locationTypes': ['', [Validators.required]],\n        'length': ['', [Validators.required, Validators.min(0.1)]],\n        'width': ['', [Validators.required, Validators.min(0.1)]],\n        'depth': ['', [Validators.required, Validators.min(0.1)]],\n        'reinstatementDateTime': ['', [Validators.required]],\n        'reinstatementState': ['', [Validators.required]],\n        'finalSite': [false, [Validators.required]],\n        'inspectionUnits': [1, [Validators.required, Validators.min(1)]],\n        'numberOfHoles': ['']\n      });\n    }\n\n    setFieldData() {\n      this.arrLocationType = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.LOCATION_TYPE.toString());\n      this.arrReinstatementType = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.REINSTATEMENT_TYPE.toString());\n\n      if (!this.dataModel.globalParameters.get('isExcavationRequired')) {\n        this.arrReinstatementType = this.arrReinstatementType.filter(reinstType => reinstType.value !== REINSTATEMENT_TYPE.EXCAVATION);\n      }\n\n      this.arrReinstatementStatus = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.REINSTATEMENT_STATUS.toString());\n    }\n\n    getControlData() {\n      return new Promise((resolve, reject) => {\n        if (this.dataModel.mode == FormModeConstant.EDIT) this.permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.REINSTATEMENT_FORM);\n        if (this.dataModel.mode == FormModeConstant.ADD) this.permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.PERMIT_FORM);\n        this.permitform = this.permitform ? this.permitform : new Object();\n\n        if (this.permitform) {\n          resolve(this.permitform);\n        } else {\n          reject(this.permitform);\n        }\n      });\n    }\n\n    convertData(response) {\n      if (this.dataModel.mode == FormModeConstant.EDIT) {\n        this.dataModel.data.reinstatementType = response.reinstatement_type;\n        this.dataModel.data.workLocationDescription = response.location_description;\n        this.dataModel.data.locationTypes = response.location_types.split(',');\n        this.dataModel.data.length = response.length;\n        this.dataModel.data.width = response.width;\n        this.dataModel.data.depth = response.depth;\n        this.dataModel.data.reinstatementDateTime = response.reinstatement_date; // this.dataModel.data.reinstatementDateTime = response.actual_end_date;\n\n        this.dataModel.data.reinstatementState = response.reinstatement_status;\n        this.dataModel.data.finalSite = response.final_reinstatement;\n        this.dataModel.data.inspectionUnits = response.inspection_units;\n        this.dataModel.data.numberOfHoles = response.number_of_holes;\n      }\n\n      if (this.dataModel.mode == FormModeConstant.ADD) {\n        this.dataModel.data.workLocationDescription = response.location_description;\n        this.dataModel.data.reinstatementDateTime = response.actual_end_date;\n      }\n\n      return this.dataModel.data;\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {\n      console.log(\"response data model\", responseDataModel);\n\n      if (responseDataModel) {\n        this.wgFormGroup.patchValue({\n          reinstatementType: responseDataModel.reinstatementType,\n          workLocationDescription: responseDataModel.workLocationDescription,\n          locationTypes: responseDataModel.locationTypes,\n          length: responseDataModel.length,\n          width: responseDataModel.width,\n          depth: responseDataModel.depth,\n          reinstatementDateTime: responseDataModel.reinstatementDateTime,\n          reinstatementState: responseDataModel.reinstatementState,\n          finalSite: responseDataModel.finalSite,\n          inspectionUnits: responseDataModel.inspectionUnits,\n          // numberOfHoles: responseDataModel.number_of_holes,\n          numberOfHoles: responseDataModel.numberOfHoles\n        });\n      }\n    }\n\n    getValue() {\n      let data = {};\n      data.reinstatement_date = this.wgFormGroup.controls.reinstatementDateTime.value;\n      data.reinstatement_status = this.wgFormGroup.controls.reinstatementState.value;\n      data.reinstatement_type = this.wgFormGroup.controls.reinstatementType.value;\n      data.length = this.wgFormGroup.controls.length.value;\n      data.depth = this.wgFormGroup.controls.depth.value;\n      data.width = this.wgFormGroup.controls.width.value;\n      data.final_reinstatement = this.wgFormGroup.controls.finalSite.value;\n      data.location_description = this.wgFormGroup.controls.workLocationDescription.value;\n      data.location_types = this.wgFormGroup.controls.locationTypes.value;\n      data.inspection_units = this.wgFormGroup.controls.inspectionUnits.value;\n      data.number_of_holes = this.wgFormGroup.controls.numberOfHoles.value; //TODO: Need to bind it to UI field\n      // data.number_of_holes = 10;\n\n      return data;\n    }\n\n    validate() {\n      this.wgFormGroup.markAllAsTouched();\n      return this.wgFormGroup.valid;\n    }\n\n    ngAfterViewInit() {\n      this.showHolesField();\n    }\n\n    showHolesField() {\n      if (this.wgFormGroup.controls.reinstatementType.value != \"excavation\") {\n        this.showField = true;\n      } else {\n        this.showField = false;\n      }\n    }\n\n  }\n\n  CreateReinstatementFormComponent.ɵfac = function CreateReinstatementFormComponent_Factory(t) {\n    return new (t || CreateReinstatementFormComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ValidationService));\n  };\n\n  CreateReinstatementFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateReinstatementFormComponent,\n    selectors: [[\"app-create-reinstatement-form\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 99,\n    vars: 10,\n    consts: [[1, \"reinstatement-form-container\"], [3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start center\", \"fxLayoutGap\", \"20px\"], [\"appearance\", \"outline\", \"fxFlex\", \"25\"], [\"formControlName\", \"reinstatementType\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", \"fxFlex\", \"20\", 4, \"ngIf\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Enter Works Location Description\", \"autocomplete\", \"off\", \"formControlName\", \"workLocationDescription\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"30\"], [\"for\", \"\", 1, \"custom-label\"], [\"required\", \"\", \"multiple\", \"\", \"formControlName\", \"locationTypes\"], [\"fxFlex\", \"70\", \"fxLayout\", \"column\"], [\"appearance\", \"outline\", \"fxFlex\", \"45\"], [\"matInput\", \"\", \"placeholder\", \"Enter Inspection Units\", \"autocomplete\", \"off\", \"formControlName\", \"inspectionUnits\", \"type\", \"number\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", \"fxLayoutGap\", \"20px\"], [\"appearance\", \"outline\", \"fxFlex\", \"30\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Enter Length\", \"autocomplete\", \"off\", \"formControlName\", \"length\"], [\"fxFlex\", \"5\"], [2, \"text-align\", \"center\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Enter Width\", \"autocomplete\", \"off\", \"formControlName\", \"width\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"Enter Depth\", \"autocomplete\", \"off\", \"formControlName\", \"depth\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"required\", \"\", \"placeholder\", \"Enter Reinstatement Date\", 3, \"matDatepicker\", \"formControl\", \"click\"], [\"matSuffix\", \"\", 3, \"for\"], [\"startDatePicker\", \"\"], [\"appearance\", \"outline\", \"fxFlex\", \"33.3\"], [\"formControlName\", \"reinstatementState\"], [\"formControlName\", \"finalSite\"], [3, \"value\"], [\"appearance\", \"outline\", \"fxFlex\", \"20\"], [\"matInput\", \"\", \"placeholder\", \"Enter No of Holes\", \"autocomplete\", \"off\", \"formControlName\", \"numberOfHoles\", \"type\", \"number\"]],\n    template: function CreateReinstatementFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Reinstatement Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-select\", 4);\n        i0.ɵɵlistener(\"selectionChange\", function CreateReinstatementFormComponent_Template_mat_select_selectionChange_6_listener() {\n          return ctx.showHolesField();\n        });\n        i0.ɵɵtemplate(7, CreateReinstatementFormComponent_mat_option_7_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-error\");\n        i0.ɵɵtext(9, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, CreateReinstatementFormComponent_mat_form_field_10_Template, 6, 0, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(11, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Works Location Description \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"mat-error\");\n        i0.ɵɵtext(16, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"hr\");\n        i0.ɵɵelementStart(18, \"div\", 9);\n        i0.ɵɵelementStart(19, \"div\", 10);\n        i0.ɵɵelementStart(20, \"label\", 11);\n        i0.ɵɵtext(21, \"Site Location Area\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Site Location Area\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-select\", 12);\n        i0.ɵɵtemplate(26, CreateReinstatementFormComponent_mat_option_26_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-error\");\n        i0.ɵɵtext(28, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 13);\n        i0.ɵɵelementStart(30, \"label\", 11);\n        i0.ɵɵtext(31, \"Inspection Units (Default is 1; Please update the number of inspection units if changed.)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\");\n        i0.ɵɵelementStart(33, \"mat-form-field\", 14);\n        i0.ɵɵelementStart(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Inspection Units \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 15);\n        i0.ɵɵelementStart(37, \"mat-error\");\n        i0.ɵɵtext(38, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"hr\");\n        i0.ɵɵelementStart(40, \"div\");\n        i0.ɵɵelementStart(41, \"label\", 11);\n        i0.ɵɵtext(42, \"Reinstatement Measurements in metres\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 16);\n        i0.ɵɵelementStart(44, \"mat-form-field\", 17);\n        i0.ɵɵelementStart(45, \"mat-label\");\n        i0.ɵɵtext(46, \"Length \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"input\", 18);\n        i0.ɵɵelementStart(48, \"mat-error\");\n        i0.ɵɵtext(49, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 19);\n        i0.ɵɵelementStart(51, \"h1\", 20);\n        i0.ɵɵtext(52, \"X\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-form-field\", 17);\n        i0.ɵɵelementStart(54, \"mat-label\");\n        i0.ɵɵtext(55, \"Width \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(56, \"input\", 21);\n        i0.ɵɵelementStart(57, \"mat-error\");\n        i0.ɵɵtext(58, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 19);\n        i0.ɵɵelementStart(60, \"h1\", 20);\n        i0.ɵɵtext(61, \"X\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"mat-form-field\", 17);\n        i0.ɵɵelementStart(63, \"mat-label\");\n        i0.ɵɵtext(64, \"Depth \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(65, \"input\", 22);\n        i0.ɵɵelementStart(66, \"mat-error\");\n        i0.ɵɵtext(67, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(68, \"hr\");\n        i0.ɵɵelementStart(69, \"div\");\n        i0.ɵɵelementStart(70, \"label\", 11);\n        i0.ɵɵtext(71, \"Reinstatement Options\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"div\", 16);\n        i0.ɵɵelementStart(73, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(74, \"mat-label\");\n        i0.ɵɵtext(75, \"Reinstatement Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"input\", 23);\n        i0.ɵɵlistener(\"click\", function CreateReinstatementFormComponent_Template_input_click_76_listener() {\n          i0.ɵɵrestoreView(_r8);\n\n          const _r3 = i0.ɵɵreference(79);\n\n          return _r3.open();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(77, \"mat-datepicker-toggle\", 24);\n        i0.ɵɵelement(78, \"mat-datepicker\", null, 25);\n        i0.ɵɵelementStart(80, \"mat-error\");\n        i0.ɵɵtext(81, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"mat-form-field\", 26);\n        i0.ɵɵelementStart(83, \"mat-label\");\n        i0.ɵɵtext(84, \"Reinstatement State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"mat-select\", 27);\n        i0.ɵɵtemplate(86, CreateReinstatementFormComponent_mat_option_86_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"mat-error\");\n        i0.ɵɵtext(88, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(89, \"mat-form-field\", 26);\n        i0.ɵɵelementStart(90, \"mat-label\");\n        i0.ɵɵtext(91, \"Registering Final Site?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"mat-select\", 28);\n        i0.ɵɵelementStart(93, \"mat-option\", 29);\n        i0.ɵɵtext(94, \"Yes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(95, \"mat-option\", 29);\n        i0.ɵɵtext(96, \"No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"mat-error\");\n        i0.ɵɵtext(98, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(79);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.wgFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrReinstatementType);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showField);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrLocationType);\n        i0.ɵɵadvance(50);\n        i0.ɵɵproperty(\"matDatepicker\", _r3)(\"formControl\", ctx.wgFormGroup.controls.reinstatementDateTime);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r3);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrReinstatementStatus);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", false);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i5.DefaultLayoutDirective, i5.DefaultLayoutAlignDirective, i5.DefaultLayoutGapDirective, i6.MatFormField, i5.DefaultFlexDirective, i6.MatLabel, i7.MatSelect, i3.NgControlStatus, i3.FormControlName, i8.NgForOf, i6.MatError, i8.NgIf, i9.MatInput, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NumberValueAccessor, i10.MatDatepickerInput, i3.FormControlDirective, i10.MatDatepickerToggle, i6.MatSuffix, i10.MatDatepicker, i11.MatOption],\n    styles: [\".map-wrapper[_ngcontent-%COMP%]{height:400px;min-width:500px;border:1px solid var(--theme-color-border-light);border-radius:4px}.pin-div[_ngcontent-%COMP%]{background:#FFFFFF 0% 0% no-repeat padding-box;border:1px solid #2B5C4169;border-radius:5px;padding:10px}.pin-div[_ngcontent-%COMP%]   .pin-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{text-align:left;font:normal normal bold 1.2rem Noto Sans;letter-spacing:0px;color:#706f6f;text-transform:uppercase;margin:0;padding:0}.pin-div[_ngcontent-%COMP%]   .pin-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;padding:0;text-align:left;font:normal normal normal 1rem Noto Sans;letter-spacing:0px;color:#58576b}.custom-label[_ngcontent-%COMP%]{margin-top:0;padding:0;text-align:left;font:normal normal bold 1.3rem Noto Sans;letter-spacing:0px;color:#58576b}.drop-zone[_ngcontent-%COMP%]{border:2px dashed #706F6F;border-radius:39px}.drop-zone[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font:normal normal bold 2rem Noto Sans;letter-spacing:0px;color:var(--theme-color)}.drop-container[_ngcontent-%COMP%]{padding:35px}.selector-control[_ngcontent-%COMP%]{border:1px solid #2B5C4169;border-radius:4px;padding:5px 5px 5px 15px}.file-selector[_ngcontent-%COMP%]   .selector-control[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{text-align:left;font:normal normal normal 1.3rem Noto Sans;letter-spacing:0px;color:#43425d;margin:0}.file-selector[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:10px;font:italic normal normal 1.3rem Noto Sans;letter-spacing:0px;color:#838296}.uploaded-images[_ngcontent-%COMP%]{margin-top:20px}.single-image-container[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:red}.single-image-container[_ngcontent-%COMP%]{height:200px;background-size:cover;border:1px solid #bbc6ef;background:#FFFFFF 0% 0% no-repeat padding-box;box-shadow:0 3px 6px #00000029;border:1px solid #BBC6EF69;border-radius:8px;background-position:center}.single-image-container[_ngcontent-%COMP%]   .mat-icon-button[_ngcontent-%COMP%]{padding:0 8px;line-height:25px;font-size:1.1rem;font:Noto Sans;background-color:#fff;border:none;border-radius:20px;margin:5px}.reinstatement-form-container[_ngcontent-%COMP%]{padding:15px 5px}\"]\n  });\n  return CreateReinstatementFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { CURRENCY_FORMAT } from 'src/app/constants/app-repo.constants';\nimport * as i0 from \"@angular/core\";\nexport let TransformCurrencyPipe = /*#__PURE__*/(() => {\n  class TransformCurrencyPipe {\n    transform(number) {\n      if (number != null && number !== '' && !isNaN(Number.parseFloat(number))) {\n        //Conver to currency number\n        let convertedNumber = new Intl.NumberFormat(CURRENCY_FORMAT.CURRENCY_LOCALE_ID.toString(), {\n          style: 'currency',\n          currency: CURRENCY_FORMAT.CURRENCY_CODE.toString()\n        }).format(number); //Add space between currency symbol and number\n\n        convertedNumber = [convertedNumber.slice(0, 1), ' ', convertedNumber.slice(1)].join('');\n        return convertedNumber;\n      }\n\n      return null;\n    }\n\n  }\n\n  TransformCurrencyPipe.ɵfac = function TransformCurrencyPipe_Factory(t) {\n    return new (t || TransformCurrencyPipe)();\n  };\n\n  TransformCurrencyPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"transformCurrency\",\n    type: TransformCurrencyPipe,\n    pure: true\n  });\n  return TransformCurrencyPipe;\n})();\nexport let TransformCurrencyPipeModule = /*#__PURE__*/(() => {\n  class TransformCurrencyPipeModule {}\n\n  TransformCurrencyPipeModule.ɵfac = function TransformCurrencyPipeModule_Factory(t) {\n    return new (t || TransformCurrencyPipeModule)();\n  };\n\n  TransformCurrencyPipeModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: TransformCurrencyPipeModule\n  });\n  TransformCurrencyPipeModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({});\n  return TransformCurrencyPipeModule;\n})();","map":null,"metadata":{},"sourceType":"module"}
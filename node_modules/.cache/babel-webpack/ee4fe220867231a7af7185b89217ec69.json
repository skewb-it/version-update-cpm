{"ast":null,"code":"import { GLOBAL_PERSISTANT_DATA } from 'src/app/constants/app-repo.constants';\nimport { MASTER_DATA_DOMAIN } from 'src/app/constants/db.constants';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/services/validation.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction GlobalFilterComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const d_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", d_r3.orgId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(d_r3.name);\n  }\n}\n\nfunction GlobalFilterComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const d_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", d_r4.contractor_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(d_r4.contractor_name);\n  }\n}\n\nfunction GlobalFilterComponent_mat_form_field_12_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const highWayAuthority_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", highWayAuthority_r6.authorityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", highWayAuthority_r6.name, \"\");\n  }\n}\n\nfunction GlobalFilterComponent_mat_form_field_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelementStart(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Highway Authority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 8);\n    i0.ɵɵlistener(\"selectionChange\", function GlobalFilterComponent_mat_form_field_12_Template_mat_select_selectionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onChangeHighwayAuthority($event.value);\n    });\n    i0.ɵɵtemplate(4, GlobalFilterComponent_mat_form_field_12_mat_option_4_Template, 2, 2, \"mat-option\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.arrHighwayAuthority);\n  }\n}\n\nexport let GlobalFilterComponent = /*#__PURE__*/(() => {\n  class GlobalFilterComponent extends WidgetComponentBase {\n    constructor(_serverApiBase, _appRepoHelperService, dialog, fb, _validationService, datePipe) {\n      super(_serverApiBase, _validationService);\n      this._serverApiBase = _serverApiBase;\n      this._appRepoHelperService = _appRepoHelperService;\n      this.dialog = dialog;\n      this.fb = fb;\n      this._validationService = _validationService;\n      this.datePipe = datePipe;\n      this.arrPromoterOrgnisation = [];\n      this.arrContractors = [];\n      this.allArrContractors = [];\n      this.arrHighwayAuthority = [];\n    }\n\n    ngOnInit() {\n      this.wgFormData = new Object();\n      this.createFormGroup();\n      this.wgOnInit();\n    }\n\n    createFormGroup() {\n      this.wgFormGroup = this.fb.group({\n        'promoterOrganisation': [''],\n        'contractor': [''],\n        'highwayAuthority': ['']\n      });\n    }\n\n    setFieldData() {\n      this.allArrContractors = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.USER_ACCESS_CONTRACTOR);\n      this.arrContractors = this.allArrContractors.filter((thing, i, arr) => {\n        return arr.indexOf(arr.find(t => t.contractor_id === thing.contractor_id)) === i;\n      });\n      this.arrPromoterOrgnisation = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.USER_ACCESS_ORG);\n      this.arrHighwayAuthority = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.HIGHWAY_AUTORITIES);\n    }\n\n    getControlData() {\n      return new Promise((resolve, rejects) => {\n        resolve(null);\n      });\n    }\n\n    convertData(response) {}\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {\n      let contracotr = this._appRepoHelperService.getGlobalPersistantData(GLOBAL_PERSISTANT_DATA.SELECTED_CONTRACTOR);\n\n      let organisation = this._appRepoHelperService.getGlobalPersistantData(GLOBAL_PERSISTANT_DATA.SELECTED_PROMOTER_ORGNISATION);\n\n      let highwayAuthority = this._appRepoHelperService.getGlobalPersistantData(GLOBAL_PERSISTANT_DATA.SELECTED_HIGHWAY_AUTHORITY);\n\n      this.wgFormGroup.controls.contractor.setValue(contracotr);\n      this.wgFormGroup.controls.promoterOrganisation.setValue(organisation);\n      this.wgFormGroup.controls.highwayAuthority.setValue(highwayAuthority);\n    }\n\n    getValue() {\n      const contractor = this.wgFormGroup.controls.contractor.value ? this.wgFormGroup.controls.contractor.value : null;\n      this.wgFormData.contractor = contractor;\n      const promoterOrganisation = this.wgFormGroup.controls.promoterOrganisation.value ? this.wgFormGroup.controls.promoterOrganisation.value : null;\n      this.wgFormData.promoterOrganisation = promoterOrganisation;\n      const highwayAuthority = this.wgFormGroup.controls.highwayAuthority.value ? this.wgFormGroup.controls.highwayAuthority.value : null;\n      this.wgFormData.highwayAuthority = highwayAuthority;\n      return this.wgFormData;\n    }\n\n    onChangePromoterOrgnisation(value) {\n      this.wgFormGroup.controls.contractor.setValue(null);\n\n      if (value.length > 0) {\n        this.arrContractors = this.allArrContractors.filter(d => {\n          return value.indexOf(d.org_id) > -1;\n        });\n        this.arrContractors = this.arrContractors.filter((thing, i, arr) => {\n          return arr.indexOf(arr.find(t => t.contractor_id === thing.contractor_id)) === i;\n        });\n      } else {\n        this.arrContractors = this.allArrContractors.filter((thing, i, arr) => {\n          return arr.indexOf(arr.find(t => t.contractor_id === thing.contractor_id)) === i;\n        });\n      }\n\n      this.emitEvent(\"ON_GLOBAL_FILTER_CHANGE\", value);\n    }\n\n    onChangeContractor(value) {\n      this.emitEvent(\"ON_GLOBAL_FILTER_CHANGE\", value);\n    }\n\n    onChangeHighwayAuthority(value) {\n      this.emitEvent(\"ON_GLOBAL_FILTER_CHANGE\", value);\n    }\n\n  }\n\n  GlobalFilterComponent.ɵfac = function GlobalFilterComponent_Factory(t) {\n    return new (t || GlobalFilterComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ValidationService), i0.ɵɵdirectiveInject(i6.DatePipe));\n  };\n\n  GlobalFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GlobalFilterComponent,\n    selectors: [[\"app-global-filter\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 13,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end center\", \"fxLayoutGap\", \"20px\"], [\"appearance\", \"outline\", 1, \"select-global-filter\"], [\"multiple\", \"\", \"formControlName\", \"promoterOrganisation\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"contractor\", \"multiple\", \"\", 3, \"selectionChange\"], [\"class\", \"select-global-filter\", \"appearance\", \"outline\", 4, \"ngIf\"], [3, \"value\"], [\"formControlName\", \"highwayAuthority\", \"multiple\", \"\", 3, \"selectionChange\"]],\n    template: function GlobalFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Promoter Organisation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-select\", 3);\n        i0.ɵɵlistener(\"selectionChange\", function GlobalFilterComponent_Template_mat_select_selectionChange_5_listener($event) {\n          return ctx.onChangePromoterOrgnisation($event.value);\n        });\n        i0.ɵɵtemplate(6, GlobalFilterComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Contractor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-select\", 5);\n        i0.ɵɵlistener(\"selectionChange\", function GlobalFilterComponent_Template_mat_select_selectionChange_10_listener($event) {\n          return ctx.onChangeContractor($event.value);\n        });\n        i0.ɵɵtemplate(11, GlobalFilterComponent_mat_option_11_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, GlobalFilterComponent_mat_form_field_12_Template, 5, 1, \"mat-form-field\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.wgFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrPromoterOrgnisation);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrContractors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tempPermission && !(ctx.dataModel.permission.highwayAuthority == \"n\"));\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i7.DefaultLayoutGapDirective, i8.MatFormField, i8.MatLabel, i9.MatSelect, i4.NgControlStatus, i4.FormControlName, i6.NgForOf, i6.NgIf, i10.MatOption],\n    styles: [\"\"]\n  });\n  return GlobalFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
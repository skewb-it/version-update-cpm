{"ast":null,"code":"import { NAVIGATION_DATA } from '../app-constants';\nimport { ElginMapDataModel } from '../modules/widget-app/elginmap/elginmap-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./server-api-interface-service.service\";\nimport * as i2 from \"./session-storage.service\";\nimport * as i3 from \"./app-repo.service\";\nexport let ElginStartUpService = /*#__PURE__*/(() => {\n  class ElginStartUpService {\n    constructor(_serverApi, _sessionStorageService, _appRepoService) {\n      this._serverApi = _serverApi;\n      this._sessionStorageService = _sessionStorageService;\n      this._appRepoService = _appRepoService;\n    }\n\n    getElginToken() {\n      return new Promise((resolve, reject) => {\n        this._serverApi.get('/api/v1/elgin/get-elgin-token').subscribe(resp => {\n          if (resp) {\n            this.SetElginToken(resp);\n            resolve(resp);\n          }\n        }, error => {\n          reject(error);\n        });\n      });\n    }\n\n    reverseGEOCode(requestData) {\n      // let requestData: any = {\n      //   \"display_point_lon\": -1.0296670348798376,\n      //   \"display_point_lat\": 51.79847914834392,\n      //   \"start_point_lon\": -1.0296670348798376,\n      //   \"start_point_lat\": 51.79847914834392,\n      //   \"geom_type\": \"POLYGON\",\n      //   \"line_coords\": \"-1.02967,51.79848,-1.01387,51.75685,-0.87311,51.79593\"\n      // };\n      return new Promise((resolve, reject) => {\n        this._serverApi.postMap(\"/geo/reverse-geocode\", requestData).subscribe(resp => {\n          if (resp) {\n            resolve(resp);\n          }\n        }, error => {\n          reject(error);\n        });\n      });\n    }\n\n    getNSGDetailsByUsrn(usrn) {\n      return new Promise((resolve, reject) => {\n        this._serverApi.get(`/api/v1/nsg/street-details/${usrn}`).subscribe(resp => {\n          if (resp) {\n            resolve(resp);\n          }\n        }, error => {\n          reject(error);\n        });\n      });\n    }\n\n    getNearestRoadbyPosition(points) {\n      return new Promise((resolve, reject) => {\n        let googleMapAPIKey = ElginMapDataModel.getInstance().optionConfig.googleAPIKey;\n\n        this._serverApi.getWithCustomBaseUrl(`https://roads.googleapis.com/v1/nearestRoads?points=${points}&key=${googleMapAPIKey}`).subscribe(resp => {\n          if (resp) {\n            resolve(resp);\n          }\n        }, error => {\n          reject(error);\n        });\n      });\n    }\n\n    SetElginToken(response) {\n      this._sessionStorageService.setObject(NAVIGATION_DATA.SESSION_TOKEN, response.elgin_token);\n    }\n\n  }\n\n  ElginStartUpService.ɵfac = function ElginStartUpService_Factory(t) {\n    return new (t || ElginStartUpService)(i0.ɵɵinject(i1.ServerApiInterfaceServiceService), i0.ɵɵinject(i2.SessionStorageService), i0.ɵɵinject(i3.AppRepoService));\n  };\n\n  ElginStartUpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ElginStartUpService,\n    factory: ElginStartUpService.ɵfac,\n    providedIn: 'root'\n  });\n  return ElginStartUpService;\n})();","map":null,"metadata":{},"sourceType":"module"}
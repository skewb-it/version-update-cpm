{"ast":null,"code":"import { PCPPermitQuickFilterConfigModel, PCPPermitQuickFilterDataModel } from 'src/app/modules/widget-app/cost-penalty-manager/pcp-quick-filter/permit-quick-filter.model';\nimport { WidgetPageBase } from 'src/app/utility/widget/widget-utility/widget-page-base';\nimport { WidgetConstants } from 'src/app/constants/widget-constants';\nimport { FILTER_TYPE, GLOBAL_PARAM_KEY, NAVIGATION_DATA } from 'src/app/app-constants';\nimport { SidebarComponent } from 'src/app/modules/shared/sidebar/sidebar.component';\nimport { DialogModel } from 'src/app/modules/shared/dialog/dialog-model';\nimport { FormControl } from '@angular/forms';\nimport { PCPFilterDataModel, PCPFilterConfigModel } from '../../../widget-app/cost-penalty-manager/pcp-filter/pcp-filter.model';\nimport { MASTER_DATA, MASTER_DATA_DOMAIN, PERMIT_ACTIONS_CONFIG } from 'src/app/constants/db.constants';\nimport { PcpFilterComponent } from '../../../widget-app/cost-penalty-manager/pcp-filter/pcp-filter.component';\nimport { GLOBAL_PERSISTANT_DATA, PRODUCT_SERVICES } from 'src/app/constants/app-repo.constants';\nimport { PcpQuickFilterComponent } from '../../../widget-app/cost-penalty-manager/pcp-quick-filter/pcp-quick-filter.component';\nimport { DialogComponent } from '../../../shared/dialog/dialog.component';\nimport { PermitNavigationDataModel } from './split-invoice-listing.model';\nimport { SplitInvoicesListComponent } from 'src/app/modules/widget-app/cost-penalty-manager/split-invoices-list/split-invoices-list.component';\nimport { SplitInvoicesListConfigModel, SplitInvoicesListDataModel, SplitInvoicesListRequestModel } from 'src/app/modules/widget-app/cost-penalty-manager/split-invoices-list/split-invoices-list.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/event-action.service\";\nimport * as i3 from \"src/app/services/session-storage.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"ngx-spinner\";\nimport * as i7 from \"src/app/services/app-repo.service\";\nimport * as i8 from \"src/app/services/app-repo-helper.service\";\nimport * as i9 from \"@angular/flex-layout/flex\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/tabs\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"../../../widget-app/cost-penalty-manager/pcp-quick-filter/pcp-quick-filter.component\";\nimport * as i15 from \"../../../widget-app/cost-penalty-manager/split-invoices-list/split-invoices-list.component\";\nimport * as i16 from \"@angular/common\";\nimport * as i17 from \"../../../shared/sidebar/sidebar.component\";\nimport * as i18 from \"../../../widget-app/cost-penalty-manager/pcp-filter/pcp-filter.component\";\n\nfunction SplitInvoiceListingComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"app-sidebar\", 21);\n    i0.ɵɵlistener(\"onSidebarClose\", function SplitInvoiceListingComponent_div_28_Template_app_sidebar_onSidebarClose_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onSidebarClosed();\n    });\n    i0.ɵɵelementContainerStart(3, 22);\n    i0.ɵɵelement(4, \"app-pcp-filter\", 15);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"dataModel\", ctx_r0.pcpFilterDataModel)(\"configModel\", ctx_r0.pcpFilterConfigModel);\n  }\n}\n\nexport let SplitInvoiceListingComponent = /*#__PURE__*/(() => {\n  class SplitInvoiceListingComponent extends WidgetPageBase {\n    constructor(_serverApi, _eventActionServiceBase, _sessionStorageService, _router, fb, _spinner, _appRepoService, _appRepoHelperService, _serverApiBase) {\n      super(_serverApi, _eventActionServiceBase, _sessionStorageService, _router, _spinner);\n      this._serverApi = _serverApi;\n      this._eventActionServiceBase = _eventActionServiceBase;\n      this._sessionStorageService = _sessionStorageService;\n      this._router = _router;\n      this.fb = fb;\n      this._spinner = _spinner;\n      this._appRepoService = _appRepoService;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._serverApiBase = _serverApiBase;\n      this.dialogModel = new DialogModel();\n      this.filterhide = true;\n      this.searchInput = new FormControl('');\n      this.PERMIT_ACTIONS_CONFIG = PERMIT_ACTIONS_CONFIG;\n      this.arrChargeType = [];\n      this.arrHighwayAuthority = [];\n      this.splitInvoicesListDataModel = SplitInvoicesListDataModel.getInstance();\n      this.splitInvoicesListConfigModel = SplitInvoicesListConfigModel.getInstance();\n      this.pcpPermitQuickFilterDataModel = PCPPermitQuickFilterDataModel.getInstance();\n      this.pcpPermitQuickFilterConfigModel = PCPPermitQuickFilterConfigModel.getInstance();\n      this.pcpFilterDataModel = PCPFilterDataModel.getInstance();\n      this.pcpFilterConfigModel = PCPFilterConfigModel.getInstance();\n    }\n\n    ngOnInit() {\n      this.bindPCPPermitQuickFilterDataModel();\n      this.bindPCPPermitQuickFilterEvents();\n      this.bindSplitInvoicesListDataModel();\n      this.bindSplitInvoicesListEvents();\n      this.bindPCPFilterDataModel();\n      this.bindPCPFilterEvents();\n    }\n\n    ngAfterViewInit() {\n      this.setComponentRefMap();\n      this.checkJourney();\n    }\n\n    setComponentRefMap() {\n      this.compRefInstancesMap.set('permitList', this.SplitInvoicesListComponent);\n      this.compRefInstancesMap.set('permitFilter', this.pcpFilterComponent);\n      this.compRefInstancesMap.set('permitQuickFilter', this.pcpQuickFilterComponent); // this.compRefInstancesMap.set(\n      //   'globalFilterComponent',\n      //   this.globalFilterComponent\n      // );\n    }\n\n    checkJourney() {\n      if (this._appRepoService.appRepo.appProductCode == PRODUCT_SERVICES.START_STOP_REGISTER_MANAGER_PRODUCT_CODE || this._appRepoService.appRepo.appProductCode == PRODUCT_SERVICES.INSPECTIONS_AND_DEFECTS_MANAGER_PRODUCT_CODE) {\n        let journeyType = this._appRepoService.appRepo.appGlobalPersistantData.get(GLOBAL_PERSISTANT_DATA.JOURNEY);\n\n        if (journeyType != null) {\n          this.checkAndBindJourney(journeyType);\n        } else {\n          this.checkAndBindDynamicFilterData(false);\n        }\n      } else {\n        this.checkAndBindDynamicFilterData(false);\n      }\n    }\n\n    checkAndBindJourney(journeyType) {\n      this.splitInvoicesListDataModel.apireqdata = new SplitInvoicesListRequestModel();\n      this.splitInvoicesListDataModel.journeyType = journeyType;\n      this.SplitInvoicesListComponent.resetPagination();\n      this.checkAndBindDynamicFilterData(true);\n    }\n\n    checkAndBindDynamicFilterData(shouldCompulsoryRefreshList) {\n      let filterGlobalPersistData = this._appRepoService.appRepo.appGlobalPersistantData.get(GLOBAL_PARAM_KEY.APP_FILTER);\n\n      if (filterGlobalPersistData.persistantfilterType == FILTER_TYPE.DYNAMIC_FILTER) {\n        this.splitInvoicesListDataModel.apireqdata = new SplitInvoicesListRequestModel();\n        this.splitInvoicesListDataModel.filterType = FILTER_TYPE.DYNAMIC_FILTER;\n        this.splitInvoicesListDataModel.apireqdata = Object.assign({}, filterGlobalPersistData.persistantDynamicFilterModel);\n        this.SplitInvoicesListComponent.resetPagination();\n        this.splitInvoicesListConfigModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\n      } else if (shouldCompulsoryRefreshList) {\n        this.splitInvoicesListConfigModel.CallerToComp.emit(WidgetConstants.CALLER_TO_COMP_REFRESH_DATA);\n      }\n    }\n\n    onSidebarClosed() {\n      // alert(\"closed\")\n      this.filterhide = true; // this.filterhideshow();\n    }\n\n    filterhideshow() {\n      this.filterhide = !this.filterhide; // this.filterhide=false;\n      // if(this.filterhide){\n\n      this.sidebarComponent.display = true; // }\n    }\n\n    stopPropagation(event) {\n      event.stopPropagation();\n    }\n\n    openDialog() {\n      this.resetPermitNavigationData();\n      this.dialogModel.maximizable = true;\n      this.dialogModel.header = 'Manually Add Charge';\n      this.dialogModel.visible = true;\n    } // toggleList(index: number) {\n    //   this.activeLink = index;\n    // }\n\n\n    bindPCPPermitQuickFilterDataModel() {\n      // abstract methid for setGlobalParams\n      super.setGlobalParams(this.pcpPermitQuickFilterDataModel);\n      this.pcpPermitQuickFilterDataModel.quickFilters = [{\n        filterValue: '_all',\n        label: 'Draft SplitInvoices',\n        count: 0,\n        icon: '',\n        helperTitle: 'All'\n      }, {\n        filterValue: 'FPN',\n        label: 'Split SplitInvoices',\n        count: 0,\n        icon: '',\n        helperTitle: 'FPN'\n      }, {\n        filterValue: 'Section74',\n        label: 'S74',\n        count: 0,\n        icon: '',\n        helperTitle: 'Section 74s'\n      }, {\n        filterValue: 'Defects',\n        label: 'Partially Reconciled',\n        count: 0,\n        icon: '',\n        helperTitle: 'Defects'\n      }, {\n        filterValue: 'To_Do',\n        label: 'Fully Reconciled',\n        count: 0,\n        icon: '',\n        helperTitle: 'To Do'\n      }, {\n        filterValue: 'Planning',\n        label: 'Final SplitInvoices',\n        count: 0,\n        icon: '',\n        helperTitle: 'Planning'\n      }, {\n        filterValue: 'PAA_Follow_Up',\n        label: 'PO Submitted',\n        count: 0,\n        icon: '',\n        helperTitle: 'Paa Follow Up'\n      }, {\n        filterValue: 'Awaiting_Grant',\n        label: 'Rejected',\n        count: 0,\n        icon: '',\n        helperTitle: 'Awaiting Grant'\n      } // {\n      //   filterValue: 'Awaiting_Work_Start',\n      //   label: 'Awaiting Work Start',\n      //   count: 0,\n      //   icon: '',\n      //   helperTitle: 'Awating Work Start',\n      // },\n      // {\n      //   filterValue: 'In_Progress',\n      //   label: 'In Progress',\n      //   count: 0,\n      //   icon: '',\n      //   helperTitle: 'In Progress',\n      // },\n      // {\n      //   filterValue: 'Awaiting_Work_Stop',\n      //   label: 'Awaiting Work Stop',\n      //   count: 0,\n      //   icon: '',\n      //   helperTitle: 'Awaiting Work Stop',\n      // },\n      // {\n      //   filterValue: 'Registration_Due',\n      //   label: 'Registration Due',\n      //   count: 0,\n      //   icon: '',\n      //   helperTitle: 'Registration Due',\n      // },\n      // {\n      //   filterValue: 'Interim_To_Perm',\n      //   label: 'Interim to Permanent',\n      //   count: 0,\n      //   icon: '',\n      //   helperTitle: 'Interim To Permanent',\n      // },\n      ];\n    }\n\n    bindPCPPermitQuickFilterEvents() {\n      let eventActions = [[WidgetConstants.APPLY_FILTER, [{\n        action: 'applyFilterOnChange',\n        params: [{\n          'page.filterposition': \"'permitQuickFilter'\",\n          'page.gridposition': \"'permitList'\",\n          'page.clearFilter': \"'permitFilter'\",\n          'targ.filterType': FILTER_TYPE.QUICK_FILTER\n        } // {\n        //   methodname: 'onSidebarClosed',\n        // },\n        ]\n      }]]];\n      super.addEventListener(eventActions, this.pcpPermitQuickFilterDataModel, this.pcpPermitQuickFilterConfigModel);\n    }\n\n    bindPCPFilterDataModel() {\n      // abstract methid for setGlobalParams\n      super.setGlobalParams(this.splitInvoicesListDataModel);\n    }\n\n    bindPCPFilterEvents() {\n      let eventActions = [[WidgetConstants.APPLY_FILTER, [{\n        action: 'applyFilterOnChange',\n        params: [{\n          'page.filterposition': \"'permitFilter'\",\n          'page.gridposition': \"'permitList'\",\n          'page.clearFilter': \"'permitQuickFilter'\",\n          'targ.filterType': FILTER_TYPE.ADVANCE_FILTER\n        }]\n      }, {\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'onfilterrest'\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.pcpFilterDataModel, this.pcpFilterConfigModel);\n    }\n\n    bindSplitInvoicesListDataModel() {\n      // abstract methid for setGlobalParams\n      super.setGlobalParams(this.splitInvoicesListDataModel);\n      this.splitInvoicesListDataModel.columnsToDisplay = ['CollaborativeWorkingFlag', 'PermitRefNumber', 'WorksLocationDescription', // 'DeemedDate',\n      'WorksType', 'CostRisk', 'CustomerRisk', 'TrafficManagement', 'StartDate', 'EndDate', 'DeemedDate', 'PermitStatus', 'WorkStatus', 'AlterationStatus', 'tag_matrix'];\n      this.splitInvoicesListDataModel.apiUrls.advanceFilter = '/api/v1/applications';\n      this.splitInvoicesListDataModel.apiUrls.quickFilter = '/api/v1/applications/quick-filter';\n      this.splitInvoicesListDataModel.apiUrls.dynamicFilter = '/api/v1/applications';\n    }\n\n    bindSplitInvoicesListEvents() {\n      let eventActions = [['viewClick', [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_viewClick'\n        }]\n      } // {\n      //   \"action\": \"navigate1\",\n      //   \"params\": {\n      //     \"staticKeys\": [\n      //     ],\n      //     \"eventParamKeys\": [\n      //       {\n      //         \"getKey\": \"ApplicationId\",\n      //         \"setKey\": \"applicationId\"\n      //       },\n      //       {\n      //         \"getKey\": \"PermitRefNumber\",\n      //         \"setKey\": \"permitRefNumber\"\n      //       }\n      //     ],\n      //     \"globalParamKeys\": [\n      //       \"applicationId\"\n      //     ],\n      //     \"location\": {\n      //       \"path\": \"/admin/permit-view\"\n      //     }\n      //   },\n      //   \"eventParamKeys\": \"\"\n      // }\n      ]], ['inActivePermitView', [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_inActivePermitView'\n        }]\n      }]], ['editPermit', [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_openEditPermitDialog'\n        }]\n      }]], ['deletePermit', [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_onDelete'\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.splitInvoicesListDataModel, this.splitInvoicesListConfigModel);\n    }\n\n    page_openEditPermitDialog(eventparams, wigDataContext, params) {\n      this.globalParameters.set('applicationId', null); // this.permitDrawMapDataModel.data = new PermitDrawMapDetails();\n\n      let applicationId = eventparams.dataContext.ApplicationId;\n      this.resetPermitNavigationData(); // this.setPermitNavigationKey(FormModeConstant.EDIT);\n      // this.isCreatePermitModeCreate = false;\n\n      this.globalParameters.set(GLOBAL_PARAM_KEY.ELGIN_MAP, null);\n      this.globalParameters.set(GLOBAL_PARAM_KEY.CONDITIONS, null);\n      this.globalParameters.set(GLOBAL_PARAM_KEY.PERMIT_FORM, null);\n      this.showSpinner();\n\n      this._serverApiBase.get(`/api/v1/applications/${applicationId}`).subscribe(response => {\n        try {\n          this.hideSpinner();\n\n          if (response) {\n            console.log('check response', response); // let permitresponse: PermitNavigationDataModel =\n            //   this.convertPermitDetailsResponse(response);\n            // this.globalParameters.set(\n            //   GLOBAL_PARAM_KEY.ELGIN_MAP,\n            //   permitresponse.mapPageData\n            // );\n            // this.globalParameters.set(\n            //   GLOBAL_PARAM_KEY.CONDITIONS,\n            //   permitresponse.conditionPageData\n            // );\n            // this.globalParameters.set(\n            //   GLOBAL_PARAM_KEY.PERMIT_FORM,\n            //   permitresponse.permitFormPageData\n            // );\n            // this.permitDrawMapDataModel.data = new PermitDrawMapDetails();\n            // this.permitDrawMapDataModel.mode = FormModeConstant.EDIT;\n            // this.permitConditionsDataModel.mode = FormModeConstant.EDIT;\n            // this.globalParameters.set('applicationId', applicationId);\n            // this.dialogModel = new DialogModel();\n            // this.dialogModel.width = '80%';\n            // // this.createPermitStepNo = 1;\n            // this.dialogModel.maximizable = true;\n            // this.dialogModel.header =\n            //   this.arrEditPermitDialogTitle[this.createPermitStepNo - 1];\n            // // set eleginMap Mode\n            // this.elginMapDataModel.mode = FormModeConstant.EDIT;\n            // this.elginMapDataModel.isSelfDataLoad = true;\n            // this.elginMapDataModel.globalParameters.set(\n            //   GLOBAL_PARAM_KEY.ELGIN_MAP,\n            //   this.globalParameters.get(GLOBAL_PARAM_KEY.ELGIN_MAP)\n            // );\n            // this.permitDrawMapDataModel.globalParameters.set(\n            //   GLOBAL_PARAM_KEY.ELGIN_MAP,\n            //   this.globalParameters.get(GLOBAL_PARAM_KEY.ELGIN_MAP)\n            // );\n            // this.permitDrawMapDataModel.globalParameters.set(\n            //   GLOBAL_PARAM_KEY.PERMIT_FORM,\n            //   this.globalParameters.get(GLOBAL_PARAM_KEY.PERMIT_FORM)\n            // );\n\n            this.dialogModel.visible = true;\n          }\n        } catch (e) {\n          this.hideSpinner();\n        }\n      }, error => {\n        this.hideSpinner();\n        console.log('Permit save as draft error :');\n      });\n    }\n\n    resetPermitNavigationData() {\n      this._appRepoHelperService.setNavigationData(NAVIGATION_DATA.CREATE_PERMIT, {});\n\n      this._appRepoHelperService.setNavigationData(NAVIGATION_DATA.EDIT_PERMIT, {});\n    }\n\n    onfilterrest() {\n      this.filterhide = true;\n    }\n\n    onCancelCreateChargeForm() {\n      this.createChargeForm.reset();\n      this.dialogModel.visible = false;\n    }\n\n    onSaveCreateChargeForm() {\n      console.log(this.createChargeForm.value);\n      this.dialogModel.visible = false;\n      this.createChargeForm.reset();\n    }\n\n    page_inActivePermitView(eventparams, wigDataContext, params) {\n      this.globalParameters.set('applicationId', null);\n      let applicationId = eventparams.dataContext.ApplicationId;\n      this.showSpinner();\n\n      this._serverApi.get(`/api/v1/applications/${applicationId}`).subscribe(response => {\n        try {\n          this.hideSpinner();\n\n          if (response) {//   let permitresponse: PermitNavigationDataModel =\n            //     this.convertPermitDetailsResponse(response);\n            //   this.globalParameters.set(\n            //     GLOBAL_PARAM_KEY.VIEW_ELGIN_MAP,\n            //     permitresponse.mapPageData\n            //   );\n            //   this.globalParameters.set(\n            //     GLOBAL_PARAM_KEY.VIEW_CONDITIONS,\n            //     permitresponse.conditionPageData\n            //   );\n            //   this.globalParameters.set(\n            //     GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM,\n            //     response\n            //   );\n            //   // this.permitDrawMapDataModel.globalParameters.set(GLOBAL_PARAM_KEY.PERMIT_FORM, response);\n            //   // console.log(\"at view button click\",this.permitDrawMapDataModel.globalParameters.get(GLOBAL_PARAM_KEY.PERMIT_FORM));\n            //   this.globalParameters.set('applicationId', applicationId);\n            //   this.globalParameters.set('inActivePermitView', true);\n            //   let navigationData = new Map<string, object>();\n            //   navigationData.set(\n            //     'inActivePermitView',\n            //     this.globalParameters.get('inActivePermitView')\n            //   );\n            //   navigationData.set(\n            //     'applicationId',\n            //     this.globalParameters.get('applicationId')\n            //   );\n            //   navigationData.set(\n            //     GLOBAL_PARAM_KEY.ELGIN_MAP,\n            //     this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_ELGIN_MAP)\n            //   );\n            //   navigationData.set(\n            //     GLOBAL_PARAM_KEY.CONDITIONS,\n            //     this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_CONDITIONS)\n            //   );\n            //   navigationData.set(\n            //     GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM,\n            //     this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM)\n            //   );\n            //   this._sessionStorageService.setNavigationData(navigationData);\n            //   this._router.navigate(['/admin/permit-view']);\n          }\n        } catch (e) {\n          this.hideSpinner();\n        }\n      }, error => {\n        this.hideSpinner();\n        console.log('Permit save as draft error :');\n      });\n    }\n\n    convertPermitDetailsResponse(response) {\n      let permitNavigationDataModel = new PermitNavigationDataModel();\n\n      if (!response) {\n        return permitNavigationDataModel;\n      } // permitNavigationDataModel.mapPageData = this.convertToMapPageData(response);\n      // //set conditionPageData\n      // permitNavigationDataModel.conditionPageData =\n      //   this.convertToConditionPageData(response);\n      // //set permitFormPageData\n      // permitNavigationDataModel.permitFormPageData =\n      // this.convertToPermitForm(response);\n\n\n      let userInfo = this._appRepoHelperService.getMDataByKey(MASTER_DATA.USER_INFO); // user Info\n      // permitNavigationDataModel.permitFormPageData.orgId = userInfo.org_id;\n      // permitNavigationDataModel.permitFormPageData.departmentId = userInfo.department_id;\n\n\n      return permitNavigationDataModel;\n    }\n\n    setFieldData() {\n      this.arrChargeType = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.WORK_CATEGORY.toString()); // this.arrStatus = this._appRepoHelperService.getMDataByDomain(\n      //   MASTER_DATA_DOMAIN.WORK_STATUS.toString()\n      // );\n      // this.arrPermitStatus = this._appRepoHelperService.getMDataByDomain(\n      //   MASTER_DATA_DOMAIN.PERMIT_STATUS.toString()\n      // );\n      // this.arrRoadCategory = this._appRepoHelperService.getMDataByDomain(\n      //   MASTER_DATA_DOMAIN.ROAD_CATEGORY.toString()\n      // );\n      // this.arrCloseFootway = this._appRepoHelperService.getMDataByDomain(\n      //   MASTER_DATA_DOMAIN.CLOSE_FOOTWAY.toString()\n      // );\n      // this.arrLiabilityOwner = this._appRepoHelperService.getMDataByDomain(\n      //   MASTER_DATA_DOMAIN.TRAFFIC_MANAGEMENT_TYPE.toString()\n      // );\n\n      this.arrHighwayAuthority = this._appRepoHelperService.getMDataByDomain(MASTER_DATA_DOMAIN.HIGHWAY_AUTORITIES.toString()); // let allArrWorkstreams: any =\n      //   this._appRepoHelperService.getUserAccessibleWorkStream();\n      // this.arrWorkstreams = allArrWorkstreams.filter((thing, i, arr) => {\n      //   return (\n      //     arr.indexOf(arr.find((t) => t.workstreamId === thing.workstreamId)) ===\n      //     i\n      //   );\n      // });\n    }\n\n    page_viewClick(eventparams, wigDataContext, params) {\n      this.globalParameters.set('applicationId', null);\n      let applicationId = eventparams.dataContext.ApplicationId;\n      this.showSpinner();\n\n      this._serverApi.get(`/api/v1/applications/${applicationId}`).subscribe(response => {\n        try {\n          this.hideSpinner();\n\n          if (response) {\n            let permitresponse = this.convertPermitDetailsResponse(response);\n            this.globalParameters.set(GLOBAL_PARAM_KEY.VIEW_ELGIN_MAP, permitresponse.mapPageData);\n            this.globalParameters.set(GLOBAL_PARAM_KEY.VIEW_CONDITIONS, permitresponse.conditionPageData);\n            this.globalParameters.set(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM, response); //   // this.permitDrawMapDataModel.globalParameters.set(GLOBAL_PARAM_KEY.PERMIT_FORM, response);\n            //   // console.log(\"at view button click\",this.permitDrawMapDataModel.globalParameters.get(GLOBAL_PARAM_KEY.PERMIT_FORM));\n\n            this.globalParameters.set('applicationId', applicationId);\n            this.globalParameters.set('inActivePermitView', false);\n            let navigationData = new Map();\n            navigationData.set('inActivePermitView', this.globalParameters.get('inActivePermitView'));\n            navigationData.set('applicationId', this.globalParameters.get('applicationId'));\n            navigationData.set(GLOBAL_PARAM_KEY.ELGIN_MAP, this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_ELGIN_MAP));\n            navigationData.set(GLOBAL_PARAM_KEY.CONDITIONS, this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_CONDITIONS));\n            navigationData.set(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM, this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM));\n            console.log(this.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM));\n\n            this._sessionStorageService.setNavigationData(navigationData);\n\n            this._router.navigate(['/admin/invoice-view']);\n          }\n        } catch (e) {\n          this.hideSpinner();\n        }\n      }, error => {\n        this.hideSpinner();\n        console.log('Permit save as draft error :');\n      });\n    }\n\n  }\n\n  SplitInvoiceListingComponent.ɵfac = function SplitInvoiceListingComponent_Factory(t) {\n    return new (t || SplitInvoiceListingComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.EventActionService), i0.ɵɵdirectiveInject(i3.SessionStorageService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.NgxSpinnerService), i0.ɵɵdirectiveInject(i7.AppRepoService), i0.ɵɵdirectiveInject(i8.AppRepoHelperService), i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService));\n  };\n\n  SplitInvoiceListingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SplitInvoiceListingComponent,\n    selectors: [[\"app-split-invoice-listing\"]],\n    viewQuery: function SplitInvoiceListingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SidebarComponent, 5);\n        i0.ɵɵviewQuery(SplitInvoicesListComponent, 5);\n        i0.ɵɵviewQuery(PcpFilterComponent, 5);\n        i0.ɵɵviewQuery(PcpQuickFilterComponent, 5);\n        i0.ɵɵviewQuery(DialogComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidebarComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.SplitInvoicesListComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pcpFilterComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pcpQuickFilterComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialogComponent = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 29,\n    vars: 6,\n    consts: [[1, \"dashboard-container\", \"mb-4\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start center\", \"FxFlex\", \"100\", 1, \"page-title\", \"m-4\"], [\"FxFlex\", \"98\", 1, \"grey-text\"], [1, \"blue-text\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"m-auto\"], [\"fxFlex\", \"98\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"center start\", \"fxLayoutGap\", \"10px\"], [\"label\", \"OPEN\"], [1, \"row\"], [1, \"col-md-12\", \"mt-3\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"25\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \" center\", \"fxLayoutGap\", \"15px\", 2, \"padding\", \"5px 10px\"], [\"mat-stroked-button\", \"\", 1, \"plain-btn\", 3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"search-input\", 3, \"formControl\"], [\"fxFlex\", \"75\", 1, \"d-flex\", 2, \"overflow-x\", \"scroll\"], [3, \"dataModel\", \"configModel\"], [1, \"col-12\", \"mt-4\"], [\"label\", \"PROCESSED/PAID\"], [\"class\", \"row no-gutters mt-4\", 4, \"ngIf\"], [1, \"row\", \"no-gutters\", \"mt-4\"], [1, \"col-md-2\"], [3, \"onSidebarClose\"], [1, \"sidebar-content-slot\"]],\n    template: function SplitInvoiceListingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" / Invoices \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"mat-card\", 5);\n        i0.ɵɵelementStart(8, \"mat-tab-group\");\n        i0.ɵɵelementStart(9, \"mat-tab\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelementStart(14, \"div\", 11);\n        i0.ɵɵelementStart(15, \"div\");\n        i0.ɵɵelementStart(16, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function SplitInvoiceListingComponent_Template_button_click_16_listener() {\n          return ctx.filterhideshow();\n        });\n        i0.ɵɵelementStart(17, \"mat-icon\");\n        i0.ɵɵtext(18, \"filter_alt\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\");\n        i0.ɵɵelement(20, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 14);\n        i0.ɵɵelement(22, \"app-pcp-quick-filter\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵelement(24, \"app-split-invoices-list\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-tab\", 17);\n        i0.ɵɵelementStart(26, \"div\");\n        i0.ɵɵtext(27, \" this is team's list \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, SplitInvoiceListingComponent_div_28_Template, 5, 2, \"div\", 18);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"formControl\", ctx.searchInput);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.pcpPermitQuickFilterDataModel)(\"configModel\", ctx.pcpPermitQuickFilterConfigModel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.splitInvoicesListDataModel)(\"configModel\", ctx.splitInvoicesListConfigModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.filterhide);\n      }\n    },\n    directives: [i9.DefaultLayoutDirective, i9.DefaultLayoutAlignDirective, i10.MatCard, i9.DefaultFlexDirective, i9.DefaultLayoutGapDirective, i11.MatTabGroup, i11.MatTab, i12.MatButton, i13.MatIcon, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlDirective, i14.PcpQuickFilterComponent, i15.SplitInvoicesListComponent, i16.NgIf, i17.SidebarComponent, i18.PcpFilterComponent],\n    styles: [\".blue-text[_ngcontent-%COMP%]{color:var(--stroked-button-bg-color)}.grey-text[_ngcontent-%COMP%]{color:var(--dark-gray-text-color)}.switch-tab[_ngcontent-%COMP%]{width:100%}.blue-btn[_ngcontent-%COMP%]{background-color:var(--stroked-button-bg-color)!important;color:#fff}.plain-btn[_ngcontent-%COMP%]{background-color:none;border-color:none;border-radius:5px!important;text-align:center}.search-input[_ngcontent-%COMP%]{width:100%;padding:.75rem 1.25rem;border:1px solid var(--dark-gray-text-color)}  .mat-tab-label{height:48px;min-width:135px!important;padding:0 10px!important;font-size:1.4rem;font-weight:bold;letter-spacing:1px}.mat-tab-link[_ngcontent-%COMP%]:hover{text-decoration:none!important}.mat-tab-label-active[_ngcontent-%COMP%]{color:var(--theme-color)}.mat-card[_ngcontent-%COMP%]{padding:16px 0!important;overflow:hidden}.mat-stroked-button[_ngcontent-%COMP%]{background-color:#f9f9f9;border:1px solid #696969}element.style[_ngcontent-%COMP%]{transform:none}  .mat-tab-body-content{height:100%;overflow:hidden!important}  .mat-card{border-radius:0!important}  .custom-table.low-border-padding table{border-spacing:4px 2px!important;border-collapse:separate}\"]\n  });\n  return SplitInvoiceListingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { FILTER_TYPE } from 'src/app/app-constants';\nimport { HELPER_TEXT_DATA_DOMAIN } from 'src/app/constants/db.constants';\nimport { PermitQuickFilterConfigModel } from '../../permit-quick-filter/permit-quick-filter.model';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"src/app/services/app-repo.service\";\nimport * as i4 from \"src/app/services/validation.service\";\nimport * as i5 from \"@angular/material/button-toggle\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/icon\";\n\nfunction PcpQuickFilterComponent_mat_button_toggle_2_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quickFilter_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(quickFilter_r1.icon);\n  }\n}\n\nfunction PcpQuickFilterComponent_mat_button_toggle_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-button-toggle\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, PcpQuickFilterComponent_mat_button_toggle_2_mat_icon_2_Template, 2, 1, \"mat-icon\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quickFilter_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"helperTextData\", ctx_r0.getHelpTextData())(\"value\", quickFilter_r1.filterValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", quickFilter_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", quickFilter_r1.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r2 == 0 ? \"\" : \" - \" + quickFilter_r1.count, \" \");\n  }\n}\n\nexport let PcpQuickFilterComponent = /*#__PURE__*/(() => {\n  class PcpQuickFilterComponent extends WidgetComponentBase {\n    constructor(_serverApiBase, _appRepoHelperService, _appRepoService, _validationService) {\n      super(_serverApiBase, _validationService);\n      this._serverApiBase = _serverApiBase;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._appRepoService = _appRepoService;\n      this._validationService = _validationService;\n      this.quickFilterSelectedValue = 'all';\n      this.quickFilterHelperData = [];\n    }\n\n    ngOnInit() {\n      this.wgOnInit();\n    }\n\n    ngAfterViewInit() {\n      this.wgRefreshData();\n    }\n\n    setFieldData() {\n      this.quickFilterHelperData = [...this._appRepoService.appRepo.helperTextDataById.values()].filter(item => item.domain === HELPER_TEXT_DATA_DOMAIN.QUICK_FILTER);\n    }\n\n    getControlData() {\n      let url = '/api/v1/cost-penalty/cost-quick-filter-count';\n      console.log('apidata', url);\n      return this.wgAPIMethodGet(url);\n    }\n\n    convertData(response) {\n      console.log('response', response);\n      var i = 1;\n      this.dataModel.quickFilters[i++].count = response.permit_cost_only;\n      this.dataModel.quickFilters[i++].count = response.section74_charges;\n      this.dataModel.quickFilters[i++].count = response.lane_rentals;\n      this.dataModel.quickFilters[i++].count = response.ttro;\n      this.dataModel.quickFilters[i++].count = response.variations;\n      this.dataModel.quickFilters[i++].count = response.fpn;\n      this.dataModel.quickFilters[i++].count = response.defects; // this.dataModel.quickFilters[i++].count = response.traffic_management;\n\n      return this.dataModel;\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {\n      let filterGlobalParams = this._appRepoService.appRepo.appGlobalPersistantData.get(this.dataModel.appGlobalParamsKeyForQuickFilter);\n\n      if (filterGlobalParams.persistantfilterType == FILTER_TYPE.QUICK_FILTER) {\n        this.quickFilterSelectedValue = filterGlobalParams.persistantQuickFilterModel.filterValue;\n        this.emitEvent(PermitQuickFilterConfigModel.COMP_TO_CALLER_APPLY_FILTER);\n      }\n    }\n\n    getValue() {\n      let data = {\n        quickFilter: this.quickFilterSelectedValue\n      };\n      return data;\n    }\n\n    onQuickFilterSelectionChange(value) {\n      console.log(\"value\", value);\n      this.quickFilterSelectedValue = value.value;\n\n      let filterGlobalParams = this._appRepoService.appRepo.appGlobalPersistantData.get(this.dataModel.appGlobalParamsKeyForQuickFilter);\n\n      filterGlobalParams.persistantfilterType = FILTER_TYPE.QUICK_FILTER;\n      filterGlobalParams.persistantQuickFilterModel.filterValue = this.quickFilterSelectedValue;\n\n      this._appRepoService.appRepo.appGlobalPersistantData.set(this.dataModel.appGlobalParamsKeyForQuickFilter, filterGlobalParams);\n\n      this.emitEvent(PermitQuickFilterConfigModel.COMP_TO_CALLER_APPLY_FILTER);\n    }\n\n    reset() {\n      this.quickFilterSelectedValue = '';\n    }\n\n    getHelpTextData() {\n      return {\n        helpTextId: Math.floor(Math.random() * (100 - 1 + 1) + 1)\n      };\n    }\n\n  }\n\n  PcpQuickFilterComponent.ɵfac = function PcpQuickFilterComponent_Factory(t) {\n    return new (t || PcpQuickFilterComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.AppRepoService), i0.ɵɵdirectiveInject(i4.ValidationService));\n  };\n\n  PcpQuickFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcpQuickFilterComponent,\n    selectors: [[\"app-pcp-quick-filter\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"quick-filter\"], [\"name\", \"quickfilter\", \"aria-label\", \"Quick - filter\", 3, \"value\", \"change\"], [3, \"helperTextData\", \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"helperTextData\", \"value\"], [4, \"ngIf\"]],\n    template: function PcpQuickFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-button-toggle-group\", 1);\n        i0.ɵɵlistener(\"change\", function PcpQuickFilterComponent_Template_mat_button_toggle_group_change_1_listener($event) {\n          return ctx.onQuickFilterSelectionChange($event);\n        });\n        i0.ɵɵtemplate(2, PcpQuickFilterComponent_mat_button_toggle_2_Template, 4, 5, \"mat-button-toggle\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.quickFilterSelectedValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dataModel.quickFilters);\n      }\n    },\n    directives: [i5.MatButtonToggleGroup, i6.NgForOf, i5.MatButtonToggle, i6.NgIf, i7.MatIcon],\n    styles: [\".quick-filter[_ngcontent-%COMP%]   mat-button-toggle-group[_ngcontent-%COMP%]{border:none;width:100%;overflow-x:auto;padding:6px}.quick-filter[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{margin-left:4px;margin-right:4px;background:transparent;border:1px solid;border-radius:50px;color:var(--stroked-button-bg-color);font:normal normal normal 1.2rem Noto Sans}.quick-filter[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%]{margin-left:10px;margin-right:10px;background:var(--theme-color);border:1px solid var(--stroked-button-bg-color);border-radius:50px;color:#fff;border:none;font:normal normal normal 1.2rem Noto Sans}.quick-filter[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%]{line-height:25px}[_ngcontent-%COMP%]::-webkit-scrollbar{width:5px!important;height:4px!important}[_ngcontent-%COMP%]::-webkit-scrollbar-track{box-shadow:inset 0 0 5px gray;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:var(--theme-color);height:10px;border-radius:10px}[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:var(--theme-color)}.mat-icon[_ngcontent-%COMP%]{font-size:20px}\"]\n  });\n  return PcpQuickFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
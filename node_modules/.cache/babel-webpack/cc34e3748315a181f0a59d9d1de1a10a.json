{"ast":null,"code":"import { CURRENCY_FORMAT } from 'src/app/constants/app-repo.constants';\nimport * as i0 from \"@angular/core\";\nexport let TransformCurrencyOrgPipe = /*#__PURE__*/(() => {\n  class TransformCurrencyOrgPipe {\n    transform(number) {\n      var suffixes = ['k', 'M', 'G', 'T', 'P', 'E'];\n\n      if (number != null && number !== '' && !isNaN(Number.parseFloat(number))) {\n        //Conver to currency number\n        var convertedNumber;\n\n        if (number <= 10000) {\n          convertedNumber = new Intl.NumberFormat(CURRENCY_FORMAT.CURRENCY_LOCALE_ID.toString(), {\n            style: 'currency',\n            currency: CURRENCY_FORMAT.CURRENCY_CODE.toString(),\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(number);\n        } else {\n          let exp = Math.floor(Math.log(number) / Math.log(1000));\n          convertedNumber = new Intl.NumberFormat(CURRENCY_FORMAT.CURRENCY_LOCALE_ID.toString(), {\n            style: 'currency',\n            currency: CURRENCY_FORMAT.CURRENCY_CODE.toString(),\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(number / 1000) + suffixes[exp - 1];\n        } //Add space between currency symbol and number\n\n\n        convertedNumber = [convertedNumber.slice(0, 1), ' ', convertedNumber.slice(1)].join('');\n        return convertedNumber;\n      }\n\n      return null;\n    }\n\n  }\n\n  TransformCurrencyOrgPipe.ɵfac = function TransformCurrencyOrgPipe_Factory(t) {\n    return new (t || TransformCurrencyOrgPipe)();\n  };\n\n  TransformCurrencyOrgPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"transformCurrencyOrg\",\n    type: TransformCurrencyOrgPipe,\n    pure: true\n  });\n  return TransformCurrencyOrgPipe;\n})();\nexport let TransformCurrencyOrgPipeModule = /*#__PURE__*/(() => {\n  class TransformCurrencyOrgPipeModule {}\n\n  TransformCurrencyOrgPipeModule.ɵfac = function TransformCurrencyOrgPipeModule_Factory(t) {\n    return new (t || TransformCurrencyOrgPipeModule)();\n  };\n\n  TransformCurrencyOrgPipeModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: TransformCurrencyOrgPipeModule\n  });\n  TransformCurrencyOrgPipeModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({});\n  return TransformCurrencyOrgPipeModule;\n})();","map":null,"metadata":{},"sourceType":"module"}
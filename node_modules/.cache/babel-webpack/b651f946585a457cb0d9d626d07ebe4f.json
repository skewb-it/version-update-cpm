{"ast":null,"code":"import { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/server-api-interface-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"src/app/services/validation.service\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/progress-bar\";\n\nfunction ProgressBarComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"mat-progress-bar\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", data_r1.text, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", data_r1.count, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", data_r1.value)(\"appProgressBarColor\", data_r1.valuecolor);\n  }\n}\n\nexport let ProgressBarComponent = /*#__PURE__*/(() => {\n  class ProgressBarComponent extends WidgetComponentBase {\n    constructor(_formBuilder, // private _serverApiBase: ServerApiInterfaceServiceService,\n    _serverApiBase, _datepipe, _validationService, _spinner) {\n      super(_serverApiBase, _validationService);\n      this._formBuilder = _formBuilder;\n      this._serverApiBase = _serverApiBase;\n      this._datepipe = _datepipe;\n      this._validationService = _validationService;\n      this._spinner = _spinner; //  super(_formBuilderbase, _serverApiBase, _datepipe,_validationServiceBase)\n      // super(_formBuilderbase,_serverBaseApi,_datepipe,_validationServiceBase)\n      // super(_formBuilder,_serverBaseApi,_datepipe,_validationServiceBase, _baseAppRepoHelperService)\n      // super(_serverApiBase, _validationService,);\n    }\n\n    ngOnInit() {\n      this.wgOnInit();\n    }\n\n    ngAfterViewInit() {\n      this.wgRefreshData();\n    }\n\n    setFieldData() {}\n\n    getControlData() {\n      let url = this.dataModel.widgetApiUrl;\n\n      this._spinner.show();\n\n      return this.wgAPIMethodGet(url);\n    }\n\n    convertData(response) {\n      // console.log('progress bar', response);\n      this._spinner.hide(); //  let colorArray=[\"#DC2C2B\",\"#F0B018\",\"#DC2C2B\",\"#DC2C2B\",\"green\",\"#3E6EB6\",\"#DC2C2B\",\"#F0B018\",\"#DC2C2B\",\"#DC2C2B\",\"green\",\"#3E6EB6\"];\n\n\n      let temparray = [];\n      response.data.forEach((element, index) => {\n        //  alert(element.items[0].display_text)\n        let item = {};\n        item.text = element.items[0].display_text;\n        item.count = element.items[1].display_text;\n        item.countColor = '#000';\n        item.value = element.items[1].value;\n        item.valuecolor = element.items[1].background_color; // console.log(\"item\",item)\n\n        temparray.push(item); // this.dataModel.data.push(item);\n      }); // console.log(\"temparray of idicator\",temparray)\n\n      this.dataModel.data = temparray; // console.log('datamodel of idicator', this.dataModel.data);\n      // this.dataModel.data=[\n      //   {\n      //   text:response.groups[0].items[0].name,\n      //   count:response.groups[0].items[0].display_data,\n      //   countColor:\"#000\",\n      //   value:response.groups[0].items[0].data,\n      //   valuecolor:\"#DC2C2B\",\n      // },\n      // {\n      //   text:response.groups[0].items[1].name,\n      //   count:response.groups[0].items[1].display_data,\n      //   countColor:\"#000\",\n      //   value:response.groups[0].items[1].data,\n      //   valuecolor:\"#F0B018\",\n      // },\n      // {\n      //   text:response.groups[0].items[2].name,\n      //   count:response.groups[0].items[2].display_data,\n      //   countColor:\"#000\",\n      //   value:response.groups[0].items[2].data,\n      //   valuecolor:\"#DC2C2B\",\n      // },\n      // {\n      //   text:response.groups[0].items[3].name,\n      //   count:response.groups[0].items[3].display_data,\n      //   countColor:\"#000\",\n      //   value:response.groups[0].items[3].data,\n      //   valuecolor:\"#DC2C2B\",\n      // },\n      // {\n      //   text:response.groups[0].items[4].name,\n      //   count:response.groups[0].items[4].display_data,\n      //   countColor:\"#000\",\n      //   value:response.groups[0].items[4].data,\n      //   valuecolor:\"green\",\n      // },\n      // {\n      //   text:response.groups[0].items[5].name,\n      //   count:response.groups[0].items[5].display_data,\n      //   countColor:\"#000\",\n      //   value:response.groups[0].items[5].data,\n      //   valuecolor:\"#3E6EB6\",\n      // },\n      // ]\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n  }\n\n  ProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n    return new (t || ProgressBarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.ValidationService), i0.ɵɵdirectiveInject(i5.NgxSpinnerService));\n  };\n\n  ProgressBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProgressBarComponent,\n    selectors: [[\"app-progress-bar\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"row\", \"m-0\"], [1, \"col-12\"], [\"class\", \"row justify-content-center mt-5 align-self-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"justify-content-center\", \"mt-5\", \"align-self-center\"], [1, \"col-10\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"left left\", 1, \"performance-card-lable\"], [1, \"col-2\"], [\"fxFlex\", \"50\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"right right \", 1, \"card-count\"], [\"mode\", \"determinate\", 3, \"value\", \"appProgressBarColor\"]],\n    template: function ProgressBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, ProgressBarComponent_div_2_Template, 8, 4, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dataModel.data);\n      }\n    },\n    directives: [i3.NgForOf, i6.DefaultLayoutDirective, i6.DefaultLayoutAlignDirective, i6.DefaultFlexDirective, i7.MatProgressBar],\n    styles: [\".performance-card[_ngcontent-%COMP%]{border-radius:4px}.count-icon[_ngcontent-%COMP%]{font-size:20px!important;color:#fff}.card-count[_ngcontent-%COMP%]{font-weight:bold;font-size:12px}.performance-card-lable[_ngcontent-%COMP%]{font-size:14px;margin-bottom:.5rem}  .mat-progress-bar-fill:after{background-color:#418b12}  .mat-progress-bar-buffer{background:#bbc0c4}  .mat-progress-bar{height:10px!important;border-radius:10px}  .mat-progress-bar-buffer{background-color:#bbc0c4!important}.select[_ngcontent-%COMP%]{background-color:gray}\"]\n  });\n  return ProgressBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
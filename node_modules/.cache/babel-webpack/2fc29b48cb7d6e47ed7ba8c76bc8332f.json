{"ast":null,"code":"import { __decorate, __metadata, __awaiter } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable, ElementRef, Input, Directive, EventEmitter, ChangeDetectorRef, ViewChildren, QueryList, Output, Component, Pipe, NgModule } from '@angular/core';\nimport { diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL } from 'diff-match-patch';\nimport { Observable } from 'rxjs';\nimport { ScrollDispatcher, ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/forms';\n\nfunction NgxTextDiffComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 11);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementStart(4, \"input\", 12);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NgxTextDiffComponent_div_1_div_1_Template_input_ngModelChange_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.hideMatchingLinesChanged($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.toolbarClass)(\"ngStyle\", ctx_r1.toolbarStyle);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" Only Show Lines with Differences (\", ctx_r1.diffsCount, \") \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.hideMatchingLines);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    active: a0,\n    disabled: a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_2_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxTextDiffComponent_div_1_div_2_button_2_Template_button_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11);\n      const option_r9 = restoredCtx.$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r10.setDiffTableFormat(option_r9.value);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(5, _c0, ctx_r8.format === option_r9.value, !!option_r9.disabled))(\"name\", option_r9.name)(\"id\", option_r9.id)(\"disabled\", !!option_r9.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r9.label, \" \");\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 15);\n    ɵngcc0.ɵɵtemplate(2, NgxTextDiffComponent_div_1_div_2_button_2_Template, 2, 8, \"button\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.formatOptions);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"delete-row\": a0,\n    \"empty-row\": a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵelement(1, \"span\", 25);\n    ɵngcc0.ɵɵpipe(2, \"formatLine\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(2, 2, row_r13.leftContent == null ? null : row_r13.leftContent.lineContent), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    highlight: a0\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_td_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n    ɵngcc0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r18 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(1, 2, diff_r18.content), ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c2, diff_r18.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_4_tr_3_td_7_span_1_Template, 2, 6, \"span\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r13.leftContent == null ? null : row_r13.leftContent.lineDiffs)(\"ngForTrackBy\", ctx_r15.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_4_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\", 21);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"td\", 22);\n    ɵngcc0.ɵɵelementStart(4, \"span\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, NgxTextDiffComponent_div_1_div_4_tr_3_td_6_Template, 3, 7, \"td\", 23);\n    ɵngcc0.ɵɵtemplate(7, NgxTextDiffComponent_div_1_div_4_tr_3_td_7_Template, 2, 6, \"td\", 23);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(6, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", (row_r13.leftContent == null ? null : row_r13.leftContent.lineNumber) !== -1 ? row_r13.leftContent == null ? null : row_r13.leftContent.lineNumber : \" \", \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c1, (row_r13.leftContent == null ? null : row_r13.leftContent.prefix) === \"-\", !(row_r13.leftContent == null ? null : row_r13.leftContent.lineContent)));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate((row_r13.leftContent == null ? null : row_r13.leftContent.prefix) || \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r13.hasDiffs);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r13.hasDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(1, \"table\", 19);\n    ɵngcc0.ɵɵelementStart(2, \"tbody\");\n    ɵngcc0.ɵɵtemplate(3, NgxTextDiffComponent_div_1_div_4_tr_3_Template, 8, 12, \"tr\", 20);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredTableRows)(\"ngForTrackBy\", ctx_r3.trackTableRows);\n  }\n}\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"insert-row\": a0,\n    \"empty-row\": a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵelement(1, \"span\", 25);\n    ɵngcc0.ɵɵpipe(2, \"formatLine\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(2, 2, row_r21.rightContent == null ? null : row_r21.rightContent.lineContent), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_td_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n    ɵngcc0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r26 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(1, 2, diff_r26.content), ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c2, diff_r26.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_5_tr_3_td_7_span_1_Template, 2, 6, \"span\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r21.rightContent == null ? null : row_r21.rightContent.lineDiffs)(\"ngForTrackBy\", ctx_r23.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\", 21);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"td\", 22);\n    ɵngcc0.ɵɵelementStart(4, \"span\");\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, NgxTextDiffComponent_div_1_div_5_tr_3_td_6_Template, 3, 7, \"td\", 23);\n    ɵngcc0.ɵɵtemplate(7, NgxTextDiffComponent_div_1_div_5_tr_3_td_7_Template, 2, 6, \"td\", 23);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(6, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", (row_r21.rightContent == null ? null : row_r21.rightContent.lineNumber) !== -1 ? row_r21.rightContent == null ? null : row_r21.rightContent.lineNumber : \" \", \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c3, (row_r21.rightContent == null ? null : row_r21.rightContent.prefix) === \"+\", !(row_r21.rightContent == null ? null : row_r21.rightContent.lineContent)));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate((row_r21.rightContent == null ? null : row_r21.rightContent.prefix) || \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r21.hasDiffs);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r21.hasDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵelementStart(1, \"table\", 19);\n    ɵngcc0.ɵɵelementStart(2, \"tbody\");\n    ɵngcc0.ɵɵtemplate(3, NgxTextDiffComponent_div_1_div_5_tr_3_Template, 8, 12, \"tr\", 20);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.filteredTableRows)(\"ngForTrackBy\", ctx_r4.trackTableRows);\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    \"delete-row\": a0,\n    \"insert-row\": a1\n  };\n};\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵelement(1, \"span\", 25);\n    ɵngcc0.ɵɵpipe(2, \"formatLine\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(2, 2, row_r29.leftContent == null ? null : row_r29.leftContent.lineContent), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n    ɵngcc0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r35 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(1, 2, diff_r35.content), ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c2, diff_r35.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_6_tr_3_td_9_span_1_Template, 2, 6, \"span\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r31 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r29.leftContent == null ? null : row_r29.leftContent.lineDiffs)(\"ngForTrackBy\", ctx_r31.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n    ɵngcc0.ɵɵpipe(1, \"formatLine\");\n  }\n\n  if (rf & 2) {\n    const diff_r38 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind1(1, 2, diff_r38.content), ɵngcc0.ɵɵsanitizeHtml)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c2, diff_r38.isDiff));\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 24);\n    ɵngcc0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_6_tr_3_td_10_span_1_Template, 2, 6, \"span\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r32 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r29.rightContent == null ? null : row_r29.rightContent.lineDiffs)(\"ngForTrackBy\", ctx_r32.trackDiffs);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\", 30);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"td\", 31);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"td\", 22);\n    ɵngcc0.ɵɵelementStart(6, \"span\");\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, NgxTextDiffComponent_div_1_div_6_tr_3_td_8_Template, 3, 7, \"td\", 23);\n    ɵngcc0.ɵɵtemplate(9, NgxTextDiffComponent_div_1_div_6_tr_3_td_9_Template, 2, 6, \"td\", 23);\n    ɵngcc0.ɵɵtemplate(10, NgxTextDiffComponent_div_1_div_6_tr_3_td_10_Template, 2, 6, \"td\", 23);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r29 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(row_r29.leftContent == null ? null : row_r29.leftContent.lineNumber);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(row_r29.rightContent == null ? null : row_r29.rightContent.lineNumber);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(7, _c4, (row_r29.leftContent == null ? null : row_r29.leftContent.prefix) === \"-\", (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) === \"+\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate((row_r29.leftContent == null ? null : row_r29.leftContent.prefix) || (row_r29.rightContent == null ? null : row_r29.rightContent.prefix) || \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r29.hasDiffs);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r29.hasDiffs && row_r29.leftContent && (row_r29.leftContent == null ? null : row_r29.leftContent.lineDiffs.length) !== 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r29.hasDiffs && row_r29.rightContent && (row_r29.rightContent == null ? null : row_r29.rightContent.lineDiffs.length) !== 0);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 29);\n    ɵngcc0.ɵɵelementStart(1, \"table\", 19);\n    ɵngcc0.ɵɵelementStart(2, \"tbody\");\n    ɵngcc0.ɵɵtemplate(3, NgxTextDiffComponent_div_1_div_6_tr_3_Template, 11, 10, \"tr\", 20);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.filteredTableRowsLineByLine)(\"ngForTrackBy\", ctx_r5.trackTableRows);\n  }\n}\n\nfunction NgxTextDiffComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_div_1_Template, 6, 4, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NgxTextDiffComponent_div_1_div_2_Template, 3, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(4, NgxTextDiffComponent_div_1_div_4_Template, 4, 2, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(5, NgxTextDiffComponent_div_1_div_5_Template, 4, 2, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(6, NgxTextDiffComponent_div_1_div_6_Template, 4, 2, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.outerContainerClass)(\"ngStyle\", ctx_r0.outerContainerStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showToolbar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showToolbar && ctx_r0.showBtnToolbar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.compareRowsClass)(\"ngStyle\", ctx_r0.compareRowsStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.format === \"SideBySide\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.format === \"SideBySide\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.format === \"LineByLine\");\n  }\n}\n\nfunction LoaderSpinnerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"div\");\n    ɵngcc0.ɵɵelement(2, \"div\");\n    ɵngcc0.ɵɵelement(3, \"div\");\n    ɵngcc0.ɵɵelement(4, \"div\");\n    ɵngcc0.ɵɵelement(5, \"div\");\n    ɵngcc0.ɵɵelement(6, \"div\");\n    ɵngcc0.ɵɵelement(7, \"div\");\n    ɵngcc0.ɵɵelement(8, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst isNil = val => val === undefined || val === null;\n\nconst isEmpty = val => val == null || !(Object.keys(val) || val).length || (Object.keys(val) || val).length === 0;\n\nlet NgxTextDiffService = /*#__PURE__*/(() => {\n  let NgxTextDiffService = class NgxTextDiffService {\n    constructor() {\n      this.initParser();\n    }\n\n    initParser() {\n      this.diffParser = new diff_match_patch();\n    }\n\n    getDiffsByLines(left, right) {\n      return new Promise((resolve, reject) => {\n        const a = this.diffParser.diff_linesToChars_(left, right);\n        const lineText1 = a.chars1;\n        const lineText2 = a.chars2;\n        const linesArray = a.lineArray;\n        const diffs = this.diffParser.diff_main(lineText1, lineText2, true);\n        this.diffParser.diff_charsToLines_(diffs, linesArray);\n        const rows = this.formatOutput(diffs);\n\n        if (!rows) {\n          reject('Error');\n        }\n\n        resolve(rows);\n      });\n    }\n\n    formatOutput(diffs) {\n      let lineLeft = 1;\n      let lineRight = 1;\n      return diffs.reduce((rows, diff) => {\n        if (!rows) {\n          rows = [];\n        }\n\n        const diffType = diff[0];\n        const diffValue = diff[1];\n        let leftDiffRow = null;\n        let rightDiffRow = null;\n        let leftContent = null;\n        let rightContent = null;\n        let rowTemp = null;\n\n        switch (diffType) {\n          case DIFF_EQUAL:\n            // 0\n            diffValue.split('\\n').filter((value, index, array) => {\n              if (index === array.length - 1) {\n                return !isEmpty(value);\n              }\n\n              return true;\n            }).forEach(line => {\n              leftContent = {\n                lineNumber: lineLeft,\n                lineContent: line,\n                lineDiffs: [],\n                prefix: ''\n              };\n              rightContent = {\n                lineNumber: lineRight,\n                lineContent: line,\n                lineDiffs: [],\n                prefix: ''\n              };\n              rowTemp = {\n                leftContent,\n                rightContent,\n                belongTo: 'both',\n                hasDiffs: false,\n                numDiffs: 0\n              };\n              rows.push(rowTemp);\n              lineRight = lineRight + 1;\n              lineLeft = lineLeft + 1;\n            });\n            break;\n\n          case DIFF_DELETE:\n            // -1\n            diffValue.split('\\n').filter((value, index, array) => {\n              if (index === array.length - 1) {\n                return !isEmpty(value);\n              }\n\n              return true;\n            }).forEach(line => {\n              rightDiffRow = rows.find(row => !row.leftContent && row.rightContent && row.rightContent.lineNumber === lineLeft && row.rightContent.prefix !== '');\n              leftContent = {\n                lineNumber: lineLeft,\n                lineContent: line,\n                lineDiffs: [{\n                  content: line,\n                  isDiff: true\n                }],\n                prefix: '-'\n              };\n\n              if (rightDiffRow) {\n                rightDiffRow.leftContent = leftContent;\n                rightDiffRow.leftContent.lineDiffs = this.getDiffParts(rightDiffRow.leftContent.lineContent, rightDiffRow.rightContent.lineContent);\n                rightDiffRow.rightContent.lineDiffs = this.getDiffParts(rightDiffRow.rightContent.lineContent, rightDiffRow.leftContent.lineContent);\n                rightDiffRow.belongTo = 'both';\n                rightDiffRow.numDiffs = this.countDiffs(rightDiffRow);\n              } else {\n                rows.push({\n                  leftContent,\n                  rightContent: null,\n                  hasDiffs: true,\n                  belongTo: 'left',\n                  numDiffs: 1\n                });\n              }\n\n              lineLeft = lineLeft + 1;\n            });\n            break;\n\n          case DIFF_INSERT:\n            // 1\n            diffValue.split('\\n').filter((value, index, array) => {\n              if (index === array.length - 1) {\n                return !isEmpty(value);\n              }\n\n              return true;\n            }).forEach(line => {\n              leftDiffRow = rows.find(row => row.leftContent && !row.rightContent && row.leftContent.lineNumber === lineRight && row.leftContent.prefix !== '');\n              rightContent = {\n                lineNumber: lineRight,\n                lineContent: line,\n                lineDiffs: [{\n                  content: line,\n                  isDiff: true\n                }],\n                prefix: '+'\n              };\n\n              if (leftDiffRow) {\n                leftDiffRow.rightContent = rightContent;\n                leftDiffRow.leftContent.lineDiffs = this.getDiffParts(leftDiffRow.leftContent.lineContent, leftDiffRow.rightContent.lineContent);\n                leftDiffRow.rightContent.lineDiffs = this.getDiffParts(leftDiffRow.rightContent.lineContent, leftDiffRow.leftContent.lineContent);\n                leftDiffRow.belongTo = 'both';\n                leftDiffRow.numDiffs = this.countDiffs(leftDiffRow);\n              } else {\n                rows.push({\n                  leftContent: null,\n                  rightContent,\n                  hasDiffs: true,\n                  belongTo: 'right',\n                  numDiffs: 1\n                });\n              }\n\n              lineRight = lineRight + 1;\n            });\n            break;\n        }\n\n        return rows;\n      }, []);\n    }\n\n    countDiffs(result) {\n      let diffCount = 0;\n\n      if (result.leftContent) {\n        diffCount += result.leftContent.lineDiffs.filter(diff => diff.isDiff).length;\n      }\n\n      if (result.leftContent) {\n        diffCount += result.rightContent.lineDiffs.filter(diff => diff.isDiff).length;\n      }\n\n      return diffCount;\n    }\n\n    getDiffParts(value, compareValue) {\n      const diffParts = [];\n      let i = 0;\n      let j = 0;\n      let shared = '';\n      let diff = '';\n\n      while (i < value.length) {\n        if (value[i] === compareValue[j] && j < compareValue.length) {\n          if (diff !== '') {\n            diffParts.push({\n              content: diff,\n              isDiff: true\n            });\n            diff = '';\n          }\n\n          shared += value[i];\n        } else {\n          if (shared !== '') {\n            diffParts.push({\n              content: shared,\n              isDiff: false\n            });\n            shared = '';\n          }\n\n          diff += value[i];\n        }\n\n        i++;\n        j++;\n      }\n\n      if (diff !== '') {\n        diffParts.push({\n          content: diff,\n          isDiff: true\n        });\n      } else if (shared !== '') {\n        diffParts.push({\n          content: shared,\n          isDiff: false\n        });\n      }\n\n      return diffParts;\n    }\n\n  };\n\n  NgxTextDiffService.ɵfac = function NgxTextDiffService_Factory(t) {\n    return new (t || NgxTextDiffService)();\n  };\n\n  NgxTextDiffService.ɵprov = ɵɵdefineInjectable({\n    factory: function NgxTextDiffService_Factory() {\n      return new NgxTextDiffService();\n    },\n    token: NgxTextDiffService,\n    providedIn: \"root\"\n  });\n  NgxTextDiffService = __decorate([__metadata(\"design:paramtypes\", [])], NgxTextDiffService);\n  return NgxTextDiffService;\n})();\nlet ContainerDirective = /*#__PURE__*/(() => {\n  let ContainerDirective = class ContainerDirective {\n    constructor(_el) {\n      this._el = _el;\n      this.element = _el.nativeElement;\n    }\n\n  };\n\n  ContainerDirective.ɵfac = function ContainerDirective_Factory(t) {\n    return new (t || ContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ContainerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ContainerDirective,\n    selectors: [[\"\", \"tdContainer\", \"\"]],\n    inputs: {\n      id: \"id\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String)], ContainerDirective.prototype, \"id\", void 0);\n\n  ContainerDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef])], ContainerDirective);\n  return ContainerDirective;\n})();\nlet NgxTextDiffComponent = /*#__PURE__*/(() => {\n  let NgxTextDiffComponent = class NgxTextDiffComponent {\n    constructor(scrollService, diff, cd) {\n      this.scrollService = scrollService;\n      this.diff = diff;\n      this.cd = cd;\n      this._hideMatchingLines = false;\n      this.format = 'SideBySide';\n      this.left = '';\n      this.right = '';\n      this.loading = false;\n      this.showToolbar = true;\n      this.showBtnToolbar = true;\n      this.synchronizeScrolling = true;\n      this.compareResults = new EventEmitter();\n      this.subscriptions = [];\n      this.tableRows = [];\n      this.filteredTableRows = [];\n      this.tableRowsLineByLine = [];\n      this.filteredTableRowsLineByLine = [];\n      this.diffsCount = 0;\n      this.formatOptions = [{\n        id: 'side-by-side',\n        name: 'side-by-side',\n        label: 'Side by Side',\n        value: 'SideBySide',\n        icon: 'la-code'\n      }, {\n        id: 'line-by-line',\n        name: 'line-by-line',\n        label: 'Line by Line',\n        value: 'LineByLine',\n        icon: 'la-file-text'\n      }];\n    }\n\n    get hideMatchingLines() {\n      return this._hideMatchingLines;\n    }\n\n    set hideMatchingLines(hide) {\n      this.hideMatchingLinesChanged(hide);\n    }\n\n    ngOnInit() {\n      this.loading = true;\n\n      if (this.diffContent) {\n        this.subscriptions.push(this.diffContent.subscribe(content => {\n          this.loading = true;\n          this.left = content.leftContent;\n          this.right = content.rightContent;\n          this.renderDiffs().then(() => {\n            this.cd.detectChanges();\n            this.loading = false;\n          }).catch(() => this.loading = false);\n        }));\n      }\n\n      this.renderDiffs().then(() => this.loading = false).catch(e => this.loading = false);\n    }\n\n    ngAfterViewInit() {\n      this.initScrollListener();\n    }\n\n    ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n      }\n    }\n\n    hideMatchingLinesChanged(value) {\n      this._hideMatchingLines = value;\n\n      if (this.hideMatchingLines) {\n        this.filteredTableRows = this.tableRows.filter(row => row.leftContent && row.leftContent.prefix === '-' || row.rightContent && row.rightContent.prefix === '+');\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine.filter(row => row.leftContent && row.leftContent.prefix === '-' || row.rightContent && row.rightContent.prefix === '+');\n      } else {\n        this.filteredTableRows = this.tableRows;\n        this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\n      }\n    }\n\n    setDiffTableFormat(format) {\n      this.format = format;\n    }\n\n    renderDiffs() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          this.diffsCount = 0;\n          this.tableRows = yield this.diff.getDiffsByLines(this.left, this.right);\n          this.tableRowsLineByLine = this.tableRows.reduce((tableLineByLine, row) => {\n            if (!tableLineByLine) {\n              tableLineByLine = [];\n            }\n\n            if (row.hasDiffs) {\n              if (row.leftContent) {\n                tableLineByLine.push({\n                  leftContent: row.leftContent,\n                  rightContent: null,\n                  belongTo: row.belongTo,\n                  hasDiffs: true,\n                  numDiffs: row.numDiffs\n                });\n              }\n\n              if (row.rightContent) {\n                tableLineByLine.push({\n                  leftContent: null,\n                  rightContent: row.rightContent,\n                  belongTo: row.belongTo,\n                  hasDiffs: true,\n                  numDiffs: row.numDiffs\n                });\n              }\n            } else {\n              tableLineByLine.push(row);\n            }\n\n            return tableLineByLine;\n          }, []);\n          this.diffsCount = this.tableRows.filter(row => row.hasDiffs).length;\n          this.filteredTableRows = this.tableRows;\n          this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\n          this.emitCompareResultsEvent();\n        } catch (e) {\n          throw e;\n        }\n      });\n    }\n\n    emitCompareResultsEvent() {\n      const diffResults = {\n        hasDiff: this.diffsCount > 0,\n        diffsCount: this.diffsCount,\n        rowsWithDiff: this.tableRows.filter(row => row.hasDiffs).map(row => ({\n          leftLineNumber: row.leftContent ? row.leftContent.lineNumber : null,\n          rightLineNumber: row.rightContent ? row.rightContent.lineNumber : null,\n          numDiffs: row.numDiffs\n        }))\n      };\n      this.compareResults.next(diffResults);\n    }\n\n    trackTableRows(index, row) {\n      return row && row.leftContent ? row.leftContent.lineContent : row && row.rightContent ? row.rightContent.lineContent : undefined;\n    }\n\n    trackDiffs(index, diff) {\n      return diff && diff.content ? diff.content : undefined;\n    }\n\n    initScrollListener() {\n      this.subscriptions.push(this.scrollService.scrolled().subscribe(scrollableEv => {\n        if (scrollableEv && this.synchronizeScrolling) {\n          const scrollableId = scrollableEv.getElementRef().nativeElement.id;\n          const nonScrolledContainer = this.containers.find(container => container.id !== scrollableId);\n\n          if (nonScrolledContainer) {\n            nonScrolledContainer.element.scrollTo({\n              top: scrollableEv.measureScrollOffset('top'),\n              left: scrollableEv.measureScrollOffset('left')\n            });\n          }\n        }\n      }));\n    }\n\n  };\n\n  NgxTextDiffComponent.ɵfac = function NgxTextDiffComponent_Factory(t) {\n    return new (t || NgxTextDiffComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(NgxTextDiffService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NgxTextDiffComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgxTextDiffComponent,\n    selectors: [[\"td-ngx-text-diff\"]],\n    viewQuery: function NgxTextDiffComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(ContainerDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containers = _t);\n      }\n    },\n    inputs: {\n      format: \"format\",\n      left: \"left\",\n      right: \"right\",\n      loading: \"loading\",\n      showToolbar: \"showToolbar\",\n      showBtnToolbar: \"showBtnToolbar\",\n      synchronizeScrolling: \"synchronizeScrolling\",\n      hideMatchingLines: \"hideMatchingLines\",\n      diffContent: \"diffContent\",\n      outerContainerClass: \"outerContainerClass\",\n      outerContainerStyle: \"outerContainerStyle\",\n      toolbarClass: \"toolbarClass\",\n      toolbarStyle: \"toolbarStyle\",\n      compareRowsClass: \"compareRowsClass\",\n      compareRowsStyle: \"compareRowsStyle\"\n    },\n    outputs: {\n      compareResults: \"compareResults\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"active\"], [\"class\", \"td-wrapper\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [1, \"td-wrapper\", 3, \"ngClass\", \"ngStyle\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"class\", \"td-toolbar-select-format\", 4, \"ngIf\"], [1, \"td-table-wrapper\", 3, \"ngClass\", \"ngStyle\"], [\"class\", \"td-table-container side-by-side\", \"id\", \"td-left-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 4, \"ngIf\"], [\"class\", \"td-table-container side-by-side\", \"id\", \"td-right-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 4, \"ngIf\"], [\"class\", \"td-table-container line-by-line\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [1, \"td-toolbar-show-diff\"], [1, \"td-checkbox-container\"], [\"type\", \"checkbox\", \"id\", \"showDiffs\", 3, \"ngModel\", \"ngModelChange\"], [1, \"checkmark\"], [1, \"td-toolbar-select-format\"], [\"data-toggle\", \"buttons\", 1, \"td-btn-group\", \"td-btn-group-toggle\"], [3, \"ngClass\", \"name\", \"id\", \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"name\", \"id\", \"disabled\", \"click\"], [\"id\", \"td-left-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 1, \"td-table-container\", \"side-by-side\"], [1, \"td-table\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"scope\", \"row\", 1, \"fit-column\", \"line-number-col\", 3, \"ngClass\"], [1, \"fit-column\", \"prefix-col\", 3, \"ngClass\"], [\"class\", \"content-col\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"content-col\", 3, \"ngClass\"], [3, \"innerHTML\"], [3, \"innerHTML\", \"ngClass\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"innerHTML\", \"ngClass\"], [\"id\", \"td-right-compare-container\", \"tdContainer\", \"\", \"cdkScrollable\", \"\", 1, \"td-table-container\", \"side-by-side\"], [1, \"td-table-container\", \"line-by-line\"], [\"scope\", \"row\", 1, \"fit-column\", \"line-number-col-left\"], [\"scope\", \"row\", 1, \"fit-column\", \"line-number-col\"]],\n    template: function NgxTextDiffComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"td-loader-spinner\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgxTextDiffComponent_div_1_Template, 7, 9, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"active\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: function () {\n      return [LoaderSpinnerComponent, ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc2.NgForOf, ContainerDirective, ɵngcc1.CdkScrollable];\n    },\n    pipes: function () {\n      return [FormatLinePipe];\n    },\n    styles: [\".td-wrapper[_ngcontent-%COMP%]{display:grid;width:100%;grid-row-gap:10px;grid-template-columns:repeat(2,[col] 50%);grid-template-rows:repeat(2,[row] auto);background-color:#fff;color:#444}.td-toolbar-show-diff[_ngcontent-%COMP%]{grid-column:1;grid-row:1}.td-toolbar-select-format[_ngcontent-%COMP%]{margin-left:auto;grid-column:2;grid-row:1}.td-table-container[_ngcontent-%COMP%]{grid-column:1/2;grid-row:2;width:100%;max-width:100%;overflow-x:auto}.td-table-wrapper[_ngcontent-%COMP%]{display:flex;width:200%}.td-table[_ngcontent-%COMP%]{border:1px solid #a9a9a9;max-height:50vh;width:100%;max-width:100%}.fit-column[_ngcontent-%COMP%]{width:1px;white-space:nowrap}.line-number-col[_ngcontent-%COMP%]{position:relative;position:-webkit-sticky;position:sticky;left:0;top:auto;border-right:1px solid #ddd;color:#999;text-align:right;background-color:#f7f7f7;padding-left:10px;padding-right:10px;font-size:87.5%}.line-number-col-left[_ngcontent-%COMP%]{color:#999;padding-left:10px;padding-right:10px;text-align:right;background-color:#f7f7f7;font-size:87.5%}.insert-row[_ngcontent-%COMP%], .insert-row[_ngcontent-%COMP%] > .line-number-col[_ngcontent-%COMP%]{background-color:#dfd;border-color:#b4e2b4}.delete-row[_ngcontent-%COMP%], .delete-row[_ngcontent-%COMP%] > .line-number-col[_ngcontent-%COMP%]{background-color:#fee8e9;border-color:#e9aeae}.empty-row[_ngcontent-%COMP%]{background-color:#f7f7f7;height:24px}.td-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-top:0;padding-top:0;padding-bottom:0;white-space:nowrap;max-width:50%}pre[_ngcontent-%COMP%]{margin-bottom:0}td.content-col[_ngcontent-%COMP%]{padding:0;margin:0;line-height:24px}td.prefix-col[_ngcontent-%COMP%]{padding-left:10px;padding-right:10px;line-height:24px}.td-btn-group[_ngcontent-%COMP%]{border-radius:4px}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:rgba(23,162,184,.7);border:1px solid #17a2b8;color:#fff;cursor:pointer;float:left}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:not(:last-child){border-right:none}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:first-child{-webkit-border-top-left-radius:4px;-webkit-border-bottom-left-radius:4px;-moz-border-radius-topleft:4px;-moz-border-radius-bottomleft:4px;border-top-left-radius:4px;border-bottom-left-radius:4px}.td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{-webkit-border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:4px;border-top-right-radius:4px;border-bottom-right-radius:4px}.td-btn-group[_ngcontent-%COMP%]:after{content:'';clear:both;display:table}.td-btn-group[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%], .td-btn-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#17a2b8}.td-checkbox-container[_ngcontent-%COMP%]{display:block;position:relative;padding-left:21px;margin-bottom:0;cursor:pointer;font-size:16px;line-height:28px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.td-checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark[_ngcontent-%COMP%]{position:absolute;top:7px;left:0;height:16px;width:16px;background-color:#eee}.td-checkbox-container[_ngcontent-%COMP%]:hover   input[_ngcontent-%COMP%] ~ .checkmark[_ngcontent-%COMP%]{background-color:#ccc}.td-checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked ~ .checkmark[_ngcontent-%COMP%]{background-color:#17a2b8}.checkmark[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;display:none}.td-checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked ~ .checkmark[_ngcontent-%COMP%]:after{display:block}.td-checkbox-container[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]:after{left:5px;top:3px;width:5px;height:10px;border:solid #fff;border-width:0 3px 3px 0;transform:rotate(45deg)}.insert-row[_ngcontent-%COMP%] > .highlight[_ngcontent-%COMP%]{background-color:#acf2bd!important}.delete-row[_ngcontent-%COMP%] > .highlight[_ngcontent-%COMP%]{background-color:#fdb8c0!important}\"]\n  });\n\n  __decorate([ViewChildren(ContainerDirective), __metadata(\"design:type\", QueryList)], NgxTextDiffComponent.prototype, \"containers\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NgxTextDiffComponent.prototype, \"format\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"left\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"right\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Observable)], NgxTextDiffComponent.prototype, \"diffContent\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"loading\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"showToolbar\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"showBtnToolbar\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], NgxTextDiffComponent.prototype, \"hideMatchingLines\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NgxTextDiffComponent.prototype, \"outerContainerClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"outerContainerStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NgxTextDiffComponent.prototype, \"toolbarClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"toolbarStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", String)], NgxTextDiffComponent.prototype, \"compareRowsClass\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"compareRowsStyle\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"synchronizeScrolling\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", Object)], NgxTextDiffComponent.prototype, \"compareResults\", void 0);\n\n  NgxTextDiffComponent = __decorate([__metadata(\"design:paramtypes\", [ScrollDispatcher, NgxTextDiffService, ChangeDetectorRef])], NgxTextDiffComponent);\n  return NgxTextDiffComponent;\n})();\nlet LoaderSpinnerComponent = /*#__PURE__*/(() => {\n  let LoaderSpinnerComponent = class LoaderSpinnerComponent {\n    constructor() {\n      this.active = false;\n    }\n\n    ngOnInit() {}\n\n  };\n\n  LoaderSpinnerComponent.ɵfac = function LoaderSpinnerComponent_Factory(t) {\n    return new (t || LoaderSpinnerComponent)();\n  };\n\n  LoaderSpinnerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LoaderSpinnerComponent,\n    selectors: [[\"td-loader-spinner\"]],\n    inputs: {\n      active: \"active\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"td-loading-roller\", 4, \"ngIf\"], [1, \"td-loading-roller\"]],\n    template: function LoaderSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LoaderSpinnerComponent_div_0_Template, 9, 0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.active);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    styles: [\".td-loading-roller[_ngcontent-%COMP%]{display:inline-block;position:relative;width:64px;height:64px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{-webkit-animation:1.2s cubic-bezier(.5,0,.5,1) infinite lds-roller;animation:1.2s cubic-bezier(.5,0,.5,1) infinite lds-roller;transform-origin:32px 32px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:after{content:\\\" \\\";display:block;position:absolute;width:6px;height:6px;border-radius:50%;background:#000;margin:-3px 0 0 -3px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(1){-webkit-animation-delay:-36ms;animation-delay:-36ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(1):after{top:50px;left:50px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(2){-webkit-animation-delay:-72ms;animation-delay:-72ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(2):after{top:54px;left:45px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(3){-webkit-animation-delay:-108ms;animation-delay:-108ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(3):after{top:57px;left:39px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(4){-webkit-animation-delay:-144ms;animation-delay:-144ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(4):after{top:58px;left:32px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(5){-webkit-animation-delay:-.18s;animation-delay:-.18s}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(5):after{top:57px;left:25px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(6){-webkit-animation-delay:-216ms;animation-delay:-216ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(6):after{top:54px;left:19px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(7){-webkit-animation-delay:-252ms;animation-delay:-252ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(7):after{top:50px;left:14px}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(8){-webkit-animation-delay:-288ms;animation-delay:-288ms}.td-loading-roller[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(8):after{top:45px;left:10px}@-webkit-keyframes lds-roller{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes lds-roller{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], LoaderSpinnerComponent.prototype, \"active\", void 0);\n\n  LoaderSpinnerComponent = __decorate([__metadata(\"design:paramtypes\", [])], LoaderSpinnerComponent);\n  return LoaderSpinnerComponent;\n})();\nlet FormatLinePipe = /*#__PURE__*/(() => {\n  let FormatLinePipe = class FormatLinePipe {\n    transform(line, diffs) {\n      if (!line) {\n        return ' ';\n      }\n\n      if (!!diffs && diffs.length > 0) {\n        /*diffs.forEach(diff => {\r\n          line = line.replace(diff, `<span class=\"highli\">${diff}</span>`);\r\n        });*/\n      }\n\n      return line.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/ /g, '&nbsp;');\n    }\n\n  };\n\n  FormatLinePipe.ɵfac = function FormatLinePipe_Factory(t) {\n    return new (t || FormatLinePipe)();\n  };\n\n  FormatLinePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"formatLine\",\n    type: FormatLinePipe,\n    pure: true\n  });\n  return FormatLinePipe;\n})();\nlet NgxTextDiffModule = /*#__PURE__*/(() => {\n  let NgxTextDiffModule = class NgxTextDiffModule {};\n\n  NgxTextDiffModule.ɵfac = function NgxTextDiffModule_Factory(t) {\n    return new (t || NgxTextDiffModule)();\n  };\n\n  NgxTextDiffModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxTextDiffModule\n  });\n  NgxTextDiffModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ScrollingModule]]\n  });\n  return NgxTextDiffModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxTextDiffModule, {\n    declarations: function () {\n      return [NgxTextDiffComponent, LoaderSpinnerComponent, FormatLinePipe, ContainerDirective];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ScrollingModule];\n    },\n    exports: function () {\n      return [NgxTextDiffComponent];\n    }\n  });\n})();\n/*\r\n * Public API Surface of ngx-text-diff\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgxTextDiffComponent, NgxTextDiffModule, NgxTextDiffService, ContainerDirective as ɵa, LoaderSpinnerComponent as ɵb, FormatLinePipe as ɵc }; //# sourceMappingURL=ngx-text-diff.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"src/app/services/notification.service\";\nimport * as i4 from \"src/app/services/error.dialog.service\";\nimport * as i5 from \"src/app/services/validation.service\";\nimport * as i6 from \"primeng/fileupload\";\nimport * as i7 from \"primeng/api\";\nimport * as i8 from \"primeng/progressbar\";\nimport * as i9 from \"@angular/common\";\n\nfunction FileUploadComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelement(0, \"p-progressBar\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5);\n    i0.ɵɵelementStart(7, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function FileUploadComponent_ng_template_2_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const file_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onRemove(file_r2);\n    });\n    i0.ɵɵelement(8, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r0.progressValue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(file_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r2.size);\n  }\n}\n\nfunction FileUploadComponent_ng_template_3_ul_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", file_r8.name, \" - \", file_r8.size, \" bytes \");\n  }\n}\n\nfunction FileUploadComponent_ng_template_3_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, FileUploadComponent_ng_template_3_ul_0_li_1_Template, 2, 2, \"li\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.uploadedFiles);\n  }\n}\n\nfunction FileUploadComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUploadComponent_ng_template_3_ul_0_Template, 2, 1, \"ul\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadedFiles.length);\n  }\n}\n\nexport let FileUploadComponent = /*#__PURE__*/(() => {\n  class FileUploadComponent extends WidgetComponentBase {\n    constructor(_serverApi, _appRepoHelperService, _notificationService, _errorDialogService, _validationService) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._notificationService = _notificationService;\n      this._errorDialogService = _errorDialogService;\n      this._validationService = _validationService;\n      this.file = null;\n      this.uploadedFiles = [];\n      this.selectedFiles = [];\n      this.progressValue = 0;\n    }\n\n    ngOnInit() {\n      this.wgOnInit();\n    }\n\n    setFieldData() {}\n\n    getControlData() {}\n\n    convertData(response) {}\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    onSelect(event) {\n      if (event.currentFiles[0].size / 1024 / 1024 > 10) {\n        this._errorDialogService.openDialog(\"\", \"The file you are trying to upload is larger than the file size expected by Street Manager. Please ensure that you file size is less than 10MB\");\n\n        this.onClear();\n      } else {\n        for (const file of event.files) {\n          this.selectedFiles.push(file);\n        }\n      }\n    }\n\n    onRemove(event) {\n      this.selectedFiles = this.selectedFiles.filter(f => {\n        return f.lastModified !== event.lastModified;\n      });\n      this.uploadedFiles = [];\n    }\n\n    onClear() {\n      this.selectedFiles = [];\n    } // Callback to invoke when file upload is complete.\n\n\n    onUpload(event) {\n      if (event) {\n        for (const file of event.files) {\n          this.uploadedFiles.push(file);\n        }\n      }\n\n      this.selectedFiles = [];\n\n      this._notificationService.success('File Uploaded');\n\n      this.uploadedFiles = [];\n      this.progressValue = 0;\n    }\n\n    uploadHandler(event) {\n      let data = new Object();\n      data.fileData = event;\n      this.emitEvent(\"uploadHandler\", data);\n      this.selectedFiles = [];\n    }\n\n  }\n\n  FileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n    return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.ErrorDialogService), i0.ɵɵdirectiveInject(i5.ValidationService));\n  };\n\n  FileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FileUploadComponent,\n    selectors: [[\"app-file-upload\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 8,\n    consts: [[\"name\", \"files\", \"styleClass\", \"file-upload\", \"chooseLabel\", \"Browse\", \"uploadLabel\", \"Upload\", \"cancelLabel\", \"Remove\", 3, \"multiple\", \"maxFileSize\", \"accept\", \"auto\", \"customUpload\", \"files\", \"showCancelButton\", \"disabled\", \"onUpload\", \"uploadHandler\", \"onSelect\"], [\"pTemplate\", \"file\"], [\"pTemplate\", \"content\"], [1, \"label-value\", 3, \"value\"], [1, \"ui-fileupload-row\", \"d-flex\", \"justify-content-start\", \"align-items-center\"], [1, \"ml-2\"], [\"type\", \"button\", \"icon\", \"pi pi-times\", \"pbutton\", \"\", \"ng-reflect-icon\", \"pi pi-times\", 1, \"ui-button\", \"ui-widget\", \"ui-state-default\", \"ui-corner-all\", \"ui-button-icon-only\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"ui-button-icon-left\", \"ui-clickable\", \"pi\", \"pi-times\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function FileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0);\n        i0.ɵɵelementStart(1, \"p-fileUpload\", 0);\n        i0.ɵɵlistener(\"onUpload\", function FileUploadComponent_Template_p_fileUpload_onUpload_1_listener($event) {\n          return ctx.onUpload($event);\n        })(\"uploadHandler\", function FileUploadComponent_Template_p_fileUpload_uploadHandler_1_listener($event) {\n          return ctx.uploadHandler($event);\n        })(\"onSelect\", function FileUploadComponent_Template_p_fileUpload_onSelect_1_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵtemplate(2, FileUploadComponent_ng_template_2_Template, 9, 3, \"ng-template\", 1);\n        i0.ɵɵtemplate(3, FileUploadComponent_ng_template_3_Template, 1, 1, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"multiple\", ctx.dataModel.item.multiple)(\"maxFileSize\", ctx.dataModel.item.maxFileSize)(\"accept\", ctx.dataModel.item.accept)(\"auto\", ctx.dataModel.item.auto)(\"customUpload\", true)(\"files\", ctx.selectedFiles)(\"showCancelButton\", ctx.dataModel.item.multiple)(\"disabled\", ctx.uploadedFiles.length >= 1);\n      }\n    },\n    directives: [i6.FileUpload, i7.PrimeTemplate, i8.ProgressBar, i9.NgIf, i9.NgForOf],\n    styles: [\"\"]\n  });\n  return FileUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { ASSESSMENT_STATUS } from 'src/app/constants/app-repo.constants';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/validation.service\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/icon\";\n\nfunction RaiseChangeReqConfirmationComponent_div_1_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.condition, \" \");\n  }\n}\n\nfunction RaiseChangeReqConfirmationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \" You are about to raise a promoter-initiated change request. Note that change requests are only applicable under the following conditions: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ol\");\n    i0.ɵɵtemplate(4, RaiseChangeReqConfirmationComponent_div_1_li_4_Template, 2, 1, \"li\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \" Note that there is a \");\n    i0.ɵɵelementStart(7, \"span\", 5);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" charge for raising a change request. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵelementStart(12, \"strong\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.dataModel.data.conditionsForRaiseChangeReq);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\\u00A3 \", ctx_r0.dataModel.data.reqRaiseCharges, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.dataModel.data.conformationStatement);\n  }\n}\n\nfunction RaiseChangeReqConfirmationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"warning\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.dataModel.data.warningMassages);\n  }\n}\n\nexport let RaiseChangeReqConfirmationComponent = /*#__PURE__*/(() => {\n  class RaiseChangeReqConfirmationComponent extends WidgetComponentBase {\n    constructor(_serverApi, _validationService) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._validationService = _validationService;\n    }\n\n    ngOnInit() {\n      this.wgOnInit();\n    }\n\n    getControlData() {\n      return new Promise((resolve, reject) => {\n        let permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM);\n        permitform = permitform ? permitform : new Object();\n\n        if (permitform) {\n          resolve(permitform);\n        } else {\n          reject(permitform);\n        }\n      });\n    }\n\n    convertData(response) {\n      if (response) {\n        // this.dataModel.data.reqRaiseCharges = response.proposed_variation_cost;\n        if (response.assessment_decision.status == ASSESSMENT_STATUS.ASSESSMENT_MODIFICATION_STATUS) {\n          this.dataModel.data.ispermitModReqRaised = true;\n        }\n      }\n    }\n\n    setFieldData() {\n      let permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM);\n      let appId = permitform.application_id;\n\n      this._serverApi.get(`/api/v1/applications/${appId}/get-estimated-alteration-cost`).subscribe(response => {\n        try {\n          if (response) {\n            this.dataModel.data.reqRaiseCharges = response;\n          }\n        } catch (e) {}\n      }, error => {});\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    applyFilter(filterValue) {}\n\n  }\n\n  RaiseChangeReqConfirmationComponent.ɵfac = function RaiseChangeReqConfirmationComponent_Factory(t) {\n    return new (t || RaiseChangeReqConfirmationComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.ValidationService));\n  };\n\n  RaiseChangeReqConfirmationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RaiseChangeReqConfirmationComponent,\n    selectors: [[\"app-raise-change-req-confirmation\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"confirm-msg-container\"], [\"fxFlex\", \"100\", \"class\", \"confirmation\", 4, \"ngIf\"], [\"fxFlex\", \"95\", \"class\", \"warning-confirmation\", \"fxLayout\", \"row\", \"fxLayoutGap\", \"10px\", 4, \"ngIf\"], [\"fxFlex\", \"100\", 1, \"confirmation\"], [4, \"ngFor\", \"ngForOf\"], [1, \"charge-tag\"], [\"fxFlex\", \"95\", \"fxLayout\", \"row\", \"fxLayoutGap\", \"10px\", 1, \"warning-confirmation\"]],\n    template: function RaiseChangeReqConfirmationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, RaiseChangeReqConfirmationComponent_div_1_Template, 14, 3, \"div\", 1);\n        i0.ɵɵtemplate(2, RaiseChangeReqConfirmationComponent_div_2_Template, 5, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dataModel.data.ispermitModReqRaised);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataModel.data.ispermitModReqRaised);\n      }\n    },\n    directives: [i3.DefaultLayoutDirective, i3.DefaultLayoutAlignDirective, i4.NgIf, i3.DefaultFlexDirective, i4.NgForOf, i3.DefaultLayoutGapDirective, i5.MatIcon],\n    styles: [\".confirm-msg-container[_ngcontent-%COMP%]{padding:20px 10px}.charge-tag[_ngcontent-%COMP%]{font-size:20px;margin:0 5px;font-weight:600;color:var(--theme-color)}.warning-confirmation[_ngcontent-%COMP%]{color:var(--warning-massage-color);margin-bottom:10px}\"]\n  });\n  return RaiseChangeReqConfirmationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { PersistantDynamicFilterModel } from 'src/app/models/common/app-filter';\nimport { CountIndicatorV1ConfigModel, CountIndicatorV1DataModel } from 'src/app/modules/widget/count-indicator/count-indicator-v1/count-indicator-v1.model';\nimport { DashboardSelectsConfigModel, DashboardSelectsDataModel } from 'src/app/modules/widget/dashboard-selects/dashboard-selects.model';\nimport { FILTER_TYPE, GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { MatrixA2ConfigModel, MatrixA2Model } from 'src/app/modules/widget/matrix/matrix-a2/matrix-a2-model';\nimport { MatrixConfigModel, MatrixModel } from 'src/app/modules/widget/matrix/matrix/matrix.model';\nimport { PotentialCostCardConfigModel, PotentialCostCardDataModel } from 'src/app/modules/widget/card/potential-cost-card/potential-cost-card.model';\nimport { StepperCostConfigModel, StepperCostDataModel, StepperCostfilterModel } from 'src/app/modules/widget/stepper/stepper-cost/stepper-cost.model';\nimport { DialogModel } from 'src/app/modules/shared/dialog/dialog-model';\nimport { MANAGEMENT_DB_MATRIX_FILTER } from 'src/app/constants/db.constants';\nimport { WidgetConstants } from 'src/app/constants/widget-constants';\nimport { WidgetPageBase } from 'src/app/utility/widget/widget-utility/widget-page-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/event-action.service\";\nimport * as i3 from \"src/app/services/session-storage.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"src/app/services/app-repo.service\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"../../../widget/dashboard-selects/dashboard-selects.component\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"../../../widget/count-indicator/count-indicator-v1/count-indicator-v1.component\";\nimport * as i11 from \"../../../widget/stepper/stepper-cost/stepper-cost.component\";\nimport * as i12 from \"../../../widget/matrix/matrix-a2/matrix-a2.component\";\nimport * as i13 from \"../../../widget/card/potential-cost-card/potential-cost-card.component\";\nexport let PcpManagementDashboard1Component = /*#__PURE__*/(() => {\n  class PcpManagementDashboard1Component extends WidgetPageBase {\n    constructor(_serverApi, _eventActionServiceBase, _sessionStorageService, _router, _spinner, _appRepoService) {\n      super(_serverApi, _eventActionServiceBase, _sessionStorageService, _router, _spinner);\n      this._serverApi = _serverApi;\n      this._eventActionServiceBase = _eventActionServiceBase;\n      this._sessionStorageService = _sessionStorageService;\n      this._router = _router;\n      this._spinner = _spinner;\n      this._appRepoService = _appRepoService;\n      this.dialogModel = new DialogModel();\n      this.dashboardSelectsDataModel = DashboardSelectsDataModel.getInstance();\n      this.dashboardSelectsConfigModel = DashboardSelectsConfigModel.getInstance();\n      this.countIndicatorV11DataModel = CountIndicatorV1DataModel.getInstance();\n      this.countIndicatorV11ConfigModel = CountIndicatorV1ConfigModel.getInstance();\n      this.countIndicatorV12DataModel = CountIndicatorV1DataModel.getInstance();\n      this.countIndicatorV12ConfigModel = CountIndicatorV1ConfigModel.getInstance();\n      this.countIndicatorV13DataModel = CountIndicatorV1DataModel.getInstance();\n      this.countIndicatorV13ConfigModel = CountIndicatorV1ConfigModel.getInstance();\n      this.countIndicatorV14DataModel = CountIndicatorV1DataModel.getInstance();\n      this.countIndicatorV14ConfigModel = CountIndicatorV1ConfigModel.getInstance();\n      this.stepperCost1DataModel = StepperCostDataModel.getInstance();\n      this.stepperCost1ConfigModel = StepperCostConfigModel.getInstance();\n      this.stepperCost2DataModel = StepperCostDataModel.getInstance();\n      this.stepperCost2ConfigModel = StepperCostConfigModel.getInstance();\n      this.stepperCost3DataModel = StepperCostDataModel.getInstance();\n      this.stepperCost3ConfigModel = StepperCostConfigModel.getInstance();\n      this.stepperCost4DataModel = StepperCostDataModel.getInstance();\n      this.stepperCost4ConfigModel = StepperCostConfigModel.getInstance();\n      this.potentialCostCard1DataModel = PotentialCostCardDataModel.getInstance();\n      this.potentialCostCard1ConfigModel = PotentialCostCardConfigModel.getInstance();\n      this.potentialCostCard2DataModel = PotentialCostCardDataModel.getInstance();\n      this.potentialCostCard2ConfigModel = PotentialCostCardConfigModel.getInstance();\n      this.potentialCostCard3DataModel = PotentialCostCardDataModel.getInstance();\n      this.potentialCostCard3ConfigModel = PotentialCostCardConfigModel.getInstance();\n      this.potentialCostCard4DataModel = PotentialCostCardDataModel.getInstance();\n      this.potentialCostCard4ConfigModel = PotentialCostCardConfigModel.getInstance();\n      this.matrixDataModel = MatrixModel.getInstance();\n      this.matrixConfigModel = MatrixConfigModel.getInstance();\n      this.matrixA2DataModel = MatrixA2Model.getInstance();\n      this.matrixA2ConfigModel = MatrixA2ConfigModel.getInstance();\n    }\n\n    ngOnInit() {\n      this.bindDashboardSelectsDataModel();\n      this.bindDashboardSelectsConfigModel();\n      this.bindCountIndicatorV1DataModel();\n      this.bindCountIndicatorV1ConfigModel();\n      this.bindCountIndicatorV2DataModel();\n      this.bindCountIndicatorV2ConfigModel();\n      this.bindCountIndicatorV3DataModel();\n      this.bindCountIndicatorV3ConfigModel();\n      this.bindCountIndicatorV4DataModel();\n      this.bindCountIndicatorV4ConfigModel();\n      this.bindStepperCost1DataModel();\n      this.bindStepperCost1ConfigModel();\n      this.bindStepperCost2DataModel();\n      this.bindStepperCost2ConfigModel();\n      this.bindStepperCost3DataModel();\n      this.bindStepperCost3ConfigModel();\n      this.bindStepperCost4DataModel();\n      this.bindStepperCost4ConfigModel();\n      this.bindPotentialCostCard1DataModel();\n      this.bindPotentialCostCard1ConfigModel();\n      this.bindPotentialCostCard2DataModel();\n      this.bindPotentialCostCard2ConfigModel();\n      this.bindPotentialCostCard3DataModel();\n      this.bindPotentialCostCard3ConfigModel();\n      this.bindPotentialCostCard4DataModel();\n      this.bindPotentialCostCard4ConfigModel();\n      this.bindMatrixDataModel();\n      this.bindMatrixConfigModel();\n      this.bindMatrixA2DataModel();\n      this.bindMatrixA2ConfigModel();\n      this.bindMatrixA2Events();\n      this.getPotentialCostCardData();\n      this.getCountIndicatorStepperCostData();\n    }\n\n    getCountIndicatorStepperCostData() {\n      this._serverApi.get(\"/api/v1/cost-penalty/dashboard/status-count-and-cost\").subscribe(response => {\n        this.countIndicatorV11DataModel.data.count = response.groups[0].total;\n        this.countIndicatorV12DataModel.data.count = response.groups[1].total;\n        this.countIndicatorV13DataModel.data.count = response.groups[2].total;\n        this.countIndicatorV14DataModel.data.count = response.groups[3].total;\n        this.stepperCost1DataModel.StepperCostfilterModel = this.convertTostepperCost1ResponseModel(response.groups[0].items);\n        this.stepperCost2DataModel.StepperCostfilterModel = this.convertTostepperCost2ResponseModel(response.groups[1].items);\n        this.stepperCost3DataModel.StepperCostfilterModel = this.convertTostepperCost3ResponseModel(response.groups[2].items);\n        this.stepperCost4DataModel.StepperCostfilterModel = this.convertTostepperCost4ResponseModel(response.groups[3].items);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    convertTostepperCost1ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = \"TASK001\";\n        dataItem.color = \"#3e6fb6\";\n        dataItem.count = \"50\";\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = \"false\"; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    convertTostepperCost2ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = \"TASK001\";\n        dataItem.color = \"#3e6fb6\";\n        dataItem.count = \"50\";\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = \"false\"; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    convertTostepperCost3ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = \"TASK001\";\n        dataItem.color = \"#3e6fb6\";\n        dataItem.count = \"50\";\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = \"false\"; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    convertTostepperCost4ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = \"TASK001\";\n        dataItem.color = \"#3e6fb6\";\n        dataItem.count = \"50\";\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = \"false\"; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    getPotentialCostCardData() {\n      this._serverApi.get(\"/api/v1/cost-penalty/dashboard/management-cost\").subscribe(response => {\n        this.potentialCostCard1DataModel.data.cost = response.groups[0].items[0].data;\n        this.potentialCostCard1DataModel.data.label1 = response.groups[0].items[0].name;\n        this.potentialCostCard2DataModel.data.cost = response.groups[0].items[1].data;\n        this.potentialCostCard2DataModel.data.label1 = response.groups[0].items[1].name;\n        this.potentialCostCard3DataModel.data.cost = response.groups[0].items[2].data;\n        this.potentialCostCard3DataModel.data.label1 = response.groups[0].items[2].name;\n        this.potentialCostCard4DataModel.data.cost = response.groups[0].items[3].data;\n        this.potentialCostCard4DataModel.data.label1 = response.groups[0].items[3].name;\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    bindMatrixA2DataModel() {\n      this.matrixA2DataModel.tableRowHeadingLeft = \"15%\";\n      this.matrixA2DataModel.tableRowHeadingRight = \"23%\";\n      this.matrixA2DataModel.apiDataUrl = \"/v1/cost-penalty/dashboard/jeopardy-metrics\";\n      this.matrixA2DataModel.showProgressBar = true;\n      this.matrixA2DataModel.showArrowIcon = true;\n      this.matrixA2DataModel.tableTdHeight = \"171px\";\n      this.matrixA2DataModel.columnLength = 4;\n      this.matrixA2DataModel.rowLength = 3;\n      this.matrixA2DataModel.templateid = \"Template1\";\n      this.matrixA2DataModel.headers = [{\n        headerText: \"Penalty Avoidance\",\n        headerValue: \"Penalty Avoidance\"\n      }, {\n        headerText: \"Penalty Acceptance/Challenge\",\n        headerValue: \"Penalty Acceptance/Challenge\"\n      }, {\n        headerText: \"Payment\",\n        headerValue: \"Payment\"\n      }];\n      this.matrixA2DataModel.rowHeaders = [{\n        rowText: \"Overdue\",\n        displayRowHeaderText: \"Overdue\",\n        rowIcon: \"fa fa-exclamation-triangle\",\n        rowIconColor: \"#4998e2\"\n      }, {\n        rowText: \"Attention Required\",\n        displayRowHeaderText: \"Attention Required\",\n        rowIcon: \"fa fa-bug\",\n        rowIconColor: \"#4998e2\"\n      }, {\n        rowText: \"Meeting Expectations\",\n        displayRowHeaderText: \"Meeting Expectations\",\n        rowIcon: \"fa fa-pencil-square-o\",\n        rowIconColor: \"#4998e2\"\n      }];\n      this.matrixA2DataModel.items = [[{\n        displayText: 25,\n        percentage: 25,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.FPNS_OUTSTANDING,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.FPNS_DUETHISWEEK,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.FPNS_TOTAL,\n        isRatioChartColumn: false\n      }], [{\n        displayText: 30,\n        percentage: 30,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.DEFECTS_OUTSTANDING,\n        isRatioChartColumn: false\n      }, {\n        displayText: 60,\n        percentage: 60,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.DEFECTS_DUETHISWEEK,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.DEFECTS_TOTAL,\n        isRatioChartColumn: false\n      }], [{\n        displayText: 55,\n        percentage: 55,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.REGISTRATIONS_OUTSTANDING,\n        isRatioChartColumn: false\n      }, {\n        displayText: 80,\n        percentage: 80,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.REGISTRATIONS_DUETHISWEEK,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.REGISTRATIONS_TOTAL,\n        isRatioChartColumn: false\n      }]];\n    }\n\n    bindMatrixA2ConfigModel() {}\n\n    bindMatrixA2Events() {\n      let eventActions = [[\"onMatrixCountClick\", [{\n        \"action\": \"executePageMethod\",\n        \"params\": [{\n          \"methodname\": \"page_onMatrixA2CountClick\"\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.matrixA2DataModel, this.matrixA2ConfigModel);\n    }\n\n    page_onMatrixA2CountClick(eventparams, wigDataContext, params) {\n      let filterData = new PersistantDynamicFilterModel();\n      let matrixLabel = eventparams.dataContext.row + \" - \" + eventparams.dataContext.col; // alert(eventparams.dataContext.row)\n\n      if (eventparams.dataContext.row == \"Fixed Penalty Notices\" || eventparams.dataContext.row == \"Defects\") {\n        this.dialogModel = new DialogModel();\n        this.dialogModel.visible = true;\n        this.dialogModel.header = \"Listing Popup\";\n      } else {\n        filterData.managementMetricsFilter = eventparams.dataContext.filterValue;\n        this.setNavigationDataAndNavigate(filterData, matrixLabel, FILTER_TYPE.DYNAMIC_FILTER);\n      }\n    }\n\n    setNavigationDataAndNavigate(filterData, filterListTitle, filterType) {\n      let navigationData = new Map();\n      this.globalParameters.set(GLOBAL_PARAM_KEY.FILTERED_LIST_TITLE, filterListTitle);\n      navigationData.set(GLOBAL_PARAM_KEY.FILTERED_LIST_TITLE, this.globalParameters.get(GLOBAL_PARAM_KEY.FILTERED_LIST_TITLE));\n\n      this._sessionStorageService.setNavigationData(navigationData);\n\n      this.setFilterDataToAppGlobalPersistantData(filterData, filterType);\n\n      this._router.navigate(['./admin/pcp-workbench']);\n    }\n\n    setFilterDataToAppGlobalPersistantData(filterData, filterType) {\n      let filterGlobalPersistData = this._appRepoService.appRepo.appGlobalPersistantData.get(GLOBAL_PARAM_KEY.APP_FILTER);\n\n      if (filterType == FILTER_TYPE.DYNAMIC_FILTER) {\n        filterGlobalPersistData.persistantfilterType = FILTER_TYPE.DYNAMIC_FILTER;\n        filterGlobalPersistData.persistantDynamicFilterModel = filterData;\n      } else {\n        filterGlobalPersistData.persistantDynamicFilterModel = null;\n        filterGlobalPersistData.persistantfilterType = FILTER_TYPE.ADVANCE_FILTER;\n        filterGlobalPersistData.persistantAdvanceFilterModel = filterData;\n      }\n\n      this._appRepoService.appRepo.appGlobalPersistantData.set(GLOBAL_PARAM_KEY.APP_FILTER, filterGlobalPersistData);\n    }\n\n    bindMatrixDataModel() {\n      this.matrixDataModel.tableRowHeadingLeft = \"10%\";\n      this.matrixDataModel.tableRowHeadingRight = \"23%\";\n      this.matrixDataModel.tableTdHeight = \"101px\";\n      this.matrixDataModel.apiDataUrl = \"/v1/widget/getwidgetdata\";\n      this.matrixDataModel.showProgressBar = true;\n      this.matrixDataModel.templateid = \"Template1\";\n      this.matrixDataModel.showArrowIcon = true;\n      this.matrixDataModel.columnLength = 3;\n      this.matrixDataModel.rowLength = 3;\n      this.matrixDataModel.headers = [{\n        headerText: \"With Streetworks Admin Team\",\n        headerValue: \"With Streetworks Admin Team\"\n      }, {\n        headerText: \"With Finance Admin Team\",\n        headerValue: \"With Finance Admin Team\"\n      }];\n      this.matrixDataModel.rowHeaders = [{\n        rowText: \"Meeting Expectations\",\n        displayRowHeaderText: \"Meeting Expectations\",\n        rowIcon: \"fa fa-exclamation-triangle\",\n        rowIconColor: \"#662F8E\"\n      }, {\n        rowText: \"Attention Required\",\n        displayRowHeaderText: \"Attention Required\",\n        rowIcon: \"fa fa-exclamation-triangle\",\n        rowIconColor: \"#FF0000\"\n      }, {\n        rowText: \"Overdue\",\n        displayRowHeaderText: \"Overdue\",\n        rowIcon: \"fa fa-exclamation-triangle\",\n        rowIconColor: \"#FFC300\"\n      }];\n      this.matrixDataModel.items = [[{\n        displayText: 23,\n        percentage: 23,\n        bottonText: 0,\n        text1: \"\",\n        text2: \"\",\n        iconname: \"\",\n        iconcolor: \"\",\n        rowArrowIcon: \"\",\n        rowArrowColor: \"\",\n        bottomCenterText: \"\"\n      }, {\n        displayText: 32,\n        percentage: 32,\n        bottonText: 0,\n        text1: \"\",\n        text2: \"\",\n        iconname: \"\",\n        iconcolor: \"\",\n        rowArrowIcon: \"\",\n        rowArrowColor: \"\",\n        bottomCenterText: \"\"\n      }], [{\n        displayText: 10,\n        percentage: 10,\n        bottonText: 0,\n        text1: \"\",\n        text2: \"\",\n        iconname: \"\",\n        iconcolor: \"\",\n        rowArrowIcon: \"\",\n        rowArrowColor: \"\",\n        bottomCenterText: \"\"\n      }, {\n        displayText: 15,\n        percentage: 15,\n        bottonText: 0,\n        text1: \"\",\n        text2: \"\",\n        iconname: \"\",\n        iconcolor: \"\",\n        rowArrowIcon: \"\",\n        rowArrowColor: \"\",\n        bottomCenterText: \"\"\n      }], [{\n        displayText: 6,\n        percentage: 6,\n        bottonText: 0,\n        text1: \"\",\n        text2: \"\",\n        iconname: \"\",\n        iconcolor: \"\",\n        rowArrowIcon: \"\",\n        rowArrowColor: \"\",\n        bottomCenterText: \"\"\n      }, {\n        displayText: 14,\n        percentage: 14,\n        bottonText: 0,\n        text1: \"\",\n        text2: \"\",\n        iconname: \"\",\n        iconcolor: \"\",\n        rowArrowIcon: \"\",\n        rowArrowColor: \"\",\n        bottomCenterText: \"\"\n      }]];\n    }\n\n    bindMatrixConfigModel() {}\n\n    bindPotentialCostCard1ConfigModel() {}\n\n    bindPotentialCostCard1DataModel() {// this.potentialCostCard1DataModel.data.label1 = \"Estimated FPN Charges\";\n      // this.potentialCostCard1DataModel.data.label2 = \"Due Today\";\n      // this.potentialCostCard1DataModel.data.cost = 750;\n    }\n\n    bindPotentialCostCard2ConfigModel() {}\n\n    bindPotentialCostCard2DataModel() {\n      this.potentialCostCard2DataModel.data.label1 = \"Invoice Charges\";\n      this.potentialCostCard2DataModel.data.label2 = \"Due Today\"; // this.potentialCostCard2DataModel.data.cost = 1020;\n    }\n\n    bindPotentialCostCard3ConfigModel() {}\n\n    bindPotentialCostCard3DataModel() {\n      this.potentialCostCard3DataModel.data.label1 = \"Annual Cummulative\";\n      this.potentialCostCard3DataModel.data.label2 = \"Avoidable Costs\"; // this.potentialCostCard3DataModel.data.cost = 8300;\n\n      this.potentialCostCard3DataModel.data.backgroundColor = '--potential-cost-card-bg1-color';\n    }\n\n    bindPotentialCostCard4ConfigModel() {}\n\n    bindPotentialCostCard4DataModel() {\n      this.potentialCostCard4DataModel.data.label1 = \"Invoiced\";\n      this.potentialCostCard4DataModel.data.label2 = \"Avoidable Costs\"; // this.potentialCostCard4DataModel.data.cost = 6200;\n\n      this.potentialCostCard4DataModel.data.backgroundColor = '--potential-cost-card-bg1-color';\n    }\n\n    bindDashboardSelectsDataModel() {\n      this.dashboardSelectsDataModel.data = [{\n        selectLable: 'Highway Authority',\n        shouldLoadOptionFromAPI: false,\n        apiUrlForOptions: '',\n        options: [{\n          label: 'Higway Authority 1',\n          value: 1\n        }, {\n          label: 'Higway Authority 2',\n          value: 2\n        }]\n      }, {\n        selectLable: 'Contractor',\n        shouldLoadOptionFromAPI: false,\n        apiUrlForOptions: '',\n        options: [{\n          label: 'Contractor 1',\n          value: 1\n        }, {\n          label: 'Contractor 2',\n          value: 2\n        }]\n      }];\n    }\n\n    bindDashboardSelectsConfigModel() {}\n\n    bindCountIndicatorV1DataModel() {\n      this.countIndicatorV11DataModel.data.count = 10;\n      this.countIndicatorV11DataModel.data.lable = 'Planned Permits';\n      this.countIndicatorV11DataModel.data.countStyle['background-color'] = '#ffb300';\n    }\n\n    bindCountIndicatorV1ConfigModel() {}\n\n    bindCountIndicatorV2DataModel() {\n      this.countIndicatorV12DataModel.data.count = '08';\n      this.countIndicatorV12DataModel.data.lable = 'Granted Permits';\n      this.countIndicatorV12DataModel.data.countStyle['background-color'] = '#30b24a';\n    }\n\n    bindCountIndicatorV2ConfigModel() {}\n\n    bindCountIndicatorV3DataModel() {\n      this.countIndicatorV13DataModel.data.count = 20;\n      this.countIndicatorV13DataModel.data.lable = 'WIP Permits';\n      this.countIndicatorV13DataModel.data.countStyle['background-color'] = '#bbc6ef';\n    }\n\n    bindCountIndicatorV3ConfigModel() {}\n\n    bindCountIndicatorV4DataModel() {\n      this.countIndicatorV14DataModel.data.count = 100;\n      this.countIndicatorV14DataModel.data.lable = 'Closed Permits';\n      this.countIndicatorV14DataModel.data.countStyle['background-color'] = '#4d4f5c';\n    }\n\n    bindCountIndicatorV4ConfigModel() {}\n\n    bindStepperCost1ConfigModel() {\n      let eventActions = [[WidgetConstants.COUNT_CLICKED, [{\n        \"action\": \"executePageMethod\",\n        \"params\": [{\n          \"methodname\": \"page_onCountClick\"\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.stepperCost1DataModel, this.stepperCost1ConfigModel);\n    }\n\n    bindStepperCost1DataModel() {\n      this.stepperCost1DataModel.StepperCostfilterModel = [{\n        code: \"TASK001\",\n        color: \"#3e6fb6\",\n        count: \"50\",\n        cost: 5060,\n        countpercentage: \"19.5122\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer\",\n        name: 'Estimated Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }];\n    }\n\n    bindStepperCost2ConfigModel() {\n      let eventActions = [[WidgetConstants.COUNT_CLICKED, [{\n        \"action\": \"executePageMethod\",\n        \"params\": [{\n          \"methodname\": \"page_onCountClick\"\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.stepperCost2DataModel, this.stepperCost2ConfigModel);\n    }\n\n    bindStepperCost2DataModel() {\n      this.stepperCost2DataModel.StepperCostfilterModel = [{\n        code: \"TASK001\",\n        color: \"#3e6fb6\",\n        count: \"50\",\n        cost: 4620,\n        countpercentage: \"19.5122\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer\",\n        name: 'Estimated Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: \"TASK001\",\n        color: \"#67308f\",\n        count: \"50\",\n        cost: 645,\n        countpercentage: \"19.5122\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer\",\n        name: 'Avoidable Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }];\n    }\n\n    bindStepperCost3ConfigModel() {\n      let eventActions = [[WidgetConstants.COUNT_CLICKED, [{\n        \"action\": \"executePageMethod\",\n        \"params\": [{\n          \"methodname\": \"page_onCountClick\"\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.stepperCost3DataModel, this.stepperCost3ConfigModel);\n    }\n\n    bindStepperCost3DataModel() {\n      this.stepperCost3DataModel.StepperCostfilterModel = [{\n        code: \"TASK001\",\n        color: \"#3e6fb6\",\n        count: \"50\",\n        cost: 4270,\n        countpercentage: \"19.5122\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer\",\n        name: 'Estimated Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: \"TASK001\",\n        color: \"#67308f\",\n        count: \"50\",\n        cost: 1280,\n        countpercentage: \"19.5122\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer\",\n        name: 'Avoidable Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }];\n    }\n\n    bindStepperCost4ConfigModel() {\n      let eventActions = [[WidgetConstants.COUNT_CLICKED, [{\n        \"action\": \"executePageMethod\",\n        \"params\": [{\n          \"methodname\": \"page_onCountClick\"\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.stepperCost4DataModel, this.stepperCost4ConfigModel);\n    }\n\n    bindStepperCost4DataModel() {\n      this.stepperCost4DataModel.StepperCostfilterModel = [{\n        code: \"TASK001\",\n        color: \"#3e6fb6\",\n        count: \"50\",\n        cost: 63000,\n        countpercentage: \"19.5122\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer\",\n        name: 'Estimated Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: \"TASK002\",\n        color: \"#838296\",\n        count: \"20\",\n        cost: 40000,\n        countpercentage: \"40.2439\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"timer_off\",\n        name: 'Invoiced Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 2,\n        tasktypeuid: 9050000001,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: \"TASK019\",\n        color: \"#4d4f5c\",\n        count: \"10\",\n        cost: 32000,\n        countpercentage: \"5.4878\",\n        countvisible: \"0\",\n        display: \"0\",\n        displayheadericon: \"false\",\n        iconname: \"verified_user\",\n        name: 'Paid Cost',\n        producttypename: \"Adhoc Quotation\",\n        tasktypesequence: 3,\n        tasktypeuid: 9050000002,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }];\n    }\n\n  }\n\n  PcpManagementDashboard1Component.ɵfac = function PcpManagementDashboard1Component_Factory(t) {\n    return new (t || PcpManagementDashboard1Component)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.EventActionService), i0.ɵɵdirectiveInject(i3.SessionStorageService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.NgxSpinnerService), i0.ɵɵdirectiveInject(i6.AppRepoService));\n  };\n\n  PcpManagementDashboard1Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcpManagementDashboard1Component,\n    selectors: [[\"app-pcp-management-dashboard1\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 31,\n    vars: 28,\n    consts: [[1, \"dashboard-container\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end center\"], [3, \"dataModel\", \"configModel\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", \"fxLayoutGap\", \"25px\", 1, \"dashboard-row\"], [\"fxFlex\", \"49\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between start\", \"fxLayoutGap\", \"15px\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start start\", \"fxLayoutGap\", \"25px\", 1, \"dashboard-row\"], [\"fxFlex\", \"60\"], [\"fxFlex\", \"40\", \"fxLayout\", \"column\", \"fxLayoutGap\", \"25px\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"25px\"], [\"fxFlex\", \"50\"]],\n    template: function PcpManagementDashboard1Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-dashboard-selects\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"mat-card\", 4);\n        i0.ɵɵelement(5, \"app-count-indicator-v1\", 2);\n        i0.ɵɵelement(6, \"app-stepper-cost\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card\", 4);\n        i0.ɵɵelement(8, \"app-count-indicator-v1\", 2);\n        i0.ɵɵelement(9, \"app-stepper-cost\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelementStart(11, \"mat-card\", 4);\n        i0.ɵɵelement(12, \"app-count-indicator-v1\", 2);\n        i0.ɵɵelement(13, \"app-stepper-cost\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-card\", 4);\n        i0.ɵɵelement(15, \"app-count-indicator-v1\", 2);\n        i0.ɵɵelement(16, \"app-stepper-cost\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵelementStart(18, \"div\", 6);\n        i0.ɵɵelement(19, \"app-matrix-a2\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelementStart(21, \"div\", 8);\n        i0.ɵɵelementStart(22, \"div\", 9);\n        i0.ɵɵelement(23, \"app-potential-cost-card\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵelement(25, \"app-potential-cost-card\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 8);\n        i0.ɵɵelementStart(27, \"div\", 9);\n        i0.ɵɵelement(28, \"app-potential-cost-card\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 9);\n        i0.ɵɵelement(30, \"app-potential-cost-card\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.dashboardSelectsDataModel)(\"configModel\", ctx.dashboardSelectsConfigModel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataModel\", ctx.countIndicatorV11DataModel)(\"configModel\", ctx.countIndicatorV11ConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.stepperCost1DataModel)(\"configModel\", ctx.stepperCost1ConfigModel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.countIndicatorV12DataModel)(\"configModel\", ctx.countIndicatorV12ConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.stepperCost2DataModel)(\"configModel\", ctx.stepperCost2ConfigModel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataModel\", ctx.countIndicatorV13DataModel)(\"configModel\", ctx.countIndicatorV13ConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.stepperCost3DataModel)(\"configModel\", ctx.stepperCost3ConfigModel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.countIndicatorV14DataModel)(\"configModel\", ctx.countIndicatorV14ConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.stepperCost4DataModel)(\"configModel\", ctx.stepperCost4ConfigModel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataModel\", ctx.matrixA2DataModel)(\"configModel\", ctx.matrixA2ConfigModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataModel\", ctx.potentialCostCard1DataModel)(\"configModel\", ctx.potentialCostCard1ConfigModel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.potentialCostCard2DataModel)(\"configModel\", ctx.potentialCostCard2ConfigModel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataModel\", ctx.potentialCostCard3DataModel)(\"configModel\", ctx.potentialCostCard3ConfigModel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.potentialCostCard4DataModel)(\"configModel\", ctx.potentialCostCard4ConfigModel);\n      }\n    },\n    directives: [i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i8.DashboardSelectsComponent, i7.DefaultLayoutGapDirective, i9.MatCard, i7.DefaultFlexDirective, i10.CountIndicatorV1Component, i11.StepperCostComponent, i12.MatrixA2Component, i13.PotentialCostCardComponent],\n    styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:15px 25px 50px}.dashboard-row[_ngcontent-%COMP%]{margin-top:25px}.mat-card-padding-0[_ngcontent-%COMP%]{padding:0!important}\"]\n  });\n  return PcpManagementDashboard1Component;\n})();","map":null,"metadata":{},"sourceType":"module"}
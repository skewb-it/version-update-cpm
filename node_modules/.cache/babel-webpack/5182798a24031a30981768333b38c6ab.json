{"ast":null,"code":"import { PersistantDynamicFilterModel } from 'src/app/models/common/app-filter';\nimport { FILTER_TYPE, GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { MatrixA3ConfigModel, MatrixA3Model } from 'src/app/modules/widget/matrix/matrix-a3/matrix-a3-model';\nimport { MultiTabConfigModel, MutliTabDataModel } from 'src/app/modules/widget-app/cost-penalty-manager/multi-tab/multi-tab.model';\nimport { PCPChargesListConfigModel, PCPChargesListDataModel } from 'src/app/modules/widget-app/cost-penalty-manager/pcp-charges-list/pcp-charges.model';\nimport { PCPPermitQuickFilterConfigModel, PCPPermitQuickFilterDataModel } from 'src/app/modules/widget-app/cost-penalty-manager/pcp-quick-filter/permit-quick-filter.model';\nimport { PCPStepperConfigModel, PCPStepperDataModel } from 'src/app/modules/widget-app/cost-penalty-manager/pcp-stepper/pcp-stepper.model';\nimport { StepperCostfilterModel } from 'src/app/modules/widget/stepper/stepper-cost/stepper-cost.model';\nimport { DialogModel } from 'src/app/modules/shared/dialog/dialog-model';\nimport { MANAGEMENT_DB_MATRIX_FILTER } from 'src/app/constants/db.constants';\nimport { WidgetConstants } from 'src/app/constants/widget-constants';\nimport { WidgetPageBase } from 'src/app/utility/widget/widget-utility/widget-page-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/event-action.service\";\nimport * as i3 from \"src/app/services/session-storage.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"src/app/services/app-repo.service\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"../../../widget-app/cost-penalty-manager/pcp-quick-filter/pcp-quick-filter.component\";\nimport * as i10 from \"../../../widget-app/cost-penalty-manager/pcp-stepper/pcp-stepper.component\";\nimport * as i11 from \"../../../widget/matrix/matrix-a3/matrix-a3.component\";\nimport * as i12 from \"../../../widget-app/cost-penalty-manager/pcp-charges-list/pcp-charges-list.component\";\nimport * as i13 from \"../../../widget-app/cost-penalty-manager/multi-tab/multi-tab.component\";\nexport let PcpOperationalDashboardComponent = /*#__PURE__*/(() => {\n  class PcpOperationalDashboardComponent extends WidgetPageBase {\n    constructor(_serverApi, _eventActionServiceBase, _sessionStorageService, _router, _spinner, _appRepoService) {\n      super(_serverApi, _eventActionServiceBase, _sessionStorageService, _router, _spinner);\n      this._serverApi = _serverApi;\n      this._eventActionServiceBase = _eventActionServiceBase;\n      this._sessionStorageService = _sessionStorageService;\n      this._router = _router;\n      this._spinner = _spinner;\n      this._appRepoService = _appRepoService;\n      this.dialogModel = new DialogModel(); // this.dashboardSelectsDataModel = DashboardSelectsDataModel.getInstance();\n      // this.dashboardSelectsConfigModel =\n      //   DashboardSelectsConfigModel.getInstance();\n      // this.countIndicatorV11DataModel = CountIndicatorV1DataModel.getInstance();\n      // this.countIndicatorV11ConfigModel =\n      //   CountIndicatorV1ConfigModel.getInstance();\n      // this.countIndicatorV12DataModel = CountIndicatorV1DataModel.getInstance();\n      // this.countIndicatorV12ConfigModel =\n      //   CountIndicatorV1ConfigModel.getInstance();\n      // this.countIndicatorV13DataModel = CountIndicatorV1DataModel.getInstance();\n      // this.countIndicatorV13ConfigModel =\n      //   CountIndicatorV1ConfigModel.getInstance();\n      // this.countIndicatorV14DataModel = CountIndicatorV1DataModel.getInstance();\n      // this.countIndicatorV14ConfigModel =\n      //   CountIndicatorV1ConfigModel.getInstance();\n      // this.stepperCost1DataModel = StepperCostDataModel.getInstance();\n      // this.stepperCost1ConfigModel = StepperCostConfigModel.getInstance();\n      // this.stepperCost2DataModel = StepperCostDataModel.getInstance();\n      // this.stepperCost2ConfigModel = StepperCostConfigModel.getInstance();\n      // this.stepperCost3DataModel = StepperCostDataModel.getInstance();\n      // this.stepperCost3ConfigModel = StepperCostConfigModel.getInstance();\n      // this.stepperCost4DataModel = StepperCostDataModel.getInstance();\n      // this.stepperCost4ConfigModel = StepperCostConfigModel.getInstance();\n      // this.potentialCostCard1DataModel = PotentialCostCardDataModel.getInstance();\n      // this.potentialCostCard1ConfigModel =\n      //   PotentialCostCardConfigModel.getInstance();\n      // this.potentialCostCard2DataModel = PotentialCostCardDataModel.getInstance();\n      // this.potentialCostCard2ConfigModel =\n      //   PotentialCostCardConfigModel.getInstance();\n      // this.potentialCostCard3DataModel = PotentialCostCardDataModel.getInstance();\n      // this.potentialCostCard3ConfigModel =\n      //   PotentialCostCardConfigModel.getInstance();\n      // this.potentialCostCard4DataModel = PotentialCostCardDataModel.getInstance();\n      // this.potentialCostCard4ConfigModel =\n      //   PotentialCostCardConfigModel.getInstance();\n      // this.matrixDataModel = MatrixModel.getInstance();\n      // this.matrixConfigModel = MatrixConfigModel.getInstance();\n\n      this.matrixA3DataModel = MatrixA3Model.getInstance();\n      this.matrixA3ConfigModel = MatrixA3ConfigModel.getInstance();\n      this.permitQuickFilterDataModel = PCPPermitQuickFilterDataModel.getInstance();\n      this.permitQuickFilterConfigModel = PCPPermitQuickFilterConfigModel.getInstance();\n      this.pcpStepperDataModel = PCPStepperDataModel.getInstance();\n      this.pcpStepperConfigModel = PCPStepperConfigModel.getInstance();\n      this.pcpChargesListDataModel = PCPChargesListDataModel.getInstance();\n      this.pcpChargesListConfigModel = PCPChargesListConfigModel.getInstance();\n      this.pcpChargesList2DataModel = PCPChargesListDataModel.getInstance();\n      this.pcpChargesList2ConfigModel = PCPChargesListConfigModel.getInstance();\n      this.mutliTabDataModel = MutliTabDataModel.getInstance();\n      this.multiTabConfigModel = MultiTabConfigModel.getInstance();\n      this.mutliTab2DataModel = MutliTabDataModel.getInstance();\n      this.multiTab2ConfigModel = MultiTabConfigModel.getInstance();\n      this.mutliTab3DataModel = MutliTabDataModel.getInstance();\n      this.multiTab3ConfigModel = MultiTabConfigModel.getInstance();\n      this.mutliTab4DataModel = MutliTabDataModel.getInstance();\n      this.multiTab4ConfigModel = MultiTabConfigModel.getInstance();\n    }\n\n    ngOnInit() {\n      // this.bindDashboardSelectsDataModel();\n      // this.bindDashboardSelectsConfigModel();\n      // this.bindCountIndicatorV1DataModel();\n      // this.bindCountIndicatorV1ConfigModel();\n      // this.bindCountIndicatorV2DataModel();\n      // this.bindCountIndicatorV2ConfigModel();\n      // this.bindCountIndicatorV3DataModel();\n      // this.bindCountIndicatorV3ConfigModel();\n      // this.bindCountIndicatorV4DataModel();\n      // this.bindCountIndicatorV4ConfigModel();\n      // this.bindStepperCost1DataModel();\n      // this.bindStepperCost1ConfigModel();\n      // this.bindStepperCost2DataModel();\n      // this.bindStepperCost2ConfigModel();\n      // this.bindStepperCost3DataModel();\n      // this.bindStepperCost3ConfigModel();\n      // this.bindStepperCost4DataModel();\n      // this.bindStepperCost4ConfigModel();\n      // this.bindPotentialCostCard1DataModel();\n      // this.bindPotentialCostCard1ConfigModel();\n      // this.bindPotentialCostCard2DataModel();\n      // this.bindPotentialCostCard2ConfigModel();\n      // this.bindPotentialCostCard3DataModel();\n      // this.bindPotentialCostCard3ConfigModel();\n      // this.bindPotentialCostCard4DataModel();\n      // this.bindPotentialCostCard4ConfigModel();\n      // this.bindMatrixDataModel();\n      // this.bindMatrixConfigModel();\n      this.bindMatrixA3DataModel();\n      this.bindMatrixA3ConfigModel();\n      this.bindMatrixA3Events(); // this.getPotentialCostCardData();\n      // this.getCountIndicatorStepperCostData();\n\n      this.bindPermitQuickFilterDataModel();\n      this.bindPermitQuickFilterEvents();\n      this.bindPCPStepperDataModel();\n      this.bindPCPStepperConfigModel();\n      this.bindPCPChargesListDataModel();\n      this.bindPCPChargesListConfigModel();\n      this.bindPCPChargesList2DataModel();\n      this.bindPCPChargesList2ConfigModel();\n      this.bindMutliTabDataModel();\n      this.bindMutliTabConfigModel();\n      this.bindMutliTab2DataModel();\n      this.bindMutliTab2ConfigModel();\n      this.bindMutliTab3DataModel();\n      this.bindMutliTab3ConfigModel();\n      this.bindMutliTab4DataModel();\n      this.bindMutliTab4ConfigModel();\n    }\n\n    bindMutliTabDataModel() {\n      this.mutliTabDataModel.content = {\n        heading: 'Estimated',\n        today: '177',\n        thisWeek: '1289',\n        iconColor: '#ffc107',\n        iconName: 'fa fa-clock-o'\n      }; // { status: 'Accepted', today: '177', thisWeek: '1289', iconColor: '' },\n      // { status: 'Paid', today: '177', thisWeek: '1289', iconColor: '' },\n      // { status: 'Recharged', today: '177', thisWeek: '1289', iconColor: '' },\n    }\n\n    bindMutliTab2DataModel() {\n      this.mutliTab2DataModel.content = {\n        heading: 'Accepted',\n        today: '177',\n        thisWeek: '1289',\n        iconColor: '#fa5c7c',\n        iconName: 'fa fa-dollar'\n      };\n    }\n\n    bindMutliTab3DataModel() {\n      this.mutliTab3DataModel.content = {\n        heading: 'Paid',\n        today: '177',\n        thisWeek: '1289',\n        iconColor: '#ca4b4b',\n        iconName: 'fa fa-hourglass-half'\n      };\n    }\n\n    bindMutliTab4DataModel() {\n      this.mutliTab4DataModel.content = {\n        heading: 'Recharged',\n        today: '177',\n        thisWeek: '1289',\n        iconColor: '#bdbdbd',\n        iconName: 'fa fa-credit-card'\n      };\n    }\n\n    bindMutliTabConfigModel() {}\n\n    bindMutliTab2ConfigModel() {}\n\n    bindMutliTab3ConfigModel() {}\n\n    bindMutliTab4ConfigModel() {}\n\n    bindPCPChargesListDataModel() {\n      this.pcpChargesListDataModel.header = 'Charges Due Today';\n      this.pcpChargesListDataModel.headers = ['Charge', 'Count', 'Amount'];\n      this.pcpChargesListDataModel.keys = ['col_name', 'col_count', 'amount'];\n      this.pcpChargesListDataModel.rowData = [{\n        col_name: 'Fixed Penalty Notices',\n        col_count: 0,\n        amount: '1234'\n      }, {\n        col_name: 'Section 74 Charges',\n        col_count: 10,\n        amount: '24'\n      }, {\n        col_name: 'Defect Charges',\n        col_count: 7,\n        amount: '1234'\n      }, {\n        col_name: 'Pemit Charges',\n        col_count: 11,\n        amount: '1234'\n      }, {\n        col_name: 'Traffic Management Charges',\n        col_count: 9,\n        amount: '234'\n      }, {\n        col_name: 'Sample Inspection Charges',\n        col_count: 1,\n        amount: '34'\n      }, {\n        col_name: 'Miscellaneous Charges',\n        col_count: 0,\n        amount: '12'\n      }];\n    }\n\n    bindPCPChargesListConfigModel() {}\n\n    bindPCPChargesList2DataModel() {\n      this.pcpChargesList2DataModel.header = 'Charges Due This Week';\n      this.pcpChargesList2DataModel.headers = ['Charge', 'Count', 'Amount'];\n      this.pcpChargesList2DataModel.keys = ['col_name', 'col_count', 'amount'];\n      this.pcpChargesList2DataModel.rowData = [{\n        col_name: 'Fixed Penalty Notices',\n        col_count: 0,\n        amount: '1234'\n      }, {\n        col_name: 'Section 74 Charges',\n        col_count: 10,\n        amount: '24.00'\n      }, {\n        col_name: 'Defect Charges',\n        col_count: 7,\n        amount: '1234'\n      }, {\n        col_name: 'Pemit Charges',\n        col_count: 11,\n        amount: '1234'\n      }, {\n        col_name: 'Traffic Management Charges',\n        col_count: 9,\n        amount: '234'\n      }, {\n        col_name: 'Sample Inspection Charges',\n        col_count: 1,\n        amount: '34'\n      }, {\n        col_name: 'Miscellaneous Charges',\n        col_count: 0,\n        amount: '12'\n      }];\n    }\n\n    bindPCPChargesList2ConfigModel() {}\n\n    bindPCPChargesListDataModelFpn() {\n      this.pcpChargesListDataModel.header = 'FPN Actions Due Today';\n      this.pcpChargesListDataModel.headers = ['Charge', 'Count', 'Amount'];\n      this.pcpChargesListDataModel.keys = ['col_name', 'col_count', 'amount'];\n      this.pcpChargesListDataModel.rowData = [{\n        col_name: 'Issued',\n        col_count: 0,\n        amount: '1234'\n      }, {\n        col_name: 'Acceptance due',\n        col_count: 10,\n        amount: '24.00'\n      }, {\n        col_name: 'PO due to be raised',\n        col_count: 7,\n        amount: '1234'\n      }, {\n        col_name: 'Payment due',\n        col_count: 11,\n        amount: '1234'\n      }, {\n        col_name: 'Recharge due',\n        col_count: 9,\n        amount: '234'\n      }, {\n        col_name: 'Reminders due',\n        col_count: 1,\n        amount: '34'\n      }];\n    }\n\n    bindPCPChargesList2DataModelFpn() {\n      this.pcpChargesList2DataModel.header = 'FPN Actions Due This Week';\n      this.pcpChargesList2DataModel.headers = ['Charge', 'Count', 'Amount'];\n      this.pcpChargesList2DataModel.keys = ['col_name', 'col_count', 'amount'];\n      this.pcpChargesList2DataModel.rowData = [{\n        col_name: 'Issued',\n        col_count: 0,\n        amount: '1234'\n      }, {\n        col_name: 'Acceptance due',\n        col_count: 10,\n        amount: '24.00'\n      }, {\n        col_name: 'PO due to be raised',\n        col_count: 7,\n        amount: '1234'\n      }, {\n        col_name: 'Payment due',\n        col_count: 11,\n        amount: '1234'\n      }, {\n        col_name: 'Recharge due',\n        col_count: 9,\n        amount: '234'\n      }, {\n        col_name: 'Reminders due',\n        col_count: 1,\n        amount: '34'\n      } // {\n      //   col_name: 'Miscellaneous Charges',\n      //   col_count: 0,\n      //   amount: '12',\n      // },\n      ];\n    }\n\n    bindPCPStepperDataModel() {\n      this.pcpStepperDataModel.PCPStepperfilterModel = [{\n        code: 'TASK001',\n        color: '#67308F',\n        count: '50',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Estimated',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#FB8C00',\n        count: '20',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Issued',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#FB8C00',\n        count: '5',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Assigned',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#2196F3',\n        count: '1',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Accepted',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#FF5252',\n        count: '3',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Disputed',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#00C853',\n        count: '7',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'PO Raised',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#00C853',\n        count: '2',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Paid',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }, {\n        code: 'TASK001',\n        color: '#1B5E20',\n        count: '11',\n        countpercentage: '19.5122',\n        countvisible: '0',\n        display: '0',\n        displayheadericon: 'false',\n        iconname: 'timer',\n        name: 'Recharged',\n        producttypename: 'Adhoc Quotation',\n        tasktypesequence: 1,\n        tasktypeuid: 9050000000,\n        isValueVisible: 'true',\n        isPercentageVisible: 'false'\n      }];\n    }\n\n    bindPCPStepperConfigModel() {\n      let eventActions = [[WidgetConstants.COUNT_CLICKED, [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_onCountClick'\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.pcpStepperDataModel, this.pcpStepperConfigModel);\n    }\n\n    bindPermitQuickFilterDataModel() {\n      // this.permitQuickFilterDataModel.apiDataUrl =\n      // '/api/v1/cost-penalty/cost-quick-filter-count';\n      super.setGlobalParams(this.permitQuickFilterDataModel);\n      this.permitQuickFilterDataModel.quickFilters = [{\n        filterValue: '_all',\n        label: 'All',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }, {\n        filterValue: 'FPN',\n        label: 'FPNs',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }, {\n        filterValue: 'SECTION_74_CHARGES',\n        label: 'S74',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }, {\n        filterValue: 'DEFECTS',\n        label: 'Defects',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }, {\n        filterValue: 'PERMIT_COST_ONLY',\n        label: 'Permit Charges',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }, {\n        filterValue: 'Inspection_Charges',\n        label: 'Sample Inspection Charges',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }, {\n        filterValue: 'Miscellaneous',\n        label: 'Miscellaneous Charges',\n        count: 0,\n        icon: '',\n        helperTitle: ''\n      }];\n    }\n\n    quickfilterConvertData() {}\n\n    bindPermitQuickFilterEvents() {\n      let eventActions = [[PCPPermitQuickFilterConfigModel.COMP_TO_CALLER_APPLY_FILTER, [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_quickFitlerClick'\n        }]\n      }, {\n        action: 'applyFilterOnChange',\n        params: [{\n          'page.filterposition': \"'quick-filter'\",\n          'page.gridposition': \"'pcp-permit-list'\",\n          'page.clearFilter': \"'permitAdvanceFilter'\",\n          'targ.filterType': FILTER_TYPE.QUICK_FILTER\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.permitQuickFilterDataModel, this.permitQuickFilterConfigModel);\n    }\n\n    page_quickFitlerClick(eventparams, wigDataContext, params) {\n      let filterGlobalParams = this._appRepoService.appRepo.appGlobalPersistantData.get(this.permitQuickFilterDataModel.appGlobalParamsKeyForQuickFilter);\n\n      let filtervaue = filterGlobalParams.persistantQuickFilterModel.filterValue;\n\n      if (filtervaue != '_all') {\n        this.bindPCPChargesListDataModelFpn();\n        this.bindPCPChargesList2DataModelFpn();\n      } else {\n        this.bindPCPChargesList2DataModel();\n        this.bindPCPChargesListDataModel();\n      }\n\n      if (filtervaue == 'FPN') {\n        this.pcpChargesListDataModel.header = 'FPN Actions Due Today';\n        this.pcpChargesList2DataModel.header = 'FPN Actions Due Today';\n      } else if (filtervaue == 'SECTION_74_CHARGES') {\n        this.pcpChargesListDataModel.header = 'S74 Actions Due Today';\n        this.pcpChargesList2DataModel.header = 'S74 Actions Due This Week';\n      } else if (filtervaue == 'DEFECTS') {\n        this.pcpChargesListDataModel.header = 'Defects Actions Due Today';\n        this.pcpChargesList2DataModel.header = 'Defects Actions Due This Week';\n      } else if (filtervaue == 'PERMIT_COST_ONLY') {\n        this.pcpChargesListDataModel.header = 'Permit Charges Due Today';\n        this.pcpChargesList2DataModel.header = 'Permit Charges Due This Week';\n      } else if (filtervaue == 'Inspection_Charges') {\n        this.pcpChargesListDataModel.header = 'Sample Inspection Charges Due Today';\n        this.pcpChargesList2DataModel.header = 'Sample Inspection Charges Due This Week';\n      } else if (filtervaue == 'Miscellaneous') {\n        this.pcpChargesListDataModel.header = 'Miscellaneous Charges Due Today';\n        this.pcpChargesList2DataModel.header = 'Miscellaneous Charges Due This Week';\n      }\n    } // getCountIndicatorStepperCostData() {\n    //   this._serverApi\n    //     .get<any>('/api/v1/cost-penalty/dashboard/status-count-and-cost')\n    //     .subscribe(\n    //       (response) => {\n    //         this.countIndicatorV11DataModel.data.count = response.groups[0].total;\n    //         this.countIndicatorV12DataModel.data.count = response.groups[1].total;\n    //         this.countIndicatorV13DataModel.data.count = response.groups[2].total;\n    //         this.countIndicatorV14DataModel.data.count = response.groups[3].total;\n    //         this.stepperCost1DataModel.StepperCostfilterModel =\n    //           this.convertTostepperCost1ResponseModel(response.groups[0].items);\n    //         this.stepperCost2DataModel.StepperCostfilterModel =\n    //           this.convertTostepperCost2ResponseModel(response.groups[1].items);\n    //         this.stepperCost3DataModel.StepperCostfilterModel =\n    //           this.convertTostepperCost3ResponseModel(response.groups[2].items);\n    //         this.stepperCost4DataModel.StepperCostfilterModel =\n    //           this.convertTostepperCost4ResponseModel(response.groups[3].items);\n    //       },\n    //       (error) => {\n    //         console.log(error);\n    //       }\n    //     );\n    // }\n\n\n    convertTostepperCost1ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = 'TASK001';\n        dataItem.color = '#3e6fb6';\n        dataItem.count = '50';\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = 'false'; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    convertTostepperCost2ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = 'TASK001';\n        dataItem.color = '#3e6fb6';\n        dataItem.count = '50';\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = 'false'; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    convertTostepperCost3ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = 'TASK001';\n        dataItem.color = '#3e6fb6';\n        dataItem.count = '50';\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = 'false'; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    }\n\n    convertTostepperCost4ResponseModel(data) {\n      let convertedData = new Array();\n      if (data == undefined) return convertedData;\n      if (data.length == 0) return convertedData;\n      data.forEach(item => {\n        let dataItem = new StepperCostfilterModel();\n        dataItem.code = 'TASK001';\n        dataItem.color = '#3e6fb6';\n        dataItem.count = '50';\n        dataItem.cost = item.data; // dataItem.countpercentage: \"19.5122\",\n        // dataItem.countvisible: \"0\",\n        // dataItem.display: \"0\",\n\n        dataItem.displayheadericon = 'false'; // dataItem.iconname: \"timer\",\n\n        dataItem.name = item.name; // dataItem.producttypename: \"Adhoc Quotation\",\n        // dataItem.tasktypesequence: 1,\n        // dataItem.tasktypeuid: 9050000000,\n\n        dataItem.isValueVisible = 'true';\n        dataItem.isPercentageVisible = 'false';\n        convertedData.push(dataItem);\n      });\n      return convertedData;\n    } // getPotentialCostCardData() {\n    //   this._serverApi\n    //     .get<any>('/api/v1/cost-penalty/dashboard/management-cost')\n    //     .subscribe(\n    //       (response) => {\n    //         this.potentialCostCard1DataModel.data.cost =\n    //           response.groups[0].items[0].data;\n    //         this.potentialCostCard1DataModel.data.label1 =\n    //           response.groups[0].items[0].name;\n    //         this.potentialCostCard2DataModel.data.cost =\n    //           response.groups[0].items[1].data;\n    //         this.potentialCostCard2DataModel.data.label1 =\n    //           response.groups[0].items[1].name;\n    //         this.potentialCostCard3DataModel.data.cost =\n    //           response.groups[0].items[2].data;\n    //         this.potentialCostCard3DataModel.data.label1 =\n    //           response.groups[0].items[2].name;\n    //         this.potentialCostCard4DataModel.data.cost =\n    //           response.groups[0].items[3].data;\n    //         this.potentialCostCard4DataModel.data.label1 =\n    //           response.groups[0].items[3].name;\n    //       },\n    //       (error) => {\n    //         console.log(error);\n    //       }\n    //     );\n    // }\n\n\n    bindMatrixA3DataModel() {\n      this.matrixA3DataModel.tableRowHeadingLeft = '15%';\n      this.matrixA3DataModel.tableRowHeadingRight = '23%';\n      this.matrixA3DataModel.apiDataUrl = '/v1/cost-penalty/dashboard/jeopardy-metrics';\n      this.matrixA3DataModel.showProgressBar = true;\n      this.matrixA3DataModel.showArrowIcon = true;\n      this.matrixA3DataModel.tableTdHeight = '160px';\n      this.matrixA3DataModel.columnLength = 4;\n      this.matrixA3DataModel.rowLength = 3;\n      this.matrixA3DataModel.templateid = 'Template1';\n      this.matrixA3DataModel.headers = [{\n        headerText: 'Promoter',\n        headerValue: 'Promoter'\n      }, {\n        headerText: 'Contractor',\n        headerValue: 'Contractor'\n      }, {\n        headerText: 'Highway Authority',\n        headerValue: 'Highway Authority'\n      }];\n      this.matrixA3DataModel.rowHeaders = [{\n        rowText: 'Overdue',\n        displayRowHeaderText: 'Overdue',\n        rowIcon: 'fa fa-exclamation-triangle',\n        rowIconColor: '#FF5656'\n      }, {\n        rowText: 'Attention Required',\n        displayRowHeaderText: 'Attention Required',\n        rowIcon: 'fa fa-bug',\n        rowIconColor: '#FFC107'\n      }, {\n        rowText: 'Meeting Expectations',\n        displayRowHeaderText: 'Meeting Expectations',\n        rowIcon: 'fa fa-pencil-square-o',\n        rowIconColor: '#4CAF50'\n      }];\n      this.matrixA3DataModel.items = [[{\n        displayText: 25,\n        percentage: 25,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.FPNS_OUTSTANDING,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.FPNS_DUETHISWEEK,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.FPNS_TOTAL,\n        isRatioChartColumn: false\n      }], [{\n        displayText: 30,\n        percentage: 30,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.DEFECTS_OUTSTANDING,\n        isRatioChartColumn: false\n      }, {\n        displayText: 60,\n        percentage: 60,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.DEFECTS_DUETHISWEEK,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.DEFECTS_TOTAL,\n        isRatioChartColumn: false\n      }], [{\n        displayText: 55,\n        percentage: 55,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.REGISTRATIONS_OUTSTANDING,\n        isRatioChartColumn: false\n      }, {\n        displayText: 80,\n        percentage: 80,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.REGISTRATIONS_DUETHISWEEK,\n        isRatioChartColumn: false\n      }, {\n        displayText: 74,\n        percentage: 74,\n        filterValue: MANAGEMENT_DB_MATRIX_FILTER.REGISTRATIONS_TOTAL,\n        isRatioChartColumn: false\n      }]];\n    }\n\n    bindMatrixA3ConfigModel() {}\n\n    bindMatrixA3Events() {\n      let eventActions = [['onMatrixCountClick', [{\n        action: 'executePageMethod',\n        params: [{\n          methodname: 'page_onMatrixA3CountClick'\n        }]\n      }]]];\n      super.addEventListener(eventActions, this.matrixA3DataModel, this.matrixA3ConfigModel);\n    }\n\n    page_onMatrixA3CountClick(eventparams, wigDataContext, params) {\n      let filterData = new PersistantDynamicFilterModel();\n      let matrixLabel = eventparams.dataContext.row + ' - ' + eventparams.dataContext.col; // alert(eventparams.dataContext.row)\n\n      if (eventparams.dataContext.row == 'Fixed Penalty Notices' || eventparams.dataContext.row == 'Defects') {\n        this.dialogModel = new DialogModel();\n        this.dialogModel.visible = true;\n        this.dialogModel.header = 'Listing Popup';\n      } else {\n        filterData.managementMetricsFilter = eventparams.dataContext.filterValue;\n        this.setNavigationDataAndNavigate(filterData, matrixLabel, FILTER_TYPE.DYNAMIC_FILTER);\n      }\n    }\n\n    setNavigationDataAndNavigate(filterData, filterListTitle, filterType) {\n      let navigationData = new Map();\n      this.globalParameters.set(GLOBAL_PARAM_KEY.FILTERED_LIST_TITLE, filterListTitle);\n      navigationData.set(GLOBAL_PARAM_KEY.FILTERED_LIST_TITLE, this.globalParameters.get(GLOBAL_PARAM_KEY.FILTERED_LIST_TITLE));\n\n      this._sessionStorageService.setNavigationData(navigationData);\n\n      this.setFilterDataToAppGlobalPersistantData(filterData, filterType); // this._router.navigate(['./admin/pcp-workbench']);\n    }\n\n    setFilterDataToAppGlobalPersistantData(filterData, filterType) {\n      let filterGlobalPersistData = this._appRepoService.appRepo.appGlobalPersistantData.get(GLOBAL_PARAM_KEY.APP_FILTER);\n\n      if (filterType == FILTER_TYPE.DYNAMIC_FILTER) {\n        filterGlobalPersistData.persistantfilterType = FILTER_TYPE.DYNAMIC_FILTER;\n        filterGlobalPersistData.persistantDynamicFilterModel = filterData;\n      } else {\n        filterGlobalPersistData.persistantDynamicFilterModel = null;\n        filterGlobalPersistData.persistantfilterType = FILTER_TYPE.ADVANCE_FILTER;\n        filterGlobalPersistData.persistantAdvanceFilterModel = filterData;\n      }\n\n      this._appRepoService.appRepo.appGlobalPersistantData.set(GLOBAL_PARAM_KEY.APP_FILTER, filterGlobalPersistData);\n    }\n\n  }\n\n  PcpOperationalDashboardComponent.ɵfac = function PcpOperationalDashboardComponent_Factory(t) {\n    return new (t || PcpOperationalDashboardComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.EventActionService), i0.ɵɵdirectiveInject(i3.SessionStorageService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.NgxSpinnerService), i0.ɵɵdirectiveInject(i6.AppRepoService));\n  };\n\n  PcpOperationalDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PcpOperationalDashboardComponent,\n    selectors: [[\"app-pcp-operational-dashboard\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 31,\n    vars: 18,\n    consts: [[1, \"dashboard-container\", \"mb-4\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"start center\", \"FxFlex\", \"100\", 1, \"page-title\", \"m-4\"], [\"FxFlex\", \"98\", 1, \"grey-text\"], [1, \"blue-text\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"m-auto\"], [\"fxFlex\", \"98\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", \"fxLayoutGap\", \"10px\"], [1, \"quick-filter\"], [3, \"dataModel\", \"configModel\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"my-4\"], [1, \"stepper\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"dashboard-row\"], [\"fxFlex\", \"98\", \"fxLayoutGap\", \"16px\"], [\"fxFlex\", \"45\"], [\"fxFlex\", \"55\", \"fxLayout\", \"column\", \"fxLayoutGap\", \"16px\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"16px\"], [\"fxFlex\", \"50\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"100\"], [\"fxLayoutGap\", \" 10px\", 1, \"d-flex\", \"justify-content-start\", \"align-items-center\"], [\"fxFlex\", \"100\", 3, \"dataModel\", \"configModel\"]],\n    template: function PcpOperationalDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" / Operational Dashboard \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"mat-card\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelement(9, \"app-pcp-quick-filter\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"mat-card\", 5);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelement(13, \"app-pcp-stepper\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10);\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"mat-card\", 12);\n        i0.ɵɵelement(17, \"app-matrix-a3\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵelementStart(20, \"mat-card\", 15);\n        i0.ɵɵelement(21, \"app-pcp-charges-list\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-card\", 15);\n        i0.ɵɵelement(23, \"app-pcp-charges-list\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 16);\n        i0.ɵɵelementStart(25, \"mat-card\", 17);\n        i0.ɵɵelementStart(26, \"div\", 18);\n        i0.ɵɵelement(27, \"app-multi-tab\", 19);\n        i0.ɵɵelement(28, \"app-multi-tab\", 19);\n        i0.ɵɵelement(29, \"app-multi-tab\", 19);\n        i0.ɵɵelement(30, \"app-multi-tab\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"dataModel\", ctx.permitQuickFilterDataModel)(\"configModel\", ctx.permitQuickFilterConfigModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataModel\", ctx.pcpStepperDataModel)(\"configModel\", ctx.pcpStepperConfigModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataModel\", ctx.matrixA3DataModel)(\"configModel\", ctx.matrixA3ConfigModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataModel\", ctx.pcpChargesListDataModel)(\"configModel\", ctx.pcpChargesListConfigModel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataModel\", ctx.pcpChargesList2DataModel)(\"configModel\", ctx.pcpChargesList2ConfigModel);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataModel\", ctx.mutliTabDataModel)(\"configModel\", ctx.multiTabConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.mutliTab2DataModel)(\"configModel\", ctx.multiTab2ConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.mutliTab3DataModel)(\"configModel\", ctx.multiTab3ConfigModel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataModel\", ctx.mutliTab4DataModel)(\"configModel\", ctx.multiTab4ConfigModel);\n      }\n    },\n    directives: [i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i8.MatCard, i7.DefaultFlexDirective, i7.DefaultLayoutGapDirective, i9.PcpQuickFilterComponent, i10.PcpStepperComponent, i11.MatrixA3Component, i12.PcpChargesListComponent, i13.MultiTabComponent],\n    styles: [\".blue-text[_ngcontent-%COMP%]{color:var(--stroked-button-bg-color)}.grey-text[_ngcontent-%COMP%]{color:var(--dark-gray-text-color)}  .mat-card{border-radius:0!important}\"]\n  });\n  return PcpOperationalDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
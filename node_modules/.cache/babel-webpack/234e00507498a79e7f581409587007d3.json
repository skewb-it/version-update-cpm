{"ast":null,"code":"import { GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { Validators } from '@angular/forms';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"src/app/services/validation.service\";\nimport * as i4 from \"src/app/services/save-file.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/core\";\n\nfunction RecordInvoiceAmountFormComponent_mat_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const permitStatus_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", permitStatus_r1.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", permitStatus_r1.displayText, \"\");\n  }\n}\n\nexport let RecordInvoiceAmountFormComponent = /*#__PURE__*/(() => {\n  class RecordInvoiceAmountFormComponent extends WidgetComponentBase {\n    constructor(_serverApi, _appRepoHelperService, _validationService, _saveFileService, fb, dialog) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._validationService = _validationService;\n      this._saveFileService = _saveFileService;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.arrLiabilityOwner = [];\n    }\n\n    ngOnInit() {\n      super.wgOnInit();\n      this.createFormGroup();\n    }\n\n    createFormGroup() {\n      this.RecordInvoiceAmountForm = this.fb.group({\n        finalInvoiceAmount: [''],\n        liabilityOwner: [''],\n        notes: ['', [Validators.required, Validators.minLength(10)]]\n      });\n    }\n\n    setFieldData() {}\n\n    stopPropagation(event) {\n      event.stopPropagation();\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    getControlData() {\n      // let id = this.dataModel.globalParameters.get('applicationId');\n      // // INFO: ServerAPI\n      // let url = `/api/v1/applications/${id}`\n      // return this.wgAPIMethodGet(url, null);\n      return new Promise((resolve, reject) => {\n        let permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM);\n        permitform = permitform ? permitform : new Object();\n\n        if (permitform) {\n          resolve(permitform);\n        } else {\n          reject(permitform);\n        }\n      });\n    }\n\n    convertData(response) {\n      if (!response) return;\n      console.log('respoine of overview', response);\n      this.dataModel.data.invoiceReferenceNumber = response.invoiceReferenceNumber;\n      this.dataModel.data.estimatedCost = response.estimatedCost;\n      this.dataModel.data.invoicedCost = response.invoicedCost;\n      this.dataModel.data.chargeAmount = response.chargeAmount;\n      this.dataModel.data.paidCost = response.paidCost;\n      this.dataModel.data.chargeType = response.chargeType; // this.dataModel.data.liabilityOrganisation = response.liability_organisation;\n\n      this.dataModel.data.assignedBy = response.assignedBy; // For filling the customm data\n      // For filling the customm data\n\n      this.dataModel.data.worksReferenceNumber = response.works_reference_number;\n      this.dataModel.data.highwayAuthority = response.highway_authority_name;\n      this.dataModel.data.projectReferenceNumber = response.project_reference_number;\n      this.dataModel.data.worksDescription = response.works_description;\n      this.dataModel.data.preApprovalAuthoriser = response.pre_approval_authoriser; // not exist in api response\n      // let locationtype = response?.location_types.toString();\n      // this.dataModel.data.locationTypes = locationtype?.split(',');\n      // this.dataModel.data.postCode = response.postcode;\n      // if (response.area_name.length > 0)\n      //   this.dataModel.data.usrndetails =\n      //     response.usrn +\n      //     ' - ' +\n      //     response.street_name +\n      //     ', ' +\n      //     response.area_name +\n      //     ', ' +\n      //     response.town;\n      // if (response.area_name.length == 0)\n      //   this.dataModel.data.usrndetails =\n      //     response.usrn + ' - ' + response.street_name + ', ' + response.town;\n      // if (\n      //   response.street_name.length == 0 &&\n      //   response.area_name.length == 0 &&\n      //   response.town.length == 0\n      // )\n\n      this.dataModel.data.usrndetails = response.usrn; // this.dataModel.data.worksDescription = response.work_description;\n      // this.dataModel.data.worksCategory =\n      //   this._appRepoHelperService.getMDataDisplayTextByValue(\n      //     response.work_category\n      //   );\n\n      this.dataModel.data.highwayAuthority = response.highway_authority_name;\n      this.dataModel.data.roadType = this._appRepoHelperService.getMDataDisplayTextByValue(response.road_category.toString());\n      this.dataModel.data.promoterOrganisation = response.promoter_organisation; // this.dataModel.data.contact =\n      //   response.secondary_contact + ' - ' + response.secondary_contact_number;\n      // let workstreams: any[] =\n      //   this._appRepoHelperService.getUserAccessibleWorkStream();\n      // if (workstreams) {\n      //   let workstream: any = workstreams.find(\n      //     (c) => c.workstreamId == response.workstream_id\n      //   );\n      //   this.dataModel.data.workStream = workstream?.description;\n      // }\n      // let contractors: any[] =\n      //   this._appRepoHelperService.getUserAccessibleContractors();\n      // if (contractors) {\n      //   let contractor: any = contractors.find(\n      //     (c) => c.contractor_id == response.contractor_id\n      //   );\n      // this.dataModel.data.accountability = contractor?.contractor_name;\n      // }\n      // // not exist in api response\n      // // this.dataModel.data.accountability = response.accountability;\n      // this.dataModel.data.trafficSensitive = DataHelper.booleanToUserText(\n      //   response.traffic_sensitive_flag\n      // );\n      // this.dataModel.data.footwayClosure =\n      //   this._appRepoHelperService.getMDataDisplayTextByValue(\n      //     response.close_footway\n      //   );\n      // this.dataModel.data.excavationRequired = DataHelper.booleanToUserText(\n      //   response.excavation_flag\n      // );\n      // this.dataModel.data.isLaneRentalApplicable = DataHelper.booleanToUserText(\n      //   response.lane_rental_flag\n      // );\n      // this.dataModel.data.trafficManagementRequired =\n      //   this._appRepoHelperService.getMDataDisplayTextByValue(\n      //     response.traffic_management_type\n      //   );\n      // this.dataModel.data.trafficManagementPlan = response.geometry;\n      // this.dataModel.data.permitStatus = response.status_value;\n      // this.dataModel.data.workStatus = response.work_status_value;\n      // if (response.status == '') this.isDraftPermitView = true;\n      // this.dataModel.data.actualStartDateTime = response.actual_start_date;\n      // this.dataModel.data.actualEndDateTime = response.actual_end_date;\n      // this.dataModel.data.proposedStartDateTime = response.proposed_start_date;\n      // this.dataModel.data.proposedEndDateTime = response.proposed_end_date;\n      // this.dataModel.data.proposedDuration = response.working_days;\n      // this.dataModel.data.cost = response.total_cost;\n      // this.dataModel.data.costRisk = response.cost_risk;\n      // this.dataModel.data.customerRisk = response.customer_risk;\n      // this.dataModel.data.trafficManagementRisk =\n      //   response.traffic_management_risk;\n      // this.dataModel.data.actions = response.actions;\n      // this.dataModel.data.changeDecision = response.change_decision;\n      // //     this.dataModel.data.changeDecision = [\n      // //       {alteration_id: 352, alteration_number: 'A300057204754-02-CR-02', alteration_status: 'Refused', assessment_comments: 'Inspector has attended site and confirmed that yoeekend or temporary re instate and re plan works.'},\n      // //       {alteration_id: 352, alteration_number: 'A300057204754-02-CR-02', alteration_status: 'Refused', assessment_comments: 'Inspector has attended site and confirmed that yoeekend or temporary re instate and re plan works.'},\n      // //       {alteration_id: 352, alteration_number: 'A300057204754-02-CR-02', alteration_status: 'Refused', assessment_comments: 'Inspector has attended site and confirmed that yoeekend or temporary re instate and re plan works.'},\n      // //       {alteration_id: 352, alteration_number: 'A300057204754-02-CR-02', alteration_status: 'Refused', assessment_comments: 'Inspector has attended site and confirmed that yoeekend or temporary re instate and re plan works.'},\n      // // ]\n      // // console.log(\"this.dataModel.data.changeDecision\",this.dataModel.data.changeDecision)\n      // this.dataModel.data.collaborativeWorkingFlag = DataHelper.booleanToUserText(\n      //   response.collaborative_working_flag\n      // );\n\n      this.dataModel.data.collaborationDetails = response.collaboration_details; // this.dataModel.data.collaborativeWorks = response.collaborative_works;\n      // this.dataModel.data.collaborationType =\n      //   this._appRepoHelperService.getMDataDisplayTextByValue(\n      //     response.collaboration_type\n      //   );\n      // this.dataModel.data.ttro_requiredFlag = DataHelper.booleanToUserText(\n      //   response.ttro_required_flag\n      // );\n      // this.dataModel.data.environmental_flag = DataHelper.booleanToUserText(\n      //   response.environmental_flag\n      // );\n      // this.dataModel.data.is_covid19_response = DataHelper.booleanToUserText(\n      //   response.is_covid19_response\n      // );\n      // this.dataModel.data.earlyStartPreApprovalFlag =\n      //   DataHelper.booleanToUserText(response.early_start_pre_approval_flag);\n      // this.dataModel.data.earlyStartReason = response.early_start_reason;\n      // this.dataModel.data.preApprovalAuthoriser =\n      //   response.pre_approval_authoriser;\n      // this.dataModel.data.activityType =\n      //   this._appRepoHelperService.getMDataDisplayTextByValue(\n      //     response.activity_type\n      //   );\n      // this.dataModel.data.preApprovalDetails = response.pre_approval_details;\n      // this.dataModel.data.additionalInfo = response.additional_info;\n      // this.dataModel.data.additionalcontact = response.additional_contact;\n      // this.dataModel.data.emergencyContact = response.additional_contact_number;\n      // this.dataModel.data.emergencyNumber = response.additional_contact_email;\n      // this.dataModel.data.additionalcontactemail =\n      //   response.emergency_contact_name;\n      // this.dataModel.data.additionalcontactemail =\n      //   response.emergency_contact_number;\n      // this.dataModel.data.expectedEndDateTime = response.expected_end_date;\n      // this.dataModel.data.is_pmr_responded = response.is_pmr_responded;\n      // this.dataModel.data.is_excavation_carried_out =\n      //   DataHelper.booleanToUserText(response.excavation_carried_out);\n      // if (this.dataModel.data.is_pmr_responded != null) {\n      //   this.showIcon = true;\n      // }\n      // this.dataModel.data.dcStatus = response.dc_details.dc_status;\n      // this.dataModel.data.dcReason = response.dc_details.dc_reason;\n      // this.dataModel.data.dcResponseDate = response.dc_details.dc_response_date;\n      // // switch (response.assessment_decision.status) {\n      // //   case ASSESSMENT_STATUS.ASSESSMENT_GRANTED_STATUS:\n      // //     this.assessmentDecision.status = response.assessment_decision.display_status;\n      // //     break;\n      // //   case ASSESSMENT_STATUS.ASSESSMENT_MODIFICATION_STATUS:\n      // //     this.assessmentDecision.status = response.assessment_decision.display_status;\n      // //     this.assessmentDecision.description = response.assessment_decision.modificationRequestDetails;\n      // //     break;\n      // //   case ASSESSMENT_STATUS.ASSESSMENT_REFUSED_STATUS:\n      // //     this.assessmentDecision.status = response.assessment_decision.display_status;\n      // //     this.assessmentDecision.description = response.assessment_decision.refusalDetails;\n      // //     this.assessmentDecision.reason = response.assessment_decision.reasonForRefusal;\n      // //     this.assessmentDecision.modificationRequestDetails = response.assessment_decision.modificationRequestDetails;\n      // //     break;\n      // //   default:\n      // //     break;\n      // // }\n    }\n\n    getValue() {\n      // let data: any;\n      // data = this.dataModel.data;\n      if (this.RecordInvoiceAmountForm.valid) {\n        return this.RecordInvoiceAmountForm.value;\n      }\n    }\n\n    resetForm() {\n      this.RecordInvoiceAmountForm.reset();\n    }\n\n    openFileUpload() {\n      let data = new Object();\n      this.emitEvent('openFileUploadDialog', data);\n    }\n\n  }\n\n  RecordInvoiceAmountFormComponent.ɵfac = function RecordInvoiceAmountFormComponent_Factory(t) {\n    return new (t || RecordInvoiceAmountFormComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.ValidationService), i0.ɵɵdirectiveInject(i4.SaveFileService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.MatDialog));\n  };\n\n  RecordInvoiceAmountFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecordInvoiceAmountFormComponent,\n    selectors: [[\"app-record-invoice-amount-form\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 52,\n    vars: 6,\n    consts: [[1, \"d-flex\", \"flex-column\"], [\"fxFlex\", \"100\", \"fxLayout\", \"row\", \"fxLayout.lt-sm\", \"row wrap\", \"fxLayoutGap\", \"10px\", \"fxLayoutAlign\", \"flex-start strech\", 1, \"detail-container\"], [\"fxFlex\", \"25\", \"fxFlex.lt-sm\", \"0 1 calc(50% - 32px)\", 1, \"info-element\"], [\"for\", \"\"], [1, \"mt-2\"], [1, \"black-tab\"], [1, \"blue-tab\"], [1, \"green-tab\"], [1, \"form-group\"], [\"id\", \"filter-form\", 1, \"d-flex\", \"flex-column\", \"p-3\", 3, \"formGroup\"], [\"fxFlex\", \"100\", \"fxLayoutGap\", \"10px\", 1, \"fixed-underline\"], [\"appearance\", \"fill\", \"fxFlex\", \"50\"], [\"matInput\", \"\", \"placeholder\", \"Final Invoice Amount\", \"autocomplete\", \"off\", \"formControlName\", \"finalInvoiceAmount\"], [\"multiple\", \"\", \"formControlName\", \"liabilityOwner\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"fill\", \"fxFlex\", \"100\"], [\"matInput\", \"\", \"placeholder\", \"Upload Evidence(Optional)\", \"autocomplete\", \"off\", \"formControlName\", \"fileUp\", \"readonly\", \"\", \"value\", \"Upload Evidence(Optional)\", 3, \"click\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Notes\", \"autocomplete\", \"off\", \"formControlName\", \"notes\"], [3, \"value\"]],\n    template: function RecordInvoiceAmountFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Invoice Reference Number \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Cost Estimated \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 4);\n        i0.ɵɵelementStart(11, \"span\", 5);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 2);\n        i0.ɵɵelementStart(14, \"label\", 3);\n        i0.ɵɵtext(15, \"Cost Invoiced \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\", 4);\n        i0.ɵɵelementStart(17, \"span\", 6);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelementStart(20, \"label\", 3);\n        i0.ɵɵtext(21, \"Cost Paid \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\", 4);\n        i0.ɵɵelementStart(23, \"span\", 7);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"hr\");\n        i0.ɵɵelementStart(26, \"div\", 8);\n        i0.ɵɵelementStart(27, \"form\", 9);\n        i0.ɵɵelementStart(28, \"div\", 10);\n        i0.ɵɵelementStart(29, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Final Invoice Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 12);\n        i0.ɵɵelementStart(33, \"mat-error\");\n        i0.ɵɵtext(34, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(36, \"mat-label\");\n        i0.ɵɵtext(37, \"Select Liability Owner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"mat-select\", 13);\n        i0.ɵɵtemplate(39, RecordInvoiceAmountFormComponent_mat_option_39_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 10);\n        i0.ɵɵelementStart(41, \"mat-form-field\", 15);\n        i0.ɵɵelementStart(42, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function RecordInvoiceAmountFormComponent_Template_input_click_42_listener() {\n          return ctx.openFileUpload();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"mat-icon\", 17);\n        i0.ɵɵtext(44, \"attach_file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 10);\n        i0.ɵɵelementStart(46, \"mat-form-field\", 15);\n        i0.ɵɵelementStart(47, \"mat-label\");\n        i0.ɵɵtext(48, \"Notes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 18);\n        i0.ɵɵelementStart(50, \"mat-error\");\n        i0.ɵɵtext(51, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.dataModel.data.invoiceReferenceNumber);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"\\u00A3\", ctx.dataModel.data.estimatedCost, \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"\\u00A3\", ctx.dataModel.data.invoicedCost, \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"\\u00A3\", ctx.dataModel.data.paidCost, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.RecordInvoiceAmountForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrLiabilityOwner);\n      }\n    },\n    directives: [i7.DefaultFlexDirective, i7.DefaultLayoutDirective, i7.DefaultLayoutGapDirective, i7.DefaultLayoutAlignDirective, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i8.MatFormField, i8.MatLabel, i9.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i8.MatError, i10.MatSelect, i11.NgForOf, i12.MatIcon, i8.MatSuffix, i13.MatOption],\n    styles: [\".black-tab[_ngcontent-%COMP%], .blue-tab[_ngcontent-%COMP%], .green-tab[_ngcontent-%COMP%]{background-color:#000;text-align:center;padding:2px 10px;color:#fff;border-radius:30px}.blue-tab[_ngcontent-%COMP%]{background-color:#3d6eb5}.green-tab[_ngcontent-%COMP%]{background-color:#4caf50}\"]\n  });\n  return RecordInvoiceAmountFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
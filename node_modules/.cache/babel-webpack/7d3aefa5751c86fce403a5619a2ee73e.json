{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"src/app/services/validation.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/services/notification.service\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/core\";\n\nfunction AddTrafficMangCostComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r1.viewValue);\n  }\n}\n\nexport let AddTrafficMangCostComponent = /*#__PURE__*/(() => {\n  class AddTrafficMangCostComponent extends WidgetComponentBase {\n    constructor(_serverApi, _appRepoHelperService, _validationService, fb, _notificationService) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._validationService = _validationService;\n      this.fb = fb;\n      this._notificationService = _notificationService;\n      this.arrTMType = [{\n        value: \"Contra Flow\",\n        viewValue: \"Contra Flow\"\n      }, {\n        value: \"Convoy Workings\",\n        viewValue: \"Convoy Workings\"\n      }, {\n        value: \"Give And Take\",\n        viewValue: \"Give And Take\"\n      }, {\n        value: \"Lane Closure\",\n        viewValue: \"Lane Closure\"\n      }, {\n        value: \"Multi Way Signals\",\n        viewValue: \"Multi Way Signals\"\n      }, {\n        value: \"No Carriageway Incursion\",\n        viewValue: \"No Carriageway Incursion\"\n      }, {\n        value: \"Priority Working\",\n        viewValue: \"Priority Working\"\n      }, {\n        value: \"Road Closure\",\n        viewValue: \"Road Closure\"\n      }, {\n        value: \"Some Carriageway Incursion\",\n        viewValue: \"Some Carriageway Incursion\"\n      }, {\n        value: \"Stop Go Boards\",\n        viewValue: \"Stop Go Boards\"\n      }, {\n        value: \"Two Way Signals\",\n        viewValue: \"Two Way Signals\"\n      }];\n    }\n\n    ngOnInit() {\n      this.createFormGroup();\n    }\n\n    createFormGroup() {\n      this.wgFormGroup = this.fb.group({\n        'tmType': ['', [Validators.required]],\n        'description': ['', [Validators.required]],\n        'quantity': [1, [Validators.required, Validators.min(1)]],\n        'amount': ['', [Validators.required]]\n      });\n      this.wgFormGroup.reset();\n      this.wgFormGroup.markAsUntouched();\n      this.wgOnInit();\n    }\n\n    setFieldData() {}\n\n    getControlData() {}\n\n    convertData(response) {}\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    getValue() {\n      let data = new Object();\n\n      if (this.wgFormGroup.controls.tmType.value) {\n        data.tmType = this.wgFormGroup.controls.tmType.value;\n      }\n\n      if (this.wgFormGroup.controls.description.value) {\n        data.description = this.wgFormGroup.controls.description.value;\n      }\n\n      if (this.wgFormGroup.controls.quantity.value) {\n        data.quantity = this.wgFormGroup.controls.quantity.value;\n      }\n\n      if (this.wgFormGroup.controls.amount.value) {\n        data.amount = this.wgFormGroup.controls.amount.value;\n      }\n\n      return data;\n    }\n\n    addTrafficManagementCost() {\n      this.wgFormGroup.markAllAsTouched();\n\n      if (this.wgFormGroup.dirty && this.wgFormGroup.valid) {\n        let data = this.getValue();\n        this.wgReset();\n        this.createFormGroup();\n        this.emitEvent(\"onSaveTrafficCostClick\", data);\n      } else {\n        try {\n          this._notificationService.error(this.wgFormGroup.errors.dateCompare.errorMessage);\n        } catch (exception) {}\n      }\n    }\n\n    formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n\n  }\n\n  AddTrafficMangCostComponent.ɵfac = function AddTrafficMangCostComponent_Factory(t) {\n    return new (t || AddTrafficMangCostComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.ValidationService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.NotificationService));\n  };\n\n  AddTrafficMangCostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTrafficMangCostComponent,\n    selectors: [[\"app-add-traffic-mang-cost\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 30,\n    vars: 2,\n    consts: [[1, \"form-container\", 3, \"formGroup\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\", \"fxLayoutAlign\", \"space-between end\"], [\"appearance\", \"outline\", \"fxFlex\", \"50\"], [\"formControlName\", \"tmType\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Enter Quantity\", \"autocomplete\", \"off\", \"formControlName\", \"quantity\", \"type\", \"number\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\", \"fxLayoutAlign\", \"space-between start\"], [\"matInput\", \"\", \"placeholder\", \"Enter some Description\", \"formControlName\", \"description\"], [\"fxFlex\", \"50\", \"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Enter Amount\", \"autocomplete\", \"off\", \"formControlName\", \"amount\", \"type\", \"number\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\", \"fxLayoutAlign\", \"end end\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"primary-button\", 3, \"click\"], [3, \"value\"]],\n    template: function AddTrafficMangCostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"TM Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-select\", 3);\n        i0.ɵɵtemplate(6, AddTrafficMangCostComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-error\");\n        i0.ɵɵtext(8, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelementStart(14, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"textarea\", 7);\n        i0.ɵɵelementStart(18, \"mat-error\");\n        i0.ɵɵtext(19, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 9);\n        i0.ɵɵelementStart(24, \"mat-error\");\n        i0.ɵɵtext(25, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"hr\");\n        i0.ɵɵelementStart(27, \"div\", 10);\n        i0.ɵɵelementStart(28, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddTrafficMangCostComponent_Template_button_click_28_listener() {\n          return ctx.addTrafficManagementCost();\n        });\n        i0.ɵɵtext(29, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.wgFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrTMType);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i6.DefaultLayoutDirective, i6.DefaultLayoutGapDirective, i6.DefaultLayoutAlignDirective, i7.MatFormField, i6.DefaultFlexDirective, i7.MatLabel, i8.MatSelect, i4.NgControlStatus, i4.FormControlName, i9.NgForOf, i7.MatError, i10.MatInput, i4.DefaultValueAccessor, i4.NumberValueAccessor, i11.MatButton, i12.MatOption],\n    styles: [\"\"]\n  });\n  return AddTrafficMangCostComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Chart } from 'chart.js';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/validation.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/extended\";\nconst _c0 = [\"lineChart\"];\n\nconst _c1 = function () {\n  return {\n    \"width\": \"100%\",\n    \"height\": \"300px\"\n  };\n};\n\nexport let LineChartComponent = /*#__PURE__*/(() => {\n  class LineChartComponent extends WidgetComponentBase {\n    constructor(_serverApiBase, _validationService) {\n      super(_serverApiBase, _validationService);\n      this._serverApiBase = _serverApiBase;\n      this._validationService = _validationService;\n    }\n\n    ngOnInit() {\n      this.wgOnInit();\n    }\n\n    ngAfterViewInit() {\n      let myStackedColumnChart = new Chart(this.chartRef.nativeElement, {\n        type: 'line',\n        data: this.dataModel.data.data,\n        options: this.dataModel.data.options\n      });\n    }\n\n    setFieldData() {}\n\n    getControlData() {}\n\n    convertData(response) {}\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n  }\n\n  LineChartComponent.ɵfac = function LineChartComponent_Factory(t) {\n    return new (t || LineChartComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.ValidationService));\n  };\n\n  LineChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LineChartComponent,\n    selectors: [[\"app-line-chart\"]],\n    viewQuery: function LineChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartRef = _t.first);\n      }\n    },\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"ngStyle\"], [2, \"width\", \"100%\", \"height\", \"100%\"], [\"lineChart\", \"\"]],\n    template: function LineChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"canvas\", 1, 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(1, _c1));\n      }\n    },\n    directives: [i3.NgStyle, i4.DefaultStyleDirective],\n    styles: [\"\"]\n  });\n  return LineChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
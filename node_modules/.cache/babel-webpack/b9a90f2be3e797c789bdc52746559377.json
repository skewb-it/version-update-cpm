{"ast":null,"code":"import { GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { Validators } from '@angular/forms';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"src/app/services/validation.service\";\nimport * as i4 from \"src/app/services/save-file.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"src/app/directive/invalid-control-scroll/invalid-control-scroll.directive\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/checkbox\";\nexport let EmailInvoiceFormComponent = /*#__PURE__*/(() => {\n  class EmailInvoiceFormComponent extends WidgetComponentBase {\n    constructor(_serverApi, _appRepoHelperService, _validationService, _saveFileService, fb, dialog) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._validationService = _validationService;\n      this._saveFileService = _saveFileService;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.arrJobOwner = [];\n    }\n\n    ngOnInit() {\n      super.wgOnInit();\n      this.createFormGroup();\n    }\n\n    createFormGroup() {\n      this.EmailInvoiceForm = this.fb.group({\n        emailTo: ['', [Validators.required, Validators.email]]\n      });\n    }\n\n    setFieldData() {}\n\n    stopPropagation(event) {\n      event.stopPropagation();\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    getControlData() {\n      // let id = this.dataModel.globalParameters.get('applicationId');\n      // // INFO: ServerAPI\n      // let url = `/api/v1/applications/${id}`\n      // return this.wgAPIMethodGet(url, null);\n      return new Promise((resolve, reject) => {\n        let permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM);\n        permitform = permitform ? permitform : new Object();\n\n        if (permitform) {\n          resolve(permitform);\n        } else {\n          reject(permitform);\n        }\n      });\n    }\n\n    convertData(response) {}\n\n    getValue() {\n      // let data: any;\n      // data = this.dataModel.data;\n      if (this.EmailInvoiceForm.valid) {\n        return this.EmailInvoiceForm.value;\n      }\n    }\n\n    resetForm() {\n      this.EmailInvoiceForm.reset();\n    }\n\n  }\n\n  EmailInvoiceFormComponent.ɵfac = function EmailInvoiceFormComponent_Factory(t) {\n    return new (t || EmailInvoiceFormComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.ValidationService), i0.ɵɵdirectiveInject(i4.SaveFileService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.MatDialog));\n  };\n\n  EmailInvoiceFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmailInvoiceFormComponent,\n    selectors: [[\"app-email-invoice-form\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"form-group\"], [\"form\", \"\", \"id\", \"filter-form\", \"appInvalidControlScroll\", \"\", 1, \"d-flex\", \"flex-column\", \"p-3\", 3, \"formGroup\"], [\"fxFlex\", \"100\", \"fxLayoutGap\", \"10px\", 1, \"fixed-underline\"], [\"appearance\", \"fill\", \"fxFlex\", \"100\"], [\"matInput\", \"\", \"placeholder\", \"To\", \"autocomplete\", \"off\", \"formControlName\", \"emailTo\"], [1, \"checkbox-container\"], [1, \"my-2\"], [1, \"example-margin\"]],\n    template: function EmailInvoiceFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n        i0.ɵɵelement(4, \"input\", 4);\n        i0.ɵɵelementStart(5, \"mat-error\");\n        i0.ɵɵtext(6, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"SELECT CHARGES TO BE INCLUDE IN A PDF/EXCEL FILE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\");\n        i0.ɵɵelementStart(12, \"mat-checkbox\", 7);\n        i0.ɵɵtext(13, \"ChargeADF43\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵelementStart(15, \"mat-checkbox\", 7);\n        i0.ɵɵtext(16, \"ChargeADF4343\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\");\n        i0.ɵɵelementStart(18, \"mat-checkbox\", 7);\n        i0.ɵɵtext(19, \"ChargeADF342\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.EmailInvoiceForm);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i7.InvalidControlScrollDirective, i5.FormGroupDirective, i8.DefaultFlexDirective, i8.DefaultLayoutGapDirective, i9.MatFormField, i10.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i9.MatError, i11.MatCheckbox],\n    styles: [\"\"]\n  });\n  return EmailInvoiceFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
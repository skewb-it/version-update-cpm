{"ast":null,"code":"import { GLOBAL_PARAM_KEY } from 'src/app/app-constants';\nimport { Validators } from '@angular/forms';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"src/app/services/validation.service\";\nimport * as i4 from \"src/app/services/save-file.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"src/app/directive/invalid-control-scroll/invalid-control-scroll.directive\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"@angular/material/core\";\n\nfunction SplitInvoiceFormComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const permitStatus_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", permitStatus_r3.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", permitStatus_r3.displayText, \"\");\n  }\n}\n\nfunction SplitInvoiceFormComponent_mat_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const permitStatus_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", permitStatus_r4.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", permitStatus_r4.displayText, \"\");\n  }\n}\n\nexport let SplitInvoiceFormComponent = /*#__PURE__*/(() => {\n  class SplitInvoiceFormComponent extends WidgetComponentBase {\n    constructor(_serverApi, _appRepoHelperService, _validationService, _saveFileService, fb, dialog) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._validationService = _validationService;\n      this._saveFileService = _saveFileService;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.arrLiabilityOrg = [];\n      this.arrChargeType = [];\n    }\n\n    ngOnInit() {\n      super.wgOnInit();\n      this.createFormGroup();\n    }\n\n    createFormGroup() {\n      this.SplitInvoiceForm = this.fb.group({\n        chargeNumber: [''],\n        chargeType: [''],\n        draftChargeAmount: [''],\n        chargeApprovalDate: [''],\n        negotiatedCharge: [''],\n        liabiltyOrg: [''],\n        fileUp: [''],\n        notes: ['', [Validators.required, Validators.minLength(10)]]\n      });\n    }\n\n    setFieldData() {}\n\n    stopPropagation(event) {\n      event.stopPropagation();\n    }\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    getControlData() {\n      // let id = this.dataModel.globalParameters.get('applicationId');\n      // // INFO: ServerAPI\n      // let url = `/api/v1/applications/${id}`\n      // return this.wgAPIMethodGet(url, null);\n      return new Promise((resolve, reject) => {\n        let permitform = this.dataModel.globalParameters.get(GLOBAL_PARAM_KEY.VIEW_PERMIT_FORM);\n        permitform = permitform ? permitform : new Object();\n\n        if (permitform) {\n          resolve(permitform);\n        } else {\n          reject(permitform);\n        }\n      });\n    }\n\n    convertData(response) {}\n\n    getValue() {\n      // let data: any;\n      // data = this.dataModel.data;\n      if (this.SplitInvoiceForm.valid) {\n        return this.SplitInvoiceForm.value;\n      }\n    }\n\n    resetForm() {\n      this.SplitInvoiceForm.reset();\n    }\n\n    openFileUpload() {\n      let data = new Object();\n      this.emitEvent('openFileUploadDialog', data);\n    }\n\n  }\n\n  SplitInvoiceFormComponent.ɵfac = function SplitInvoiceFormComponent_Factory(t) {\n    return new (t || SplitInvoiceFormComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.ValidationService), i0.ɵɵdirectiveInject(i4.SaveFileService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.MatDialog));\n  };\n\n  SplitInvoiceFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SplitInvoiceFormComponent,\n    selectors: [[\"app-split-invoice-form\"]],\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 47,\n    vars: 5,\n    consts: [[1, \"form-group\"], [\"form\", \"\", \"id\", \"filter-form\", \"appInvalidControlScroll\", \"\", 1, \"d-flex\", \"flex-column\", \"p-3\", 3, \"formGroup\"], [\"fxFlex\", \"100\", \"fxLayoutGap\", \"10px\", 1, \"fixed-underline\"], [\"appearance\", \"fill\", \"fxFlex\", \"50\"], [\"matInput\", \"\", \"placeholder\", \"Charge Number\", \"autocomplete\", \"off\", \"formControlName\", \"chargeNumber\"], [\"multiple\", \"\", \"formControlName\", \"chargeType\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Draft Charge Amount\", \"autocomplete\", \"off\", \"formControlName\", \"draftChargeAmount\"], [\"matInput\", \"\", \"formControlName\", \"chargeApprovalDate\", 3, \"matDatepicker\", \"click\", \"focus\"], [\"matSuffix\", \"\", 3, \"for\"], [\"chargeApprovalDate\", \"\"], [\"appearance\", \"fill\", \"fxFlex\", \"100\"], [\"matInput\", \"\", \"placeholder\", \"Negotiated Charge\", \"autocomplete\", \"off\", \"formControlName\", \"negotiatedCharge\"], [\"multiple\", \"\", \"formControlName\", \"liabiltyOrg\"], [\"matInput\", \"\", \"placeholder\", \"Notes\", \"autocomplete\", \"off\", \"formControlName\", \"notes\"], [\"matInput\", \"\", \"placeholder\", \"Upload Evidence(Optional)\", \"autocomplete\", \"off\", \"formControlName\", \"fileUp\", \"readonly\", \"\", \"value\", \"Upload Evidence(Optional)\", 3, \"click\"], [\"matSuffix\", \"\"], [3, \"value\"]],\n    template: function SplitInvoiceFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Charge Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Charge Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-select\", 5);\n        i0.ɵɵtemplate(11, SplitInvoiceFormComponent_mat_option_11_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelementStart(13, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Draft Charge Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Charge Approval Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function SplitInvoiceFormComponent_Template_input_click_20_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r1 = i0.ɵɵreference(23);\n\n          return _r1.open();\n        })(\"focus\", function SplitInvoiceFormComponent_Template_input_focus_20_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r1 = i0.ɵɵreference(23);\n\n          return _r1.open();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"mat-datepicker-toggle\", 9);\n        i0.ɵɵelement(22, \"mat-datepicker\", null, 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelementStart(25, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Negotiated Charge\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 2);\n        i0.ɵɵelementStart(30, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Liability Organisation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-select\", 13);\n        i0.ɵɵtemplate(34, SplitInvoiceFormComponent_mat_option_34_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 2);\n        i0.ɵɵelementStart(36, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Notes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 14);\n        i0.ɵɵelementStart(40, \"mat-error\");\n        i0.ɵɵtext(41, \"Field must be valid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 2);\n        i0.ɵɵelementStart(43, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(44, \"input\", 15);\n        i0.ɵɵlistener(\"click\", function SplitInvoiceFormComponent_Template_input_click_44_listener() {\n          return ctx.openFileUpload();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"mat-icon\", 16);\n        i0.ɵɵtext(46, \"attach_file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(23);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.SplitInvoiceForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrChargeType);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrLiabilityOrg);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i7.InvalidControlScrollDirective, i5.FormGroupDirective, i8.DefaultFlexDirective, i8.DefaultLayoutGapDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i11.MatSelect, i12.NgForOf, i13.MatDatepickerInput, i13.MatDatepickerToggle, i9.MatSuffix, i13.MatDatepicker, i9.MatError, i14.MatIcon, i15.MatOption],\n    styles: [\"\"]\n  });\n  return SplitInvoiceFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ChargeActivityRequestModel } from './charge-activity-tab.model';\nimport { DataHelper } from 'src/app/utility/data.helper';\nimport { FormControl } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatTableHelper } from 'src/app/utility/mat-table.helper';\nimport { WidgetComponentBase } from 'src/app/utility/widget/widget-utility/widget-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/server-api-interface-service.service\";\nimport * as i2 from \"src/app/services/app-repo-helper.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"src/app/services/notification.service\";\nimport * as i6 from \"src/app/services/validation.service\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/table\";\nimport * as i10 from \"src/app/pipe/transform-date/transform-date.pipe\";\n\nfunction ChargeActivityLogTabComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 18);\n    i0.ɵɵtext(1, \"Activity\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChargeActivityLogTabComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.Comment, \" \");\n  }\n}\n\nfunction ChargeActivityLogTabComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 18);\n    i0.ɵɵtext(1, \"Initiated By\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChargeActivityLogTabComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r9.CommentBy, \" \");\n  }\n}\n\nfunction ChargeActivityLogTabComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 18);\n    i0.ɵɵtext(1, \"Date\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChargeActivityLogTabComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"transformDate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, element_r10.Date), \" \");\n  }\n}\n\nfunction ChargeActivityLogTabComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 21);\n  }\n}\n\nfunction ChargeActivityLogTabComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\n\nexport let ChargeActivityLogTabComponent = /*#__PURE__*/(() => {\n  class ChargeActivityLogTabComponent extends WidgetComponentBase {\n    constructor(_serverApi, _appRepoHelperService, _router, dialog, _notificationService, _validationService) {\n      super(_serverApi, _validationService);\n      this._serverApi = _serverApi;\n      this._appRepoHelperService = _appRepoHelperService;\n      this._router = _router;\n      this.dialog = dialog;\n      this._notificationService = _notificationService;\n      this._validationService = _validationService;\n      this.dataSource = new MatTableDataSource();\n      this.searchInput = new FormControl('');\n      this.MAT_HELPER = MatTableHelper;\n      this.DATA_HELPER = DataHelper;\n      this.columnsToDisplay = ['Activity', 'InitiatedBy', 'Date'];\n      this._ChargeActivityRequestModel = new ChargeActivityRequestModel();\n    }\n\n    getControlData() {\n      let id = this.dataModel.globalParameters.get('applicationId');\n      return this.wgAPIMethodGet(`/api/v1/applications/${id}/comments`, this._ChargeActivityRequestModel);\n    }\n\n    convertData(response //\n    ) {\n      try {\n        let items = [];\n        items[0].Comment = 'Draft Invoice Created';\n        items[0].CommentBy = 'System';\n        items[0].Date = '27/06/22';\n        items[1].Comment = 'Reconciled';\n        items[1].CommentBy = 'System';\n        items[1].Date = '27/06/22';\n        items[2].Comment = 'Partially Reconciled';\n        items[2].CommentBy = 'System';\n        items[2].Date = '27/06/22';\n        this.dataSource = new MatTableDataSource(items);\n        this.length = items.length; ///TO Do get lenght from API\n        // if (response) {\n        //   let items: ChargeActivityRow[] = [];\n        //   response.forEach((element) => {\n        //     let item: any = {};\n        //     // item.Comment = element.comment_text;\n        //     // item.CommentType = element.comment_type;\n        //     // item.CommentBy = element.created_by;\n        //     // item.Date = element.create_date;\n        //     // item.CommentId = element.comment_id;\n        //     // item.CommentRead = element.comment_read;\n        //     // item.CommentReadBy = element.comment_read_by;\n        //     // item.CommentReadDate = element.comment_read_date;\n        //     // item.CommentReference = element.comment_reference;\n        //     // item.CommentSubmit = element.comment_submit;\n        //     // item.CommentTopic = element.comment_topic;\n        //     // item.UserDisplayName = element.user_display_name;\n        //     // item.CommentOrigin = element.comment_origin;\n        //     // items.push(item);\n        //   });\n        //   items[0].Comment = 'Draft Invoice Created';\n        //   items[0].CommentBy = 'System';\n        //   items[0].Date = '27/06/22';\n        //   items[1].Comment = 'Reconciled';\n        //   items[1].CommentBy = 'System';\n        //   items[1].Date = '27/06/22';\n        //   items[2].Comment = 'Partially Reconciled';\n        //   items[2].CommentBy = 'System';\n        //   items[2].Date = '27/06/22';\n        //   this.dataSource = new MatTableDataSource(items);\n        //   this.length = items.length; ///TO Do get lenght from API\n        // }\n      } catch (e) {}\n    }\n\n    setFieldData() {}\n\n    setMode(responseDataModel) {}\n\n    setValue(responseDataModel) {}\n\n    applyFilter(filterValue) {}\n\n    ngOnInit() {\n      let items = [{\n        Comment: 'Draft Invoice Created',\n        CommentType: '',\n        CommentBy: '',\n        CommentId: '',\n        Date: '27/06/22',\n        CommentRead: null,\n        CommentReadBy: '',\n        CommentReadDate: '',\n        CommentReference: '',\n        CommentSubmit: null,\n        CommentTopic: '',\n        UserDisplayName: '',\n        CommentOrigin: ''\n      }, {\n        Comment: 'Reconciled',\n        CommentType: '',\n        CommentBy: 'System',\n        CommentId: '',\n        Date: '27/06/22',\n        CommentRead: null,\n        CommentReadBy: '',\n        CommentReadDate: '',\n        CommentReference: '',\n        CommentSubmit: null,\n        CommentTopic: '',\n        UserDisplayName: '',\n        CommentOrigin: ''\n      }, {\n        Comment: 'Partially Reconciled',\n        CommentType: '',\n        CommentBy: 'System',\n        CommentId: '',\n        Date: '27/06/22',\n        CommentRead: null,\n        CommentReadBy: '',\n        CommentReadDate: '',\n        CommentReference: '',\n        CommentSubmit: null,\n        CommentTopic: '',\n        UserDisplayName: '',\n        CommentOrigin: ''\n      }]; // items[0].Comment = 'Draft Invoice Created';\n      // items[0].CommentBy = 'System';\n      // items[0].Date = '27/06/22';\n      // items[1].Comment = 'Reconciled';\n      // items[1].CommentBy = 'System';\n      // items[1].Date = '27/06/22';\n      // items[2].Comment = 'Partially Reconciled';\n      // items[2].CommentBy = 'System';\n      // items[2].Date = '27/06/22';\n\n      this.dataSource = new MatTableDataSource(items);\n      this.length = items.length; //\n      // this.dataSource.paginator = this.paginator;\n      // this.pageChangeSubscription = this.paginator.page.subscribe(() => {\n      //   this._ChargeActivityRequestModel.pageno = this.paginator.pageIndex;\n      //   this._ChargeActivityRequestModel.top = this.paginator.pageSize;\n      //   this._ChargeActivityRequestModel.skip =\n      //     this._ChargeActivityRequestModel.pageno *\n      //     this._ChargeActivityRequestModel.top;\n      // TODO: will update this\n      // this.wgRefreshData();\n      // });\n      // TODO: attach local handlers\n\n      this.wgOnInit(); // console.log('onInit', this.dataSource);\n    }\n\n    openDialog(rowData) {\n      this.emitEvent('onViewChargeActivity', rowData);\n    }\n\n    onAddComment() {\n      this.emitEvent('onAddComment');\n    }\n\n    ngOnDestroy() {\n      if (this.pageChangeSubscription) {\n        this.pageChangeSubscription.unsubscribe();\n      }\n    }\n\n  }\n\n  ChargeActivityLogTabComponent.ɵfac = function ChargeActivityLogTabComponent_Factory(t) {\n    return new (t || ChargeActivityLogTabComponent)(i0.ɵɵdirectiveInject(i1.ServerApiInterfaceServiceService), i0.ɵɵdirectiveInject(i2.AppRepoHelperService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.NotificationService), i0.ɵɵdirectiveInject(i6.ValidationService));\n  };\n\n  ChargeActivityLogTabComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChargeActivityLogTabComponent,\n    selectors: [[\"app-charge-activity-log-tab\"]],\n    viewQuery: function ChargeActivityLogTabComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    inputs: {\n      dataModel: \"dataModel\",\n      configModel: \"configModel\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"col-md-12\", \"mt-3\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"30\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"left\", \"fxLayoutGap\", \"15px\", 2, \"padding\", \"5px 10px\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"search-input\", 3, \"formControl\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"comments-list\", \"custom-table\"], [\"mat-table\", \"\", \"multiTemplateDataRows\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"Activity\", \"fxFlex\", \"60\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \"padding-left: 20px !important;\", 4, \"matCellDef\"], [\"matColumnDef\", \"InitiatedBy\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"Date\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\", 2, \"padding-left\", \"20px !important\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function ChargeActivityLogTabComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"table\", 9);\n        i0.ɵɵelementContainerStart(11, 10);\n        i0.ɵɵtemplate(12, ChargeActivityLogTabComponent_th_12_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(13, ChargeActivityLogTabComponent_td_13_Template, 2, 1, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(14, 13);\n        i0.ɵɵtemplate(15, ChargeActivityLogTabComponent_th_15_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(16, ChargeActivityLogTabComponent_td_16_Template, 2, 1, \"td\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(17, 15);\n        i0.ɵɵtemplate(18, ChargeActivityLogTabComponent_th_18_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(19, ChargeActivityLogTabComponent_td_19_Template, 3, 3, \"td\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(20, ChargeActivityLogTabComponent_tr_20_Template, 1, 0, \"tr\", 16);\n        i0.ɵɵtemplate(21, ChargeActivityLogTabComponent_tr_21_Template, 1, 0, \"tr\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.searchInput);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.columnsToDisplay);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.columnsToDisplay);\n      }\n    },\n    directives: [i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i7.DefaultLayoutGapDirective, i7.DefaultFlexDirective, i8.DefaultValueAccessor, i8.NgControlStatus, i8.FormControlDirective, i9.MatTable, i9.MatColumnDef, i9.MatHeaderCellDef, i9.MatCellDef, i9.MatHeaderRowDef, i9.MatRowDef, i9.MatHeaderCell, i9.MatCell, i9.MatHeaderRow, i9.MatRow],\n    pipes: [i10.TransformDatePipe],\n    styles: [\".comments-list[_ngcontent-%COMP%]{margin-top:15px;margin-bottom:30px}.blue-text[_ngcontent-%COMP%]{color:var(--stroked-button-bg-color)}.grey-text[_ngcontent-%COMP%]{color:var(--dark-gray-text-color)}.switch-tab[_ngcontent-%COMP%]{width:100%}.blue-btn[_ngcontent-%COMP%]{background-color:var(--stroked-button-bg-color)!important;color:#fff}.plain-btn[_ngcontent-%COMP%]{background-color:none;border-color:none;border-radius:5px!important;text-align:center}.search-input[_ngcontent-%COMP%]{width:100%;padding:.75rem 1.25rem;border:1px solid var(--dark-gray-text-color)}\"]\n  });\n  return ChargeActivityLogTabComponent;\n})();\nconst ELEMENT_DATA1 = [{\n  Comment: '',\n  CommentType: '',\n  CommentBy: '',\n  CommentId: '',\n  Date: '',\n  CommentRead: null,\n  CommentReadBy: '',\n  CommentReadDate: '',\n  CommentReference: '',\n  CommentSubmit: null,\n  CommentTopic: '',\n  UserDisplayName: '',\n  CommentOrigin: ''\n}];","map":null,"metadata":{},"sourceType":"module"}
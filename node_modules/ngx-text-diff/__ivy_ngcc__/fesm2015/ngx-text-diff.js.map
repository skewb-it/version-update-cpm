{"version":3,"file":"ngx-text-diff.js","sources":["ngx-text-diff/lib/ngx-text-diff.utils.ts","ngx-text-diff/lib/ngx-text-diff.service.ts","ngx-text-diff/lib/ngx-text-diff-container.directive.ts","ngx-text-diff/lib/ngx-text-diff.component.ts","ngx-text-diff/lib/loader-spinner/loader-spinner.component.ts","ngx-text-diff/lib/format-line.pipe.ts","ngx-text-diff/lib/ngx-text-diff.module.ts","ngx-text-diff/public_api.ts","ngx-text-diff/ngx-text-diff.ts"],"names":[],"mappings":"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","sourcesContent":["export const isNil = val => val === undefined || val === null;\r\nexport const isEmpty = val => val == null || !(Object.keys(val) || val).length || (Object.keys(val) || val).length === 0;\r\n","import { Injectable } from '@angular/core';\r\nimport { Diff, DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT, diff_match_patch } from 'diff-match-patch';\r\nimport { DiffLineResult, DiffPart, DiffTableRowResult } from './ngx-text-diff.model';\r\nimport { isEmpty, isNil } from './ngx-text-diff.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxTextDiffService {\r\n  diffParser: diff_match_patch;\r\n\r\n  constructor() {\r\n    this.initParser();\r\n  }\r\n\r\n  private initParser() {\r\n    this.diffParser = new diff_match_patch();\r\n  }\r\n\r\n  getDiffsByLines(left: string, right: string): Promise<DiffTableRowResult[]> {\r\n    return new Promise<DiffTableRowResult[]>((resolve, reject) => {\r\n      const a = this.diffParser.diff_linesToChars_(left, right);\r\n      const lineText1 = a.chars1;\r\n      const lineText2 = a.chars2;\r\n      const linesArray = a.lineArray;\r\n      const diffs: Diff[] = this.diffParser.diff_main(lineText1, lineText2, true);\r\n      this.diffParser.diff_charsToLines_(diffs, linesArray);\r\n      const rows: DiffTableRowResult[] = this.formatOutput(diffs);\r\n      if (!rows) {\r\n        reject('Error');\r\n      }\r\n\r\n      resolve(rows);\r\n    });\r\n  }\r\n\r\n  private formatOutput(diffs: Diff[]): DiffTableRowResult[] {\r\n    let lineLeft = 1;\r\n    let lineRight = 1;\r\n    return diffs.reduce((rows: DiffTableRowResult[], diff: Diff) => {\r\n      if (!rows) {\r\n        rows = [];\r\n      }\r\n      const diffType: number = diff[0];\r\n      const diffValue: string = diff[1];\r\n      let leftDiffRow: DiffTableRowResult = null;\r\n      let rightDiffRow: DiffTableRowResult = null;\r\n      let leftContent: DiffLineResult = null;\r\n      let rightContent: DiffLineResult = null;\r\n      let rowTemp: DiffTableRowResult = null;\r\n      switch (diffType) {\r\n        case DIFF_EQUAL: // 0\r\n          diffValue\r\n            .split('\\n')\r\n            .filter((value, index, array) => {\r\n              if (index === array.length - 1) {\r\n                return !isEmpty(value);\r\n              }\r\n              return true;\r\n            })\r\n            .forEach(line => {\r\n              leftContent = {\r\n                lineNumber: lineLeft,\r\n                lineContent: line,\r\n                lineDiffs: [],\r\n                prefix: ''\r\n              };\r\n              rightContent = {\r\n                lineNumber: lineRight,\r\n                lineContent: line,\r\n                lineDiffs: [],\r\n                prefix: ''\r\n              };\r\n              rowTemp = {\r\n                leftContent,\r\n                rightContent,\r\n                belongTo: 'both',\r\n                hasDiffs: false,\r\n                numDiffs: 0,\r\n              };\r\n              rows.push(rowTemp);\r\n              lineRight = lineRight + 1;\r\n              lineLeft = lineLeft + 1;\r\n            });\r\n          break;\r\n        case DIFF_DELETE: // -1\r\n          diffValue\r\n            .split('\\n')\r\n            .filter((value, index, array) => {\r\n              if (index === array.length - 1) {\r\n                return !isEmpty(value);\r\n              }\r\n              return true;\r\n            })\r\n            .forEach(line => {\r\n              rightDiffRow = rows.find(\r\n                row => !row.leftContent && row.rightContent && row.rightContent.lineNumber === lineLeft && row.rightContent.prefix !== ''\r\n              );\r\n              leftContent = {\r\n                lineNumber: lineLeft,\r\n                lineContent: line,\r\n                lineDiffs: [{ content: line, isDiff: true }],\r\n                prefix: '-'\r\n              };\r\n              if (rightDiffRow) {\r\n                rightDiffRow.leftContent = leftContent;\r\n                rightDiffRow.leftContent.lineDiffs = this.getDiffParts(\r\n                  rightDiffRow.leftContent.lineContent,\r\n                  rightDiffRow.rightContent.lineContent\r\n                );\r\n                rightDiffRow.rightContent.lineDiffs = this.getDiffParts(\r\n                  rightDiffRow.rightContent.lineContent,\r\n                  rightDiffRow.leftContent.lineContent\r\n                );\r\n                rightDiffRow.belongTo = 'both';\r\n                rightDiffRow.numDiffs = this.countDiffs(rightDiffRow);\r\n              } else {\r\n                rows.push({\r\n                  leftContent,\r\n                  rightContent: null,\r\n                  hasDiffs: true,\r\n                  belongTo: 'left',\r\n                  numDiffs: 1,\r\n                });\r\n              }\r\n              lineLeft = lineLeft + 1;\r\n            });\r\n          break;\r\n        case DIFF_INSERT: // 1\r\n          diffValue\r\n            .split('\\n')\r\n            .filter((value, index, array) => {\r\n              if (index === array.length - 1) {\r\n                return !isEmpty(value);\r\n              }\r\n              return true;\r\n            })\r\n            .forEach(line => {\r\n              leftDiffRow = rows.find(\r\n                row => row.leftContent && !row.rightContent && row.leftContent.lineNumber === lineRight && row.leftContent.prefix !== ''\r\n              );\r\n              rightContent = {\r\n                lineNumber: lineRight,\r\n                lineContent: line,\r\n                lineDiffs: [{ content: line, isDiff: true }],\r\n                prefix: '+'\r\n              };\r\n              if (leftDiffRow) {\r\n                leftDiffRow.rightContent = rightContent;\r\n                leftDiffRow.leftContent.lineDiffs = this.getDiffParts(\r\n                  leftDiffRow.leftContent.lineContent,\r\n                  leftDiffRow.rightContent.lineContent\r\n                );\r\n                leftDiffRow.rightContent.lineDiffs = this.getDiffParts(\r\n                  leftDiffRow.rightContent.lineContent,\r\n                  leftDiffRow.leftContent.lineContent\r\n                );\r\n                leftDiffRow.belongTo = 'both';\r\n                leftDiffRow.numDiffs = this.countDiffs(leftDiffRow);\r\n              } else {\r\n                rows.push({\r\n                  leftContent: null,\r\n                  rightContent,\r\n                  hasDiffs: true,\r\n                  belongTo: 'right',\r\n                  numDiffs: 1,\r\n                });\r\n              }\r\n              lineRight = lineRight + 1;\r\n            });\r\n          break;\r\n      }\r\n      return rows;\r\n    }, []);\r\n  }\r\n\r\n  private countDiffs(result: DiffTableRowResult): number {\r\n    let diffCount = 0;\r\n    if (result.leftContent) {\r\n      diffCount += result.leftContent.lineDiffs.filter(diff => diff.isDiff).length;\r\n    }\r\n    if (result.leftContent) {\r\n      diffCount += result.rightContent.lineDiffs.filter(diff => diff.isDiff).length;\r\n    }\r\n    return diffCount;\r\n  }\r\n\r\n  private getDiffParts(value: string, compareValue: string): DiffPart[] {\r\n    const diffParts: DiffPart[] = [];\r\n    let i = 0;\r\n    let j = 0;\r\n    let shared = '';\r\n    let diff = '';\r\n\r\n    while (i < value.length) {\r\n      if (value[i] === compareValue[j] && j < compareValue.length) {\r\n        if (diff !== '') {\r\n          diffParts.push({ content: diff, isDiff: true });\r\n          diff = '';\r\n        }\r\n        shared += value[i];\r\n      } else {\r\n        if (shared !== '') {\r\n          diffParts.push({ content: shared, isDiff: false });\r\n          shared = '';\r\n        }\r\n        diff += value[i];\r\n      }\r\n      i++;\r\n      j++;\r\n    }\r\n\r\n    if (diff !== '') {\r\n      diffParts.push({ content: diff, isDiff: true });\r\n    } else if (shared !== '') {\r\n      diffParts.push({ content: shared, isDiff: false });\r\n    }\r\n\r\n    return diffParts;\r\n  }\r\n}\r\n","import { Directive, Input, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[tdContainer]',\r\n})\r\nexport class ContainerDirective {\r\n  @Input() id: string;\r\n\r\n  element: HTMLTableHeaderCellElement;\r\n\r\n  constructor(private _el: ElementRef) {\r\n    this.element = _el.nativeElement;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChildren,\r\n  QueryList,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { DiffContent, DiffPart, DiffTableFormat, DiffTableFormatOption, DiffTableRowResult, DiffResults } from './ngx-text-diff.model';\r\nimport { NgxTextDiffService } from './ngx-text-diff.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ContainerDirective } from './ngx-text-diff-container.directive';\r\nimport { ScrollDispatcher, CdkScrollable } from '@angular/cdk/scrolling';\r\n\r\n@Component({\r\n  selector: 'td-ngx-text-diff',\r\n  templateUrl: './ngx-text-diff.component.html',\r\n  styleUrls: ['./ngx-text-diff.component.css'],\r\n})\r\nexport class NgxTextDiffComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private _hideMatchingLines = false;\r\n  @ViewChildren(ContainerDirective) containers: QueryList<ContainerDirective>;\r\n  @Input() format: DiffTableFormat = 'SideBySide';\r\n  @Input() left = '';\r\n  @Input() right = '';\r\n  @Input() diffContent: Observable<DiffContent>;\r\n  @Input() loading = false;\r\n  @Input() showToolbar = true;\r\n  @Input() showBtnToolbar = true;\r\n  @Input()\r\n  get hideMatchingLines() {\r\n    return this._hideMatchingLines;\r\n  }\r\n\r\n  set hideMatchingLines(hide: boolean) {\r\n    this.hideMatchingLinesChanged(hide);\r\n  }\r\n  @Input() outerContainerClass: string;\r\n  @Input() outerContainerStyle: any;\r\n  @Input() toolbarClass: string;\r\n  @Input() toolbarStyle: any;\r\n  @Input() compareRowsClass: string;\r\n  @Input() compareRowsStyle: any;\r\n  @Input() synchronizeScrolling = true;\r\n  @Output() compareResults = new EventEmitter<DiffResults>();\r\n  subscriptions: Subscription[] = [];\r\n  tableRows: DiffTableRowResult[] = [];\r\n  filteredTableRows: DiffTableRowResult[] = [];\r\n  tableRowsLineByLine: DiffTableRowResult[] = [];\r\n  filteredTableRowsLineByLine: DiffTableRowResult[] = [];\r\n  diffsCount = 0;\r\n\r\n  formatOptions: DiffTableFormatOption[] = [\r\n    {\r\n      id: 'side-by-side',\r\n      name: 'side-by-side',\r\n      label: 'Side by Side',\r\n      value: 'SideBySide',\r\n      icon: 'la-code',\r\n    },\r\n    {\r\n      id: 'line-by-line',\r\n      name: 'line-by-line',\r\n      label: 'Line by Line',\r\n      value: 'LineByLine',\r\n      icon: 'la-file-text',\r\n    },\r\n  ];\r\n\r\n  constructor(private scrollService: ScrollDispatcher, private diff: NgxTextDiffService, private cd: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    if (this.diffContent) {\r\n      this.subscriptions.push(\r\n        this.diffContent.subscribe(content => {\r\n          this.loading = true;\r\n          this.left = content.leftContent;\r\n          this.right = content.rightContent;\r\n          this.renderDiffs()\r\n            .then(() => {\r\n              this.cd.detectChanges();\r\n              this.loading = false;\r\n            })\r\n            .catch(() => (this.loading = false));\r\n        })\r\n      );\r\n    }\r\n    this.renderDiffs()\r\n      .then(() => (this.loading = false))\r\n      .catch(e => (this.loading = false));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initScrollListener();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscriptions) {\r\n      this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n    }\r\n  }\r\n\r\n  hideMatchingLinesChanged(value: boolean) {\r\n    this._hideMatchingLines = value;\r\n    if (this.hideMatchingLines) {\r\n      this.filteredTableRows = this.tableRows.filter(\r\n        row => (row.leftContent && row.leftContent.prefix === '-') || (row.rightContent && row.rightContent.prefix === '+')\r\n      );\r\n      this.filteredTableRowsLineByLine = this.tableRowsLineByLine.filter(\r\n        row => (row.leftContent && row.leftContent.prefix === '-') || (row.rightContent && row.rightContent.prefix === '+')\r\n      );\r\n    } else {\r\n      this.filteredTableRows = this.tableRows;\r\n      this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\r\n    }\r\n  }\r\n\r\n  setDiffTableFormat(format: DiffTableFormat) {\r\n    this.format = format;\r\n  }\r\n\r\n  async renderDiffs() {\r\n    try {\r\n      this.diffsCount = 0;\r\n      this.tableRows = await this.diff.getDiffsByLines(this.left, this.right);\r\n      this.tableRowsLineByLine = this.tableRows.reduce((tableLineByLine: DiffTableRowResult[], row: DiffTableRowResult) => {\r\n        if (!tableLineByLine) {\r\n          tableLineByLine = [];\r\n        }\r\n        if (row.hasDiffs) {\r\n          if (row.leftContent) {\r\n            tableLineByLine.push({\r\n              leftContent: row.leftContent,\r\n              rightContent: null,\r\n              belongTo: row.belongTo,\r\n              hasDiffs: true,\r\n              numDiffs: row.numDiffs,\r\n            });\r\n          }\r\n          if (row.rightContent) {\r\n            tableLineByLine.push({\r\n              leftContent: null,\r\n              rightContent: row.rightContent,\r\n              belongTo: row.belongTo,\r\n              hasDiffs: true,\r\n              numDiffs: row.numDiffs,\r\n            });\r\n          }\r\n        } else {\r\n          tableLineByLine.push(row);\r\n        }\r\n\r\n        return tableLineByLine;\r\n      }, []);\r\n      this.diffsCount = this.tableRows.filter(row => row.hasDiffs).length;\r\n      this.filteredTableRows = this.tableRows;\r\n      this.filteredTableRowsLineByLine = this.tableRowsLineByLine;\r\n      this.emitCompareResultsEvent();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  emitCompareResultsEvent() {\r\n    const diffResults: DiffResults = {\r\n      hasDiff: this.diffsCount > 0,\r\n      diffsCount: this.diffsCount,\r\n      rowsWithDiff: this.tableRows\r\n        .filter(row => row.hasDiffs)\r\n        .map(row => ({\r\n          leftLineNumber: row.leftContent ? row.leftContent.lineNumber : null,\r\n          rightLineNumber: row.rightContent ? row.rightContent.lineNumber : null,\r\n          numDiffs: row.numDiffs,\r\n        })),\r\n    };\r\n\r\n    this.compareResults.next(diffResults);\r\n  }\r\n\r\n  trackTableRows(index, row: DiffTableRowResult) {\r\n    return row && row.leftContent ? row.leftContent.lineContent : row && row.rightContent ? row.rightContent.lineContent : undefined;\r\n  }\r\n\r\n  trackDiffs(index, diff: DiffPart) {\r\n    return diff && diff.content ? diff.content : undefined;\r\n  }\r\n\r\n  private initScrollListener() {\r\n    this.subscriptions.push(this.scrollService.scrolled().subscribe((scrollableEv: CdkScrollable) => {\r\n      if (scrollableEv && this.synchronizeScrolling) {\r\n        const scrollableId = scrollableEv.getElementRef().nativeElement.id;\r\n        const nonScrolledContainer: ContainerDirective = this.containers.find(container => container.id !== scrollableId);\r\n        if (nonScrolledContainer) {\r\n          nonScrolledContainer.element.scrollTo({\r\n            top: scrollableEv.measureScrollOffset('top'),\r\n            left: scrollableEv.measureScrollOffset('left'),\r\n          });\r\n        }\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'td-loader-spinner',\r\n  templateUrl: './loader-spinner.component.html',\r\n  styleUrls: ['./loader-spinner.component.css']\r\n})\r\nexport class LoaderSpinnerComponent implements OnInit {\r\n  @Input() active = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatLine'\r\n})\r\nexport class FormatLinePipe implements PipeTransform {\r\n  transform(line: string, diffs?: string[]): string {\r\n    if (!line) {\r\n      return ' ';\r\n    }\r\n    if (!!diffs && diffs.length > 0) {\r\n      /*diffs.forEach(diff => {\r\n        line = line.replace(diff, `<span class=\"highli\">${diff}</span>`);\r\n      });*/\r\n    }\r\n    return line\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/ /g, '&nbsp;');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxTextDiffComponent } from './ngx-text-diff.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoaderSpinnerComponent } from './loader-spinner/loader-spinner.component';\r\nimport { FormatLinePipe } from './format-line.pipe';\r\nimport { ContainerDirective } from './ngx-text-diff-container.directive';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, ScrollingModule],\r\n  declarations: [NgxTextDiffComponent, LoaderSpinnerComponent, FormatLinePipe, ContainerDirective],\r\n  exports: [NgxTextDiffComponent],\r\n})\r\nexport class NgxTextDiffModule {}\r\n","/*\r\n * Public API Surface of ngx-text-diff\r\n */\r\n\r\nexport * from './lib/ngx-text-diff.service';\r\nexport * from './lib/ngx-text-diff.component';\r\nexport * from './lib/ngx-text-diff.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {FormatLinePipe as ɵc} from './lib/format-line.pipe';\nexport {LoaderSpinnerComponent as ɵb} from './lib/loader-spinner/loader-spinner.component';\nexport {ContainerDirective as ɵa} from './lib/ngx-text-diff-container.directive';"]}